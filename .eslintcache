[{"E:\\web-touch-news\\src\\index.js":"1","E:\\web-touch-news\\src\\context.js":"2","E:\\web-touch-news\\src\\reportWebVitals.js":"3","E:\\web-touch-news\\src\\Root.js":"4","E:\\web-touch-news\\src\\App.js":"5","E:\\web-touch-news\\src\\pages\\login\\index.js":"6","E:\\web-touch-news\\src\\components\\router\\index.js":"7","E:\\web-touch-news\\src\\components\\layout\\sider\\index.js":"8","E:\\web-touch-news\\src\\components\\layout\\header\\index.js":"9","E:\\web-touch-news\\src\\config.js":"10","E:\\web-touch-news\\src\\HttpClient.js":"11","E:\\web-touch-news\\src\\pages\\profile\\index.js":"12","E:\\web-touch-news\\src\\pages\\viewNews\\index.js":"13","E:\\web-touch-news\\src\\pages\\admin\\home\\index.js":"14","E:\\web-touch-news\\src\\pages\\super\\manage\\index.js":"15","E:\\web-touch-news\\src\\pages\\super\\home\\index.js":"16","E:\\web-touch-news\\src\\components\\layout\\tag\\index.js":"17","E:\\web-touch-news\\src\\components\\layout\\froala\\index.js":"18","E:\\web-touch-news\\src\\components\\layout\\modal\\index.js":"19","E:\\web-touch-news\\src\\components\\layout\\table\\index.js":"20","E:\\web-touch-news\\src\\components\\layout\\timeline\\index.js":"21","E:\\web-touch-news\\src\\pages\\admin\\news\\index.js":"22","E:\\web-touch-news\\src\\core\\actions\\collection.js":"23","E:\\web-touch-news\\src\\components\\layout\\box\\index.js":"24","E:\\web-touch-news\\src\\core\\schemas\\index.js":"25"},{"size":585,"mtime":1614924797896,"results":"26","hashOfConfig":"27"},{"size":578,"mtime":1615173220520,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1612938333687,"results":"29","hashOfConfig":"27"},{"size":673,"mtime":1614924797810,"results":"30","hashOfConfig":"27"},{"size":699,"mtime":1615185184661,"results":"31","hashOfConfig":"27"},{"size":3809,"mtime":1615185184691,"results":"32","hashOfConfig":"27"},{"size":1450,"mtime":1615185184668,"results":"33","hashOfConfig":"27"},{"size":1942,"mtime":1615185184667,"results":"34","hashOfConfig":"27"},{"size":3662,"mtime":1615185184665,"results":"35","hashOfConfig":"27"},{"size":64,"mtime":1614924797889,"results":"36","hashOfConfig":"27"},{"size":1701,"mtime":1614924797809,"results":"37","hashOfConfig":"27"},{"size":14117,"mtime":1615185184694,"results":"38","hashOfConfig":"27"},{"size":10510,"mtime":1615185184700,"results":"39","hashOfConfig":"27"},{"size":10989,"mtime":1615191167069,"results":"40","hashOfConfig":"27"},{"size":11816,"mtime":1614924797938,"results":"41","hashOfConfig":"27"},{"size":11134,"mtime":1615185184699,"results":"42","hashOfConfig":"27"},{"size":478,"mtime":1614924797879,"results":"43","hashOfConfig":"27"},{"size":1452,"mtime":1615185184665,"results":"44","hashOfConfig":"27"},{"size":1418,"mtime":1615185184666,"results":"45","hashOfConfig":"27"},{"size":835,"mtime":1614924797875,"results":"46","hashOfConfig":"27"},{"size":2805,"mtime":1614924797882,"results":"47","hashOfConfig":"27"},{"size":15289,"mtime":1615189920433,"results":"48","hashOfConfig":"27"},{"size":749,"mtime":1615190363975,"results":"49","hashOfConfig":"27"},{"size":558,"mtime":1615185249739,"results":"50","hashOfConfig":"27"},{"size":153,"mtime":1615190274022,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"xzs7i7",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\web-touch-news\\src\\index.js",[],["110","111"],"E:\\web-touch-news\\src\\context.js",[],"E:\\web-touch-news\\src\\reportWebVitals.js",[],"E:\\web-touch-news\\src\\Root.js",[],"E:\\web-touch-news\\src\\App.js",[],"E:\\web-touch-news\\src\\pages\\login\\index.js",[],"E:\\web-touch-news\\src\\components\\router\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\sider\\index.js",["112"],"import { HomeOutlined, SettingOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst Siderbar = (props) => {\r\n  const type = localStorage.getItem(\"role\");\r\n  const [activeMenu, setActiveMenu] = useState(props.location.pathname);\r\n\r\n  useEffect(() => {\r\n    setActiveMenu(props.location.pathname);\r\n    console.log(\"props.location\", props.location);\r\n    if (props.location.pathname === \"/\") {\r\n      setActiveMenu(\"/home\");\r\n    } else if (props.location.pathname.substring(1, 5) === \"home\") {\r\n      setActiveMenu(\"/home\");\r\n    }\r\n  }, [props.location.pathname]);\r\n\r\n  return (\r\n    <Sider\r\n      width={200}\r\n      className=\"site-layout-background\"\r\n      breakpoint=\"lg\"\r\n      collapsedWidth=\"0\"\r\n    >\r\n      <div className=\"logo\">\r\n        {type === \"superadmin\" ? <>SUPER ADMIN</> : <>ADMIN</>}\r\n      </div>\r\n      <Menu\r\n        mode=\"inline\"\r\n        selectedKeys={[activeMenu]}\r\n        style={{ height: \"100%\", borderRight: 0 }}\r\n      >\r\n        <Menu.Item\r\n          key=\"/home\"\r\n          onClick={() => setActiveMenu(\"/home\")}\r\n          icon={<HomeOutlined />}\r\n        >\r\n          <Link to=\"/home\">หน้าแรก</Link>\r\n        </Menu.Item>\r\n        {type === \"superadmin\" ? (\r\n          <Menu.Item\r\n            key=\"/manage\"\r\n            onClick={() => setActiveMenu(\"/manage\")}\r\n            icon={<UserOutlined />}\r\n          >\r\n            <Link to=\"/manage\">ผู้ดูแลระบบ</Link>\r\n          </Menu.Item>\r\n        ) : null}\r\n        <Menu.Item\r\n          key=\"/profile\"\r\n          onClick={() => setActiveMenu(\"/profile\")}\r\n          icon={<SettingOutlined />}\r\n        >\r\n          <Link to=\"/profile\">โปรไฟล์</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Siderbar;\r\n","E:\\web-touch-news\\src\\components\\layout\\header\\index.js",["113","114","115","116","117","118"],"import {\r\n  Avatar,\r\n  Badge,\r\n  Col,\r\n  Layout,\r\n  Popover,\r\n  Row,\r\n  Tooltip,\r\n  message,\r\n} from \"antd\";\r\nimport { BellOutlined, ExportOutlined } from \"@ant-design/icons\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Context } from \"../../../context\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst Headerbar = () => {\r\n  const context = useContext(Context);\r\n  const user = context.user;\r\n  const [dataUser, setDataUser] = useState({\r\n    image: \"\",\r\n    firstname: \"\",\r\n    badge: null,\r\n  });\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleVisibleChange = (visible) => {\r\n    setVisible(visible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [user.firstname, user.lastname, user.image]);\r\n\r\n  const getData = () => {\r\n    const setData = localStorage.getItem(\"id\");\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/user/\" + setData)\r\n      .then(function (response) {\r\n        const code = response?.data?.code;\r\n        const data = response?.data?.data || \"\";\r\n        if (code === 200) {\r\n          setDataUser({\r\n            image: data.image,\r\n            firstname: data.firstname,\r\n            badge: 2,\r\n          });\r\n          context.setData({\r\n            email: data.email,\r\n            image: data.image,\r\n            firstname: data.firstname,\r\n            lastname: data.lastname,\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onLogout = () => {\r\n    httpClient\r\n      .post(config.REACT_APP_BASEURL + \"/logout\")\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          localStorage.setItem(\"access_token\", \"\");\r\n          localStorage.setItem(\"refresh_token\", \"\");\r\n          localStorage.setItem(\"role\", \"\");\r\n          localStorage.setItem(\"id\", \"\");\r\n          message.success(\"ออกจากระบบสำเร็จ\");\r\n          window.location.reload();\r\n        } else {\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Header className=\"header\">\r\n      <Row>\r\n        <Col span={12}>\r\n          <div className=\"header-text\">\r\n            T<p className=\"login-text-o\">o</p>uch k\r\n            <p className=\"login-text-o\">o</p>rat news\r\n          </div>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Row justify=\"end\">\r\n            <Col>\r\n              <Avatar size={40} src={dataUser.image} />\r\n            </Col>\r\n            <Col className=\"header-name\">{dataUser.firstname}</Col>\r\n            {/* <Col className=\"header-col-icon\">\r\n              <Popover\r\n                placement=\"bottomRight\"\r\n                content={\r\n                  <div>\r\n                    <p>Content</p>\r\n                    <p>Content</p>\r\n                  </div>\r\n                }\r\n                trigger=\"click\"\r\n                visible={visible}\r\n                onVisibleChange={handleVisibleChange}\r\n              >\r\n                <Badge count={dataUser.badge} size=\"small\">\r\n                                    <BellOutlined className=\"header-icon\" />\r\n                                </Badge>\r\n              </Popover>\r\n            </Col> */}\r\n            <Col>\r\n              <Tooltip placement=\"bottomRight\" title=\"ออกจากระบบ\">\r\n                <ExportOutlined className=\"header-icon\" onClick={onLogout} />\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Headerbar;\r\n","E:\\web-touch-news\\src\\config.js",[],"E:\\web-touch-news\\src\\HttpClient.js",[],"E:\\web-touch-news\\src\\pages\\profile\\index.js",["119","120"],"import {\r\n  Avatar,\r\n  Breadcrumb,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Layout,\r\n  Row,\r\n  Spin,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  ExclamationCircleOutlined,\r\n  HomeOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Context } from \"../../context\";\r\nimport FormData from \"form-data\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from \"components/layout/modal\";\r\nimport axios from \"axios\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\n\r\nconst { Content } = Layout;\r\nconst layout = {\r\n  labelCol: {\r\n    xs: { span: 2 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  },\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const context = useContext(Context);\r\n  const [formValue] = Form.useForm();\r\n  const params = props.match.params;\r\n  const [image, setImage] = useState(\"\");\r\n  const [spinningImage, setSpinningImage] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [showInputPass, setShowInputPass] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    type: \"\",\r\n    icon: null,\r\n    title: \"\",\r\n    okColor: \"\",\r\n    content: \"\",\r\n    okText: \"\",\r\n  });\r\n  const setId =\r\n    params.state === \"manage\" ? params.id : localStorage.getItem(\"id\");\r\n\r\n  useEffect(() => {\r\n    if (props.location.pathname === \"/profile\") {\r\n      getData();\r\n    } else {\r\n      getDataAdmin();\r\n    }\r\n  }, [params, context]);\r\n\r\n  const getData = () => {\r\n    const data = context.user;\r\n    setImage(data.image);\r\n    formValue.setFieldsValue({\r\n      email: data.email,\r\n      firstname: data.firstname,\r\n      lastname: data.lastname,\r\n      passwordNew: \"\",\r\n      passwordConfirm: \"\",\r\n    });\r\n  };\r\n\r\n  const getDataAdmin = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/user/\" + setId)\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          setImage(response.data.data.image);\r\n          formValue.setFieldsValue({\r\n            email: response.data.data.email,\r\n            firstname: response.data.data.firstname,\r\n            lastname: response.data.data.lastname,\r\n            passwordNew: \"\",\r\n            passwordConfirm: \"\",\r\n          });\r\n        } else {\r\n          message.error(\"โหลดข้อมูลล้มเหลว\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onLogout = () => {\r\n    httpClient\r\n      .post(config.REACT_APP_BASEURL + \"/logout\")\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          localStorage.setItem(\"access_token\", \"\");\r\n          localStorage.setItem(\"refresh_token\", \"\");\r\n          localStorage.setItem(\"role\", \"\");\r\n          localStorage.setItem(\"id\", \"\");\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const conFirmPassword = () => {\r\n    setModalData({\r\n      type: \"confirm\",\r\n      icon: <ExclamationCircleOutlined className=\"manage-icon-edit\" />,\r\n      title: \"ยืนยันการสร้างรหัสผ่านใหม่\",\r\n      okColor: \"orange\",\r\n      okText: \"ตกลง\",\r\n      content: \"คุณต้องการยืนยันการสร้างรหัสใหม่นี้หรือไม่ !!! \",\r\n      onOk() {\r\n        httpClient\r\n          .put(config.REACT_APP_BASEURL + \"/admin/reset_password/\" + setId)\r\n          .then(function (response) {\r\n            const code = response.data.code;\r\n            if (code === 201) {\r\n              setModalData({\r\n                type: \"show\",\r\n                icon: <UserOutlined className=\"manage-icon-insert\" />,\r\n                title: \"เปลี่ยนรหัสผ่านสำเร็จ\",\r\n                okColor: \"#216258\",\r\n                okText: \"ตกลง\",\r\n                onOk() {\r\n                  offModal();\r\n                },\r\n                content: {\r\n                  email: response.data.data.email,\r\n                  password: response.data.data.password,\r\n                },\r\n              });\r\n              onModal();\r\n            } else {\r\n              message.error(\"เปลี่ยนรหัสผ่านไม่สำเร็จ\");\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error(\"เปลี่ยนรหัสผ่านไม่สำเร็จ\");\r\n          });\r\n      },\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const showCancelUpdate = () => {\r\n    // formValue.getFieldsValue();\r\n    // console.log(\"object\", formValue.getFieldsValue().firstname);\r\n    return false;\r\n  };\r\n\r\n  const cancelUpdate = () => {\r\n    getData();\r\n    setShowInputPass(false);\r\n    formValue.setFieldsValue({\r\n      password: \"\",\r\n      confirm: \"\",\r\n    });\r\n  };\r\n\r\n  const submitUpdate = (value) => {\r\n    if (showInputPass === true) {\r\n      const setData = JSON.stringify({\r\n        password: value.password,\r\n      });\r\n      httpClient\r\n        .put(config.REACT_APP_BASEURL + \"/user/password/\" + setId, setData)\r\n        .then(function (response) {\r\n          message.success(\"เปลี่ยนรหัสผ่านสำเร็จ\");\r\n          onLogout();\r\n        })\r\n        .catch(function (error) {\r\n          message.error(\"เปลี่ยนรหัสผ่านไม่สำเร็จ\");\r\n        });\r\n      formValue.setFieldsValue({\r\n        password: \"\",\r\n        confirm: \"\",\r\n      });\r\n    } else {\r\n      const setData = JSON.stringify({\r\n        firstname: value.firstname,\r\n        lastname: value.lastname,\r\n        image: image,\r\n      });\r\n      httpClient\r\n        .put(config.REACT_APP_BASEURL + \"/user/update/\" + setId, setData)\r\n        .then(function (response) {\r\n          if (response.data.code === 200) {\r\n            message.success(response.data.message);\r\n            context.setData({\r\n              image: image,\r\n              firstname: value.firstname,\r\n              lastname: value.lastname,\r\n            });\r\n            let setData = new FormData();\r\n            setData.append(\"url\", image);\r\n            axios\r\n              .post(config.REACT_APP_IMGAE + \"/savefile\", setData)\r\n              .then(function (response) {})\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const ShowInputPassword = () => {\r\n    if (showInputPass === false) {\r\n      setShowInputPass(true);\r\n    } else {\r\n      setShowInputPass(false);\r\n      formValue.setFieldsValue({\r\n        password: \"\",\r\n        confirm: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const customRequest = (option) => {\r\n    setSpinningImage(true);\r\n    let setData = new FormData();\r\n    setData.append(\"sampleFile\", option.file);\r\n    setData.append(\"save\", false);\r\n    axios\r\n      .post(config.REACT_APP_IMGAE + \"/upload\", setData)\r\n      .then(function (response) {\r\n        const status = response.status;\r\n        const data = response.data;\r\n        if (status === 200) {\r\n          setImage(data.url);\r\n          setSpinningImage(false);\r\n        } else {\r\n          setSpinningImage(false);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ padding: \"1px 0\" }}>\r\n        {params.state === \"manage\" ? (\r\n          <>\r\n            <Breadcrumb.Item>\r\n              <HomeOutlined />\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\r\n            <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Breadcrumb.Item>\r\n              <HomeOutlined />\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\r\n          </>\r\n        )}\r\n      </Breadcrumb>\r\n      <Content className=\"profile-layout-background\">\r\n        <Row justify=\"center\" gutter={[16, 16]} style={{ marginTop: \"20px\" }}>\r\n          <Col>\r\n            <Spin spinning={spinningImage}>\r\n              <Avatar\r\n                size={{ xs: 150, sm: 150, md: 150, lg: 150, xl: 150, xxl: 250 }}\r\n                src={image}\r\n              />\r\n            </Spin>\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"center\" gutter={[16, 16]}>\r\n          <Col>\r\n            <Upload\r\n              listType=\"picture\"\r\n              customRequest={customRequest}\r\n              showUploadList={false}\r\n            >\r\n              <Button>อัพโหลดรูปภาพโปรไฟล์</Button>\r\n            </Upload>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Col\r\n            xs={{ span: 22, offset: 1 }}\r\n            sm={{ span: 22, offset: 1 }}\r\n            md={{ span: 18, offset: 2 }}\r\n            lg={{ span: 18, offset: 2 }}\r\n            xl={{ span: 18, offset: 2 }}\r\n          >\r\n            <Form form={formValue} onFinish={submitUpdate}>\r\n              <Form.Item name=\"email\" label=\"อีเมล\" {...layout}>\r\n                <Input disabled={true} />\r\n              </Form.Item>\r\n              <Form.Item name=\"firstname\" label=\"ชื่อ\" {...layout}>\r\n                <Input disabled={showInputPass} />\r\n              </Form.Item>\r\n              <Form.Item name=\"lastname\" label=\"นามสกุล\" {...layout}>\r\n                <Input disabled={showInputPass} />\r\n              </Form.Item>\r\n              <Form.Item className=\"profile-right\">\r\n                {params.state === \"manage\" ? (\r\n                  <Button type=\"link\" onClick={conFirmPassword}>\r\n                    <u>เปลี่ยนรหัสผ่าน</u>\r\n                  </Button>\r\n                ) : (\r\n                  <Button type=\"link\" onClick={ShowInputPassword}>\r\n                    <u>เปลี่ยนรหัสผ่าน</u>\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n              {showInputPass === true ? (\r\n                <>\r\n                  <Form.Item\r\n                    {...layout}\r\n                    name=\"password\"\r\n                    label=\"รหัสผ่านใหม่\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"รหัสผ่านไม่ถูกต้อง !\",\r\n                      },\r\n                    ]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"ยืนยันรหัสผ่านใหม่\"\r\n                    {...layout}\r\n                    dependencies={[\"password\"]}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"รหัสผ่านไม่ถูกต้อง !\",\r\n                      },\r\n                      ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                          if (!value || getFieldValue(\"password\") === value) {\r\n                            return Promise.resolve();\r\n                          }\r\n\r\n                          return Promise.reject(\r\n                            new Error(\"รหัสผ่านไม่ถูกต้อง\")\r\n                          );\r\n                        },\r\n                      }),\r\n                    ]}\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n                </>\r\n              ) : null}\r\n              <Form.Item className=\"profile-right\">\r\n                <Button\r\n                  className=\"profile-button\"\r\n                  type=\"primary\"\r\n                  ghost\r\n                  htmlType=\"submit\"\r\n                >\r\n                  บันทึก\r\n                </Button>\r\n                {params.state === \"manage\" ? (\r\n                  <Link to=\"/manage\">\r\n                    <Button\r\n                      className=\"profile-button\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      ยกเลิก\r\n                    </Button>\r\n                  </Link>\r\n                ) : (\r\n                  <Button\r\n                    className=\"profile-button\"\r\n                    onClick={cancelUpdate}\r\n                    style={{ marginLeft: \"10px\" }}\r\n                  >\r\n                    ยกเลิก\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={modalData.onOk}\r\n        onCancel={offModal}\r\n        modalData={modalData}\r\n      >\r\n        {modalData.type === \"show\" ? (\r\n          <>\r\n            <div style={{ marginLeft: \"80px\" }}>\r\n              อีเมล : {modalData.content.email}\r\n            </div>\r\n            <div style={{ marginLeft: \"80px\" }}>\r\n              รหัสผ่าน {modalData.content.password}\r\n            </div>\r\n            <div\r\n              style={{ marginLeft: \"40px\", marginTop: \"20px\", color: \"red\" }}\r\n            >\r\n              *ระบบจะแสดงข้อมูลเพียงครั้งเดียว*\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p style={{ marginLeft: \"80px\" }}>{modalData.content}</p>\r\n        )}\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\web-touch-news\\src\\pages\\viewNews\\index.js",["121","122"],"import { Breadcrumb, Button, Col, Dropdown, Image, Input, Layout, Menu, Row, Select, Tag, message } from 'antd'\r\nimport { DeleteOutlined, EditOutlined, MoreOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { FroalaView } from 'components/layout/froala/index'\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from 'components/layout/modal'\r\nimport Timeline from 'components/layout/timeline'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\nimport imgError from 'assets/image/img_error2.png'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst View = (props) => {\r\n    const params = props.match.params;\r\n    const role = localStorage.getItem('role')\r\n    const [dataNews, setDataNews] = useState({})\r\n    const [statusNews, setStatusNews] = useState();\r\n    const [cause, setCause] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: null, okText: '' });\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect')\r\n        getData()\r\n    }, [params])\r\n\r\n    const getData = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/news/info/' + params.id)\r\n            .then(function (response) {\r\n                const code = response.data.code\r\n                const data = response.data.data\r\n                const hashtag = response.data.data.hashtag\r\n                const credit = response.data.data.credit\r\n                if (code === 200) {\r\n                    const hashtagMap = hashtag.map((hashtag, key) => {\r\n                        hashtag = <Tag key={key} color=\"#87d068\">{hashtag}</Tag>\r\n                        return hashtag\r\n                    })\r\n                    const creditMap = credit.map((credit, key) => {\r\n                        credit = <Tag key={key} color=\"#108ee9\">{credit}</Tag>\r\n                        return credit\r\n                    })\r\n                    setDataNews({ ...data, hashtag: hashtagMap, credit: creditMap })\r\n                    setStatusNews(data.status)\r\n                    setCause(data.cause)\r\n                } else {\r\n                    setDataNews()\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const handleSelectStatus = (value) => {\r\n        setStatusNews(value)\r\n        console.log('value', value)\r\n    }\r\n\r\n    const changeCause = ({ target: { value } }) => {\r\n        setCause(value)\r\n        console.log('value', cause)\r\n    }\r\n\r\n    const submitUpdate = (status) => {\r\n        const setData = JSON.stringify({\r\n            \"status\": status,\r\n            \"cause\": cause,\r\n        })\r\n        httpClient.put(config.REACT_APP_BASEURL + '/news/update_status/' + params.id, setData)\r\n            .then(function (response) {\r\n                const code = response.data.code\r\n                if (code === 200) {\r\n                    message.success(response.data.message);\r\n                    setDataNews({ ...dataNews, status: status })\r\n                } else {\r\n                    message.success(response.data.message);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const onDelete = () => {\r\n        setModalData({\r\n            type: 'confirm',\r\n            icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n            title: 'คุณต้องการลบข่าวนี้ หรือไม่ ! ',\r\n            okColor: 'red',\r\n            okText: 'ลบ',\r\n            onOk() {\r\n                offModal()\r\n                httpClient.delete(config.REACT_APP_BASEURL + '/news/' + params.id)\r\n                    .then(function (response) {\r\n                        const code = response.data.code\r\n                        if (code === 200) {\r\n                            message.success(response.data.message);\r\n                            props.history.push(\"/home\")\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                        message.error(error.data.message);\r\n                    })\r\n            },\r\n            content: dataNews.topic,\r\n        })\r\n        onModal()\r\n    }\r\n    const onModal = () => {\r\n        setIsModalVisible(true)\r\n    };\r\n\r\n    const offModal = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const onErrorImg = (e) => {\r\n        e.target.src = imgError\r\n    }\r\n\r\n    const menu = () => {\r\n        if (dataNews.status === 'ร่าง' || dataNews.status === 'แก้ไข') {\r\n            return (\r\n                <Menu>\r\n                    <Menu.Item >\r\n                        <Link to={`/home/edit/${params.id}`}>\r\n                            <EditOutlined style={{ color: 'orange' }}></EditOutlined>\r\n                            แก้ไข\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        onClick={() => { onDelete() }}\r\n                    >\r\n                        <DeleteOutlined style={{ color: 'red' }} ></DeleteOutlined>\r\n                    ลบ\r\n                </Menu.Item>\r\n                </Menu>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Menu>\r\n                    <Menu.Item disabled>\r\n                        <EditOutlined style={{ color: '#DADADA' }} ></EditOutlined>\r\n                            แก้ไข\r\n                    </Menu.Item>\r\n                    <Menu.Item disabled>\r\n                        <DeleteOutlined style={{ color: '#DADADA' }} ></DeleteOutlined>\r\n                        ลบ\r\n                    </Menu.Item>\r\n                </Menu>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumb style={{ margin: '4px 0' }}>\r\n                <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n                <Breadcrumb.Item>ข่าว</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Content className=\"view-Content\">\r\n                <Row align=\"middle\">\r\n                    <Col flex='auto'>\r\n                        <div className=\"view-titel-news\">{dataNews.topic}</div>\r\n                    </Col>\r\n                    {role === 'admin' ?\r\n                        <Row>\r\n                            <Col>\r\n                                {/* สถานะ {dataNews.status} */}\r\n                            </Col>\r\n                            <Col flex='15px'>\r\n                                <Dropdown placement=\"bottomRight\" overlay={menu()}><MoreOutlined style={{ fontSize: '20px' }} /></Dropdown>\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        null\r\n                    }\r\n                </Row>\r\n                <hr />\r\n                <Row justify=\"center\">\r\n                    <Col span={10} justify=\"center\">\r\n                        <Image\r\n                            style={{ padding: '20px' }}\r\n                            width={'100%'}\r\n                            src={dataNews.image}\r\n                            onError={onErrorImg}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row justify=\"center\">\r\n                    <Col span={10}>\r\n                        <FroalaView\r\n                            model={dataNews.content}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[0, 10]} >\r\n                    <Col flex=\"60px\">แฮชแท็ก</Col>\r\n                    <Col>{dataNews.hashtag}</Col>\r\n                </Row>\r\n                <Row gutter={[0, 10]} >\r\n                    <Col flex=\"60px\">เครดิต</Col>\r\n                    <Col>{dataNews.credit}</Col>\r\n                </Row>\r\n\r\n                <Row gutter={[0, 10]}>\r\n                    <Col flex=\"60px\">ผู้ดูแล : </Col>\r\n                    <Col>{dataNews.by}</Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <h3>ไทม์ไลน์</h3>\r\n                        <div style={{ width: \"400px\", marginTop: '20px' }}>\r\n                            <Timeline idNews={params.id}></Timeline>\r\n                        </div>\r\n                    </Col>\r\n                    {role === 'superadmin' ?\r\n                        <Col span={12} >\r\n                            <h3>เปลี่ยนสถานะข่าว</h3>\r\n                            <Row style={{ marginTop: '20px' }}>\r\n                                <Col span={4} >\r\n                                    สถานะ :\r\n                            </Col>\r\n                                <Col span={20}>\r\n                                    <Input.Group>\r\n                                        <Select placeholder={statusNews} onChange={handleSelectStatus} className=\"view-Input-Group\">\r\n                                            {/* <Option value=\"ส่ง\">ส่ง</Option> */}\r\n                                            <Option value=\"ร่าง\">ร่าง</Option>\r\n                                            <Option value=\"อนุมัติ\">อนุมัติ</Option>\r\n                                            <Option value=\"สาธารณะ\">สาธารณะ</Option>\r\n                                        </Select>\r\n                                    </Input.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={20} offset={4}>\r\n                                    {statusNews === 'ร่าง' ?\r\n                                        <div className=\"view-Input-TextArea\">\r\n                                            <div style={{ color: 'red' }}>*กรุณากรอกสิ่งที่ต้องแก้ไข</div>\r\n                                            <TextArea value={cause} autoSize={{ minRows: 1, maxRows: 5 }} onChange={changeCause} />\r\n                                        </div>\r\n                                        : null\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        : null\r\n                    }\r\n                </Row>\r\n                <Row justify=\"end\" style={{ marginTop: '20px' }}>\r\n                    {role === 'superadmin' ?\r\n\r\n                        <>\r\n                            <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate(statusNews) }} >บันทึก</Button>\r\n                            <Button className=\"view-Button\" onClick={onDelete} danger>ลบ</Button>\r\n                            <Link to=\"/home\">\r\n                                <Button className=\"view-Button\">ยกเลิก</Button>\r\n                            </Link>\r\n                        </>\r\n                        :\r\n                        dataNews.status === 'ร่าง' || dataNews.status === 'แก้ไข' ?\r\n                            <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate('ส่ง') }} >ส่ง</Button>\r\n                            : dataNews.status === 'ส่ง' ?\r\n                                <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate('ขอแก้ไข')}} >ขอแก้ไข</Button>\r\n                                :\r\n                                null\r\n                    }\r\n                    < Link to=\"/home\">\r\n                        <Button className=\"view-Button\">ย้อนกลับ</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Modals\r\n                    isModalVisible={isModalVisible}\r\n                    onOk={modalData.onOk}\r\n                    onCancel={offModal}\r\n                    modalData={modalData}\r\n                >\r\n                    <p className=\"truncate-text\">{modalData.content}</p>\r\n                </Modals>\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default View","E:\\web-touch-news\\src\\pages\\admin\\home\\index.js",["123"],"E:\\web-touch-news\\src\\pages\\super\\manage\\index.js",["124"],"import {\r\n  Breadcrumb,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Layout,\r\n  Row,\r\n  Space,\r\n  Switch,\r\n  Tooltip,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  ExclamationCircleOutlined,\r\n  HomeOutlined,\r\n  PlusOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from \"components/layout/modal\";\r\nimport Tables from \"components/layout/table\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst Manage = () => {\r\n  const [formValue] = Form.useForm();\r\n  const [dataSource, setDataSource] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataFilter, setDataFilter] = useState(\"\");\r\n  const [dataSearch, setDataSearch] = useState(\"\");\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    sorter: \"dsc\",\r\n    pageSize: 1,\r\n    total: 0,\r\n  });\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    type: \"\",\r\n    icon: null,\r\n    title: \"\",\r\n    okColor: \"\",\r\n    content: \"\",\r\n    okText: \"\",\r\n    onOk: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [dataFilter, pagination.current, isModalVisible, dataSearch]);\r\n\r\n  const getData = () => {\r\n    var params = new URLSearchParams();\r\n    params.append(\"page\", pagination.current);\r\n    params.append(\"filters\", `firstname:like:${dataSearch}`);\r\n    params.append(\"filters\", `lastname:like:${dataSearch}`);\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/admin\", { params })\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        const data = response.data.data.data_list;\r\n        setPagination({\r\n          current: response.data.data.pagination.current_page,\r\n          pageSize: response.data.data.pagination.per_page,\r\n          total: response.data.data.pagination.total,\r\n          sorter: response.data.data.pagination.sorts[0].value,\r\n        });\r\n        if (code === 200) {\r\n          const dataMap = data.map((item, i) => {\r\n            item.order = i + 1 + (pagination.current - 1) * 10;\r\n            item.key = item.id;\r\n            item.name = item.firstname + \" \" + item.lastname;\r\n            const status = item.status;\r\n            item.status = status === \"active\" ? true : false;\r\n            return item;\r\n          });\r\n          setDataSource(dataMap);\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(false);\r\n          setDataSource(data);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onInsert = (value) => {\r\n    const setData = JSON.stringify({\r\n      email: value.email,\r\n    });\r\n    httpClient\r\n      .post(config.REACT_APP_BASEURL + \"/admin\", setData)\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 201) {\r\n          setModalData({\r\n            type: \"show\",\r\n            icon: <UserOutlined className=\"manage-icon-insert\" />,\r\n            title: \"เพิ่มผู้ดูแลระบบใหม่\",\r\n            okColor: \"#216258\",\r\n            okText: \"ตกลง\",\r\n            onOk() {\r\n              setIsModalVisible(false);\r\n            },\r\n            content: {\r\n              email: response.data.data.email,\r\n              password: response.data.data.password,\r\n            },\r\n          });\r\n          onModal();\r\n          setDataFilter(response.data.data.email);\r\n          formValue.setFieldsValue({\r\n            email: \"\",\r\n          });\r\n        } else if (code === 200) {\r\n          message.error(response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onDelete = (record) => {\r\n    setModalData({\r\n      type: \"confirm\",\r\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n      title: \"คุณต้องการลบผู้ดูแลระบบนี้ หรือไม่ ! \",\r\n      okColor: \"red\",\r\n      okText: \"ลบ\",\r\n      content: record.email,\r\n      onOk() {\r\n        setIsModalVisible(false);\r\n        httpClient\r\n          .delete(config.REACT_APP_BASEURL + \"/admin/\" + record.key)\r\n          .then(function (response) {\r\n            const code = response.data.code;\r\n            if (code === 200) {\r\n              message.success(\"ลบผู้ดูแลระบบสำเร็จ\");\r\n              setDataFilter(record.key);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error(\"ลบไม่สำเร็จ\");\r\n          });\r\n      },\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const onSuspend = (checked, record) => {\r\n    if (checked === false) {\r\n      setModalData({\r\n        type: \"confirm\",\r\n        icon: <ExclamationCircleOutlined className=\"manage-icon-suspend\" />,\r\n        title: \"คุณต้องการระงับผู้ดูแลระบบนี้ หรือไม่ ! \",\r\n        okColor: \"orange\",\r\n        content: record.email,\r\n        okText: \"ระงับ\",\r\n        onOk() {\r\n          const setData = JSON.stringify({\r\n            status: \"inactive\",\r\n          });\r\n          httpClient\r\n            .put(\r\n              config.REACT_APP_BASEURL + \"/admin/suspend/\" + record.key,\r\n              setData\r\n            )\r\n            .then(function (response) {\r\n              const code = response.data.code;\r\n              if (code === 200) {\r\n                message.success(\"ระงับผู้ดูแลระบบสำเร็จ\");\r\n                setDataFilter(record.key);\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n              message.error(\"ระงับผู้ดูแลระบบไม่สำเร็จ\");\r\n            });\r\n          offModal();\r\n        },\r\n      });\r\n      onModal();\r\n    } else {\r\n      const setData = JSON.stringify({\r\n        status: \"active\",\r\n      });\r\n      httpClient\r\n        .put(config.REACT_APP_BASEURL + \"/admin/suspend/\" + record.key, setData)\r\n        .then(function (response) {\r\n          const code = response.data.code;\r\n          if (code === 200) {\r\n            message.success(\"อนุญาติผู้ดูแลระบบสำเร็จ\");\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          message.error(\"อนุญาติผู้ดูแลระบบไม่สำเร็จ\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setDataSearch(value);\r\n    setLoading(true);\r\n  };\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ลำดับ\",\r\n      dataIndex: \"order\",\r\n      key: \"order\",\r\n      width: \"20px\",\r\n    },\r\n    {\r\n      title: \"อีเมล\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n    },\r\n    {\r\n      title: \"ชื่อ - นามสกุล\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      responsive: [\"md\"],\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"15%\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <Space>\r\n          <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n            <Link to={`/manage/profile/${record.key}`}>\r\n              <Button\r\n                icon={<EditOutlined className=\"manage-icon-edit\" />}\r\n                size={\"middle\"}\r\n              />\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n            <Button\r\n              icon={<DeleteOutlined className=\"manage-icon-delete\" />}\r\n              size={\"middle\"}\r\n              onClick={() => {\r\n                onDelete(record);\r\n              }}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ระงับ\">\r\n            <Switch\r\n              size=\"small\"\r\n              defaultChecked={record.status}\r\n              onClick={(e) => {\r\n                onSuspend(e, record);\r\n              }}\r\n            />\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ padding: \"1px 0\" }}>\r\n        <Breadcrumb.Item>\r\n          <HomeOutlined />\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"manage-content\">\r\n        <Row>\r\n          <Col\r\n            xs={24}\r\n            sm={24}\r\n            md={14}\r\n            lg={14}\r\n            xl={16}\r\n            style={{ marginBottom: \"5px\" }}\r\n          >\r\n            <Form\r\n              form={formValue}\r\n              name=\"email\"\r\n              layout=\"inline\"\r\n              onFinish={onInsert}\r\n            >\r\n              <Form.Item>\r\n                <div className=\"manage-Text\">ผู้ดูแลระบบ</div>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: false,\r\n                    pattern: /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i,\r\n                    message: \"Enter a valid email address!\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter your E-mail!\",\r\n                  },\r\n                ]}\r\n                className=\"manage-Input\"\r\n              >\r\n                <Input placeholder=\"กรอกอีเมล\" />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  className=\"manage-button\"\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  เพิ่ม\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            md={10}\r\n            lg={10}\r\n            xl={8}\r\n            style={{ textAlign: \"right\", paddingLeft: \"80px\" }}\r\n          >\r\n            <Search\r\n              placeholder=\"ค้นหา\"\r\n              className=\"manage-search\"\r\n              onSearch={onSearch}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Tables\r\n          loading={loading}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          setPagination={setPagination}\r\n          pagination={pagination}\r\n        />\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={modalData.onOk}\r\n        onCancel={offModal}\r\n        modalData={modalData}\r\n      >\r\n        {modalData.type === \"show\" ? (\r\n          <>\r\n            <div style={{ marginLeft: \"80px\" }}>\r\n              อีเมล : {modalData.content.email}\r\n            </div>\r\n            <div style={{ marginLeft: \"80px\" }}>\r\n              รหัสผ่าน : {modalData.content.password}\r\n            </div>\r\n            <div\r\n              style={{ marginLeft: \"40px\", marginTop: \"20px\", color: \"red\" }}\r\n            >\r\n              *ระบบจะแสดงข้อมูลเพียงครั้งเดียว*\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p style={{ marginLeft: \"80px\" }}>{modalData.content}</p>\r\n        )}\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Manage;\r\n","E:\\web-touch-news\\src\\pages\\super\\home\\index.js",["125","126"],"import {\r\n  Breadcrumb,\r\n  Col,\r\n  Dropdown,\r\n  Input,\r\n  Layout,\r\n  Menu,\r\n  Row,\r\n  Select,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EyeOutlined,\r\n  FieldTimeOutlined,\r\n  HomeOutlined,\r\n  MoreOutlined,\r\n  SendOutlined,\r\n  TeamOutlined,\r\n  UnorderedListOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Box from \"components/layout/box\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from \"components/layout/modal\";\r\nimport Tables from \"components/layout/table\";\r\nimport Timeline from \"components/layout/timeline\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\nimport moment from \"moment\";\r\n\r\nconst { Content } = Layout;\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst Home = (props) => {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [category, setCategory] = useState(null);\r\n  const [totalNews, setTotalNews] = useState({ all: 0, toDate: 0 });\r\n  const [totalAdmin, setTotalAdmin] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    sorter: \"desc\",\r\n    pageSize: 0,\r\n    total: 0,\r\n  });\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    type: \"\",\r\n    icon: null,\r\n    title: \"\",\r\n    okColor: \"\",\r\n    content: null,\r\n    okText: \"\",\r\n  });\r\n  const [dataSearch, setDataSearch] = useState({ category: \"\", filter: \"\" });\r\n  const [filters, setFilters] = useState();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getData();\r\n      getCategory();\r\n      getTotalAdmin();\r\n      getTotalNews();\r\n    }, 1000);\r\n  }, [pagination.current, pagination.sorter, dataSearch, filters]);\r\n\r\n  const dateShow = (time) => {\r\n    const date = moment(time * 1000).format(\"DD/MM/YYYY HH:mm:ss \");\r\n    return date;\r\n  };\r\n\r\n  const getData = () => {\r\n    setLoading(true);\r\n    var params = new URLSearchParams();\r\n    params.append(\"page\", pagination.current);\r\n    params.append(\"sorts\", `created_at:${pagination.sorter}`);\r\n    params.append(\"filters\", `topic:like:${dataSearch.filter}`);\r\n    params.append(\"filters\", `category:like:${dataSearch.category}`);\r\n    httpClient\r\n      .get(\"/news/super\", { params })\r\n      .then(function (response) {\r\n        const code = response.data?.code || \"\";\r\n        const data = response.data?.data?.data_list || \"\";\r\n        const paginations = response.data?.data?.pagination || \"\";\r\n        setLoading(false);\r\n        if (code === 200) {\r\n          setPagination({\r\n            current: paginations.current_page,\r\n            pageSize: paginations.per_page,\r\n            total: paginations.total,\r\n            sorter: paginations.sorts[0].value,\r\n          });\r\n          const dataMap = data.map((item) => {\r\n            item.key = item.id;\r\n            item.created_at = dateShow(item.created_at);\r\n            return item;\r\n          });\r\n          setDataSource(dataMap);\r\n        } else {\r\n          setDataSource();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getTotalNews = () => {\r\n    httpClient\r\n      .get(\"/news/countsuper\")\r\n      .then(function (response) {\r\n        const code = response.data?.code || \"\";\r\n        const data = response.data?.data || \"\";\r\n        if (code === 200) {\r\n          setTotalNews({\r\n            all: data[0],\r\n            toDate: data[1],\r\n          });\r\n        } else {\r\n          setTotalNews({\r\n            all: 0,\r\n            toDate: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getTotalAdmin = () => {\r\n    httpClient\r\n      .get(\"/admin/count\")\r\n      .then(function (response) {\r\n        const code = response.data?.code || \"\";\r\n        const data = response.data?.data || \"\";\r\n        if (code === 200) {\r\n          setTotalAdmin(data[0]);\r\n        } else {\r\n          setTotalAdmin(0);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCategory = () => {\r\n    httpClient\r\n      .get(\"/category\")\r\n      .then(function (response) {\r\n        const data = response.data?.data?.data_list || \"\";\r\n        const code = response.data?.code || \"\";\r\n        if (code === 200) {\r\n          const dataMap = data.map((item) => {\r\n            item = (\r\n              <Option key={item.id} value={item.category}>\r\n                {item.category}\r\n              </Option>\r\n            );\r\n            return item;\r\n          });\r\n          setCategory(dataMap);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onCategory = (value) => {\r\n    setDataSearch({ ...dataSearch, category: value });\r\n  };\r\n  const onSearch = (value) => {\r\n    setDataSearch({ ...dataSearch, filter: value });\r\n  };\r\n\r\n  const onDelete = (record) => {\r\n    setModalData({\r\n      type: \"confirm\",\r\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n      title: \"คุณต้องการลบข่าวนี้ หรือไม่ ! \",\r\n      okColor: \"red\",\r\n      okText: \"ลบ\",\r\n      onOk() {\r\n        offModal();\r\n        httpClient\r\n          .delete(config.REACT_APP_BASEURL + \"/news/\" + record.key)\r\n          .then(function (response) {\r\n            const code = response.data.code;\r\n            if (code === 200) {\r\n              message.success(response.data.message);\r\n              setFilters(record.key);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error(error.data.message);\r\n          });\r\n      },\r\n      content: record.topic,\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const onTimeline = (record) => {\r\n    setModalData({\r\n      type: \"show\",\r\n      icon: <FieldTimeOutlined className=\"manage-icon-insert\" />,\r\n      title: \"ไทม์ไลน์\",\r\n      okColor: \"#216258\",\r\n      okText: \"ตกลง\",\r\n      onOk() {\r\n        setIsModalVisible(false);\r\n      },\r\n      content: <Timeline idNews={record.key} />,\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const menu = (record) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          key=\"0\"\r\n          onClick={() => {\r\n            props.history.push(`/home/view/${record.key}`);\r\n          }}\r\n        >\r\n          <EyeOutlined style={{ color: \"#73d13d\" }} />\r\n          ดูข่าว\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"1\"\r\n          onClick={() => {\r\n            onTimeline(record);\r\n          }}\r\n        >\r\n          <FieldTimeOutlined style={{ color: \"#1890ff\" }} />\r\n          ไทม์ไลน์\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          onClick={() => {\r\n            onDelete(record);\r\n          }}\r\n        >\r\n          <DeleteOutlined style={{ color: \"red\" }} />\r\n          ลบ\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"วันที่\",\r\n      dataIndex: \"created_at\",\r\n      key: \"created_at\",\r\n      width: \"120px\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"หัวข้อ\",\r\n      key: \"topic\",\r\n      width: \"400px\",\r\n      ellipsis: true,\r\n      render: (record) => (\r\n        <Link to={`/home/view/${record.key}`} style={{ color: \"#000\" }}>\r\n          {record.topic}\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      title: \"ผู้ดูแลระบบ\",\r\n      dataIndex: \"by\",\r\n      key: \"by\",\r\n      width: \"160px\",\r\n    },\r\n    {\r\n      title: \"ประเภท\",\r\n      dataIndex: \"category\",\r\n      key: \"category\",\r\n      width: \"100px\",\r\n    },\r\n    {\r\n      title: \"สถานะ\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: \"100px\",\r\n      render: (status) => (\r\n        <div\r\n          style={{\r\n            color:\r\n              status === \"Submit\"\r\n                ? \"blue\"\r\n                : status === \"Approve\"\r\n                ? \"#73d13d\"\r\n                : status === \"Public\"\r\n                ? \"red\"\r\n                : status === \"Edit\"\r\n                ? \"orange\"\r\n                : \"black\",\r\n          }}\r\n        >\r\n          {status}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"50px\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      render: (record) => (\r\n        <Dropdown placement=\"bottomCenter\" overlay={menu(record)}>\r\n          <a style={{ color: \"black\" }} onClick={(e) => e.preventDefault()}>\r\n            <MoreOutlined />\r\n          </a>\r\n        </Dropdown>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ padding: \"1px 0\" }}>\r\n        <Breadcrumb.Item>\r\n          <HomeOutlined />\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"home-Content\">\r\n        <Row gutter={[16, 16]}>\r\n          <Box\r\n            color=\"error\"\r\n            icon={<UnorderedListOutlined />}\r\n            text=\"ข่าวทั้งหมด\"\r\n            number={totalNews.all}\r\n          />\r\n          <Box\r\n            color=\"link\"\r\n            icon={<TeamOutlined />}\r\n            text=\"ผู้ดูแลระบบ\"\r\n            number={totalAdmin}\r\n          />\r\n          <Box\r\n            color=\"success\"\r\n            icon={<SendOutlined />}\r\n            text=\"ข่าววันนี้\"\r\n            number={totalNews.toDate}\r\n          />\r\n        </Row>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Col xs={24} sm={24} md={12} lg={12} xl={16}>\r\n            <div className=\"home-Text-List\">รายการ</div>\r\n          </Col>\r\n          <Col xs={12} sm={10} md={6} lg={6} xl={4}>\r\n            <Input.Group className=\"home-Input-Group\">\r\n              <Select\r\n                defaultValue=\"\"\r\n                className=\"home-Select\"\r\n                onChange={onCategory}\r\n              >\r\n                <Option value=\"\">ประเภทข่าวทั้งหมด</Option>\r\n                {category}\r\n              </Select>\r\n            </Input.Group>\r\n          </Col>\r\n          <Col xs={12} sm={10} md={6} lg={6} xl={4}>\r\n            <Search placeholder=\"ค้นหา\" onSearch={onSearch}></Search>\r\n          </Col>\r\n        </Row>\r\n        <Tables\r\n          loading={loading}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          setPagination={setPagination}\r\n          pagination={pagination}\r\n        />\r\n        <Modals\r\n          isModalVisible={isModalVisible}\r\n          onOk={modalData.onOk}\r\n          onCancel={offModal}\r\n          modalData={modalData}\r\n        >\r\n          {modalData.type === \"show\" ? (\r\n            <div style={{ marginTop: \"5px\" }}>{modalData.content}</div>\r\n          ) : (\r\n            <p className=\"truncate-text\">{modalData.content}</p>\r\n          )}\r\n        </Modals>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\web-touch-news\\src\\components\\layout\\tag\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\froala\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\modal\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\table\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\timeline\\index.js",["127"],"import { CheckOutlined, EditOutlined, FileExclamationOutlined, FileTextOutlined, GlobalOutlined, SendOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Timeline } from 'antd'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\n\r\nconst Timelines = (props) => {\r\n    const [timeLine, setTimeLine] = useState(null)\r\n    useEffect(() => {\r\n        getTimeLine()\r\n    },[props.idNews])\r\n\r\n    const getTimeLine = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/news/timeline/' + props.idNews)\r\n            .then(function (response) {\r\n                console.log('timeline', response)\r\n                const code = response.data.code\r\n                const data = response.data.data.timeline\r\n                if(code === 200){\r\n                    const dataMap = data.map((item,key)=>{\r\n                        if(item.Status === 'ร่าง'){\r\n                            item =  <Timeline.Item key={key} dot={<FileTextOutlined style={{ color: 'gray' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'ส่ง'){\r\n                            item = <Timeline.Item  key={key} dot={<SendOutlined style={{ color: 'blue' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'ขอแก้ไข'){\r\n                            item = <Timeline.Item  key={key} dot={<FileExclamationOutlined style={{ color: 'orange' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'อนุมัติ'){\r\n                            item = <Timeline.Item  key={key} dot={<CheckOutlined style={{ color: 'green' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'สาธารณะ'){\r\n                            item = <Timeline.Item  key={key} dot={<GlobalOutlined style={{ color: 'red' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'แก้ไข'){\r\n                            item = <Timeline.Item  key={key} dot={<EditOutlined style={{ color: 'orange' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else{}\r\n                    return item\r\n                    })\r\n                    setTimeLine(dataMap)\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    return (\r\n        <Timeline mode=\"left\">\r\n            {timeLine}\r\n        </Timeline>\r\n    );\r\n}\r\nexport default Timelines","E:\\web-touch-news\\src\\pages\\admin\\news\\index.js",["128"],"E:\\web-touch-news\\src\\core\\actions\\collection.js",[],"E:\\web-touch-news\\src\\components\\layout\\box\\index.js",[],"E:\\web-touch-news\\src\\core\\schemas\\index.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":21,"column":6,"nodeType":"135","endLine":21,"endColumn":31,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":3,"column":3,"nodeType":"139","messageId":"140","endLine":3,"endColumn":8},{"ruleId":"137","severity":1,"message":"141","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":6,"endColumn":10},{"ruleId":"137","severity":1,"message":"142","line":11,"column":10,"nodeType":"139","messageId":"140","endLine":11,"endColumn":22},{"ruleId":"137","severity":1,"message":"143","line":28,"column":10,"nodeType":"139","messageId":"140","endLine":28,"endColumn":17},{"ruleId":"137","severity":1,"message":"144","line":30,"column":9,"nodeType":"139","messageId":"140","endLine":30,"endColumn":28},{"ruleId":"133","severity":1,"message":"145","line":36,"column":6,"nodeType":"135","endLine":36,"endColumn":49,"suggestions":"146"},{"ruleId":"133","severity":1,"message":"147","line":65,"column":6,"nodeType":"135","endLine":65,"endColumn":23,"suggestions":"148"},{"ruleId":"137","severity":1,"message":"149","line":162,"column":9,"nodeType":"139","messageId":"140","endLine":162,"endColumn":25},{"ruleId":"133","severity":1,"message":"145","line":48,"column":6,"nodeType":"135","endLine":48,"endColumn":14,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":209,"column":17,"nodeType":"153","endLine":212,"endColumn":18},{"ruleId":"133","severity":1,"message":"154","line":72,"column":6,"nodeType":"135","endLine":72,"endColumn":68,"suggestions":"155"},{"ruleId":"133","severity":1,"message":"156","line":58,"column":6,"nodeType":"135","endLine":58,"endColumn":66,"suggestions":"157"},{"ruleId":"133","severity":1,"message":"156","line":68,"column":6,"nodeType":"135","endLine":68,"endColumn":66,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"152","line":328,"column":11,"nodeType":"153","endLine":328,"endColumn":77},{"ruleId":"133","severity":1,"message":"159","line":19,"column":6,"nodeType":"135","endLine":19,"endColumn":20,"suggestions":"160"},{"ruleId":"133","severity":1,"message":"161","line":51,"column":6,"nodeType":"135","endLine":51,"endColumn":31,"suggestions":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location'. Either include it or remove the dependency array.","ArrayExpression",["165"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'Popover' is defined but never used.","'BellOutlined' is defined but never used.","'visible' is assigned a value but never used.","'handleVisibleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'getData', 'getDataAdmin', and 'props.location.pathname'. Either include them or remove the dependency array.",["167"],"'showCancelUpdate' is assigned a value but never used.",["168"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getDatas' and 'getTotalNews'. Either include them or remove the dependency array. Mutable values like 'paginations.current' aren't valid dependencies because mutating them doesn't re-render the component.",["169"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array. Mutable values like 'pagination.current' aren't valid dependencies because mutating them doesn't re-render the component.",["170"],["171"],"React Hook useEffect has a missing dependency: 'getTimeLine'. Either include it or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'getDatas' and 'params.type'. Either include them or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [props.location, props.location.pathname]",{"range":"192","text":"193"},"Update the dependencies array to be: [user.firstname, user.lastname, user.image, getData]",{"range":"194","text":"195"},"Update the dependencies array to be: [params, context, props.location.pathname, getData, getDataAdmin]",{"range":"196","text":"197"},"Update the dependencies array to be: [getData, params]",{"range":"198","text":"199"},"Update the dependencies array to be: [paginations.sorter, dataSearch, filters, getDatas, getTotalNews]",{"range":"200","text":"201"},"Update the dependencies array to be: [dataFilter, isModalVisible, dataSearch, getData]",{"range":"202","text":"203"},"Update the dependencies array to be: [pagination.sorter, dataSearch, filters, getData]",{"range":"204","text":"205"},"Update the dependencies array to be: [getTimeLine, props.idNews]",{"range":"206","text":"207"},"Update the dependencies array to be: [getDatas, params.type, props.location.pathname]",{"range":"208","text":"209"},[707,732],"[props.location, props.location.pathname]",[771,814],"[user.firstname, user.lastname, user.image, getData]",[1500,1517],"[params, context, props.location.pathname, getData, getDataAdmin]",[1224,1232],"[getData, params]",[1849,1911],"[paginations.sorter, dataSearch, filters, getDatas, getTotalNews]",[1299,1359],"[dataFilter, isModalVisible, dataSearch, getData]",[1718,1778],"[pagination.sorter, dataSearch, filters, getData]",[464,478],"[getTimeLine, props.idNews]",[1573,1598],"[getDatas, params.type, props.location.pathname]"]
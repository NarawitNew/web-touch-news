[{"E:\\web-touch-news\\src\\index.js":"1","E:\\web-touch-news\\src\\App.js":"2","E:\\web-touch-news\\src\\reportWebVitals.js":"3","E:\\web-touch-news\\src\\Root.js":"4","E:\\web-touch-news\\src\\pages\\login\\index.js":"5","E:\\web-touch-news\\src\\components\\layout\\header\\index.js":"6","E:\\web-touch-news\\src\\components\\router\\index.js":"7","E:\\web-touch-news\\src\\components\\layout\\sider\\index.js":"8","E:\\web-touch-news\\src\\config.js":"9","E:\\web-touch-news\\src\\components\\layout\\table\\index.js":"10","E:\\web-touch-news\\src\\components\\layout\\modal\\index.js":"11","E:\\web-touch-news\\src\\components\\layout\\timeline\\index.js":"12","E:\\web-touch-news\\src\\components\\layout\\pagination\\index.js":"13","E:\\web-touch-news\\src\\HttpClient.js":"14","E:\\web-touch-news\\src\\components\\layout\\froala\\index.js":"15","E:\\web-touch-news\\src\\components\\layout\\tag\\index.js":"16","E:\\web-touch-news\\src\\pages\\profile\\index.js":"17","E:\\web-touch-news\\src\\pages\\viewNews\\index.js":"18","E:\\web-touch-news\\src\\pages\\admin\\home\\index.js":"19","E:\\web-touch-news\\src\\pages\\admin\\createNews\\index.js":"20","E:\\web-touch-news\\src\\pages\\super\\home\\index.js":"21","E:\\web-touch-news\\src\\pages\\super\\manage\\index.js":"22","E:\\web-touch-news\\src\\context.js":"23"},{"size":581,"mtime":1614240386488,"results":"24","hashOfConfig":"25"},{"size":744,"mtime":1612943390873,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1612938333687,"results":"27","hashOfConfig":"25"},{"size":731,"mtime":1612938407040,"results":"28","hashOfConfig":"25"},{"size":4710,"mtime":1613356484138,"results":"29","hashOfConfig":"25"},{"size":4695,"mtime":1614589432715,"results":"30","hashOfConfig":"25"},{"size":2012,"mtime":1614573461125,"results":"31","hashOfConfig":"25"},{"size":2524,"mtime":1614655982748,"results":"32","hashOfConfig":"25"},{"size":241,"mtime":1612938352740,"results":"33","hashOfConfig":"25"},{"size":983,"mtime":1614059889368,"results":"34","hashOfConfig":"25"},{"size":1379,"mtime":1614241575578,"results":"35","hashOfConfig":"25"},{"size":2660,"mtime":1614590698423,"results":"36","hashOfConfig":"25"},{"size":337,"mtime":1612938352738,"results":"37","hashOfConfig":"25"},{"size":2183,"mtime":1614573270366,"results":"38","hashOfConfig":"25"},{"size":1739,"mtime":1614064357837,"results":"39","hashOfConfig":"25"},{"size":554,"mtime":1612938352739,"results":"40","hashOfConfig":"25"},{"size":12509,"mtime":1614655900842,"results":"41","hashOfConfig":"25"},{"size":12448,"mtime":1614590909100,"results":"42","hashOfConfig":"25"},{"size":14233,"mtime":1614596198425,"results":"43","hashOfConfig":"25"},{"size":19626,"mtime":1614594294983,"results":"44","hashOfConfig":"25"},{"size":10728,"mtime":1614655805456,"results":"45","hashOfConfig":"25"},{"size":11094,"mtime":1614589235421,"results":"46","hashOfConfig":"25"},{"size":663,"mtime":1612938352740,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"xzs7i7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"E:\\web-touch-news\\src\\index.js",[],["104","105"],"E:\\web-touch-news\\src\\App.js",[],"E:\\web-touch-news\\src\\reportWebVitals.js",[],"E:\\web-touch-news\\src\\Root.js",[],"E:\\web-touch-news\\src\\pages\\login\\index.js",["106"],"import { Button, Checkbox, Form, Input, message } from 'antd';\r\nimport React, { useContext, useState } from \"react\";\r\nimport { UnlockOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nimport { Context } from '../../context'\r\nimport axios from 'axios'\r\nimport config from 'config'\r\nimport sha256 from 'js-sha256'\r\n\r\nconst Login = (props) => {\r\n    const context = useContext(Context)\r\n    const [username] = useState((localStorage.getItem('checkbox') ? localStorage.getItem('email') : ''))\r\n    const [password] = useState((localStorage.getItem('checkbox') ? localStorage.getItem('password') : ''))\r\n    const [isCheckbox, setIsCheckbox] = useState((localStorage.getItem('checkbox') === 'true' ? true : false))\r\n\r\n    // console.log('isCheckbox', isCheckbox)\r\n    const onFinish = values => {\r\n        if (isCheckbox && values.username !== \"\") {\r\n            localStorage.setItem('email', values.username)\r\n            localStorage.setItem('password', values.password)\r\n            localStorage.setItem('checkbox', isCheckbox)\r\n        } else if (isCheckbox === false) {\r\n            localStorage.setItem('email', '')\r\n            localStorage.setItem('password', '')\r\n            localStorage.setItem('checkbox', isCheckbox)\r\n        }\r\n\r\n        const setData = JSON.stringify({\r\n            \"email\": `${values.username}`,\r\n            \"password\": `${values.password}`\r\n        })\r\n        // console.log('setData', setData)\r\n        axios.post(config.REACT_APP_BASEURL + '/login', setData)\r\n            .then(function (response) {\r\n                console.log('response', response)\r\n                if (response.data.code === 200) {\r\n                    console.log('login_context.user', context.user)\r\n                    console.log('response.data.data.first_name', response.data.data.first_name)\r\n                    localStorage.setItem('refresh_token', response.data.data.refresh_token)\r\n                    localStorage.setItem('access_token', response.data.data.access_token)\r\n                    localStorage.setItem('role', response.data.data.role)\r\n                    localStorage.setItem('id', response.data.data.id)\r\n\r\n                    message.success(response.data.message)\r\n                    console.log('response.data.message', response.data.message)\r\n                    props.history.push(\"/home\")\r\n                    window.location.reload()\r\n                } else {\r\n                    message.error(response.data.message)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const onCheckbox = (e) => {\r\n        setIsCheckbox(e.target.checked)\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <div className=\"Login-box\">\r\n                <div className=\"Login-herde\">\r\n                    T<p className=\"login-text-o\" >o</p>uch K<p className=\"login-text-o\">o</p>rat News\r\n                </div>\r\n\r\n                <div className=\"Login-form\">\r\n                    <Form\r\n                        initialValues={{ username: username, password: password }}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input value=\"s\" size=\"large\" placeholder=\"ชื่อผู้ใช้งาน\" prefix={<UserOutlined />}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Please input your password!' }]}\r\n                        >\r\n                            <Input.Password size=\"large\" placeholder=\"รหัสผ่าน\" prefix={<UnlockOutlined />}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"isCheckbox\" >\r\n                            <Checkbox checked={isCheckbox} onChange={onCheckbox}>บันทึกรหัสผ่าน</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item >\r\n                            <div className=\"Login-button\">\r\n                                <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\r\n                                    เข้าสู่ระบบ\r\n                            </Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Login;\r\n","E:\\web-touch-news\\src\\components\\layout\\header\\index.js",["107","108","109"],"import { Avatar, Badge, Col, Layout, Popover, Row, Tooltip, message } from 'antd';\r\nimport { BellOutlined, ExportOutlined } from '@ant-design/icons';\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\n\r\nimport { Context } from '../../../context'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nconst Headerbar = () => {\r\n    const context = useContext(Context)\r\n    const user = context.user\r\n    const [dataUser, setDataUser] = useState({ image: '', firstname: '', badge: null })\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const handleVisibleChange = visible => {\r\n        setVisible(visible);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [user.firstname, user.lastname, user.image])\r\n\r\n    const getData = () => {\r\n        const setData = localStorage.getItem('id')\r\n       httpClient.get(config.REACT_APP_BASEURL + '/user/' + setData)\r\n            .then(function (response) {\r\n                // console.log('response', response)\r\n                const code = response.data.code\r\n                const data = response.data.data\r\n                if (code === 200) {\r\n                    setDataUser({\r\n                        image: data.image,\r\n                        firstname: data.firstname,\r\n                        badge: 2\r\n                    })\r\n                    context.setData({\r\n                        email: data.email,\r\n                        image: data.image,\r\n                        firstname: data.firstname,\r\n                        lastname: data.lastname,\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const onLogout = () => {\r\n        const setData = JSON.stringify({\r\n            \"id\": localStorage.getItem('id')\r\n        })\r\n        httpClient.post(config.REACT_APP_BASEURL + '/logout', setData)\r\n            .then(function (response) {\r\n                const code = response.data.code\r\n                if (code === 200) {\r\n                    localStorage.setItem('access_token', '')\r\n                    localStorage.setItem('refresh_token', '')\r\n                    localStorage.setItem('role', '')\r\n                    localStorage.setItem('id', '')\r\n\r\n                    message.success('ออกจากระบบสำเร็จ');\r\n                    window.location.reload()\r\n                } else {\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            });\r\n    }\r\n    return (\r\n        <Header className=\"header\">\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <div className=\"header-text\">\r\n                        touch korat news\r\n                        </div>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Row justify=\"end\">\r\n                        <Col>\r\n                            <Avatar\r\n                                size={40}\r\n                                src={dataUser.image}\r\n                            />\r\n                        </Col>\r\n                        <Col className=\"header-name\">{dataUser.firstname}</Col>\r\n                        <Col className=\"header-col-icon\">\r\n                            <Popover\r\n                                placement=\"bottomRight\"\r\n                                content={\r\n                                    <div>\r\n                                        <p>Content</p> \r\n                                        <p>Content</p>\r\n                                    </div>\r\n                                }\r\n                                // title=\"Title\"\r\n                                trigger=\"click\"\r\n                                visible={visible}\r\n                                onVisibleChange={handleVisibleChange}\r\n                            >\r\n                                {/* <Badge count={dataUser.badge} size=\"small\">\r\n                                    <BellOutlined className=\"header-icon\" />\r\n                                </Badge> */}\r\n                            </Popover>\r\n\r\n                        </Col>\r\n                        <Col>\r\n                            <Tooltip placement=\"bottomRight\" title=\"ออกจากระบบ\" >\r\n                                <ExportOutlined className=\"header-icon\" onClick={onLogout} />\r\n                            </Tooltip>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\nexport default Headerbar","E:\\web-touch-news\\src\\components\\router\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\sider\\index.js",["110"],"E:\\web-touch-news\\src\\config.js",[],"E:\\web-touch-news\\src\\components\\layout\\table\\index.js",["111"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Table } from 'antd'\r\n\r\nconst Tables = (props) => {\r\n    const [order, setOrder] = useState()\r\n    const onChange = (pagination, filters, sorter, extra) => {\r\n        if(sorter.order !== undefined){\r\n            console.log('sorter', sorter.order.substring(0,sorter.order.length -3))\r\n            setOrder(sorter.order.substring(0,sorter.order.length -3))\r\n        }\r\n        props.setPagination({...props.pagination,\r\n            current:pagination.current,\r\n            sorter:order,\r\n        })\r\n    } \r\n    return (\r\n        <>\r\n            <Table\r\n                loading={props.loading}\r\n                columns={props.columns}\r\n                dataSource={props.dataSource}\r\n                onChange={onChange}\r\n                style={{ marginTop: '10px' }}\r\n                pagination={props.pagination}\r\n                scroll={{ x: 'fit-content'}}\r\n            />\r\n        </>\r\n    );\r\n}\r\nexport default Tables","E:\\web-touch-news\\src\\components\\layout\\modal\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\timeline\\index.js",["112"],"import { CheckOutlined, EditOutlined, FileExclamationOutlined, FileTextOutlined, GlobalOutlined, SendOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Timeline } from 'antd'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\n\r\nconst Timelines = (props) => {\r\n    const [timeLine, setTimeLine] = useState(null)\r\n    useEffect(() => {\r\n        getTimeLine()\r\n    },[props.idNews])\r\n\r\n    const getTimeLine = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/news/timeline/' + props.idNews)\r\n            .then(function (response) {\r\n                console.log('timeline', response)\r\n                const code = response.data.code\r\n                const data = response.data.data.timeline\r\n                if(code === 200){\r\n                    const dataMap = data.map((item,key)=>{\r\n                        if(item.Status === 'ร่าง'){\r\n                            item =  <Timeline.Item key={key} dot={<FileTextOutlined style={{ color: 'gray' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'ส่ง'){\r\n                            item = <Timeline.Item  key={key} dot={<SendOutlined style={{ color: 'blue' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'ขอแก้ไข'){\r\n                            item = <Timeline.Item  key={key} dot={<FileExclamationOutlined style={{ color: 'orange' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'อนุมัติ'){\r\n                            item = <Timeline.Item  key={key} dot={<CheckOutlined style={{ color: 'green' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'สาธารณะ'){\r\n                            item = <Timeline.Item  key={key} dot={<GlobalOutlined style={{ color: 'red' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else if(item.Status === 'แก้ไข'){\r\n                            item = <Timeline.Item  key={key} dot={<EditOutlined style={{ color: 'orange' }} />} label={item.Status}>{item.Date}</Timeline.Item>\r\n                        }else{}\r\n                    return item\r\n                    })\r\n                    setTimeLine(dataMap)\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    return (\r\n        <Timeline mode=\"left\">\r\n            {timeLine}\r\n        </Timeline>\r\n    );\r\n}\r\nexport default Timelines","E:\\web-touch-news\\src\\components\\layout\\pagination\\index.js",[],["113","114"],"E:\\web-touch-news\\src\\HttpClient.js",[],"E:\\web-touch-news\\src\\components\\layout\\froala\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\tag\\index.js",[],"E:\\web-touch-news\\src\\pages\\profile\\index.js",["115","116","117"],"E:\\web-touch-news\\src\\pages\\viewNews\\index.js",["118"],"import { Breadcrumb, Button, Col, Dropdown, Image, Input, Layout, Menu, Row, Select, Tag, message } from 'antd'\r\nimport { DeleteOutlined, EditOutlined, MoreOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { FroalaView } from 'components/layout/froala/index'\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from 'components/layout/modal'\r\nimport Timeline from 'components/layout/timeline'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\nimport imgError from 'assets/image/img_error2.png'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst View = (props) => {\r\n    const params = props.match.params;\r\n    const role = localStorage.getItem('role')\r\n    const [dataNews, setDataNews] = useState({})\r\n    const [statusNews, setStatusNews] = useState();\r\n    const [cause, setCause] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: null, okText: '' });\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect')\r\n        getData()\r\n    }, [params])\r\n\r\n    const getData = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/news/info/' + params.id)\r\n            .then(function (response) {\r\n                const code = response.data.code\r\n                const data = response.data.data\r\n                const hashtag = response.data.data.hashtag\r\n                const credit = response.data.data.credit\r\n                if (code === 200) {\r\n                    const hashtagMap = hashtag.map((hashtag, key) => {\r\n                        hashtag = <Tag key={key} color=\"#87d068\">{hashtag}</Tag>\r\n                        return hashtag\r\n                    })\r\n                    const creditMap = credit.map((credit, key) => {\r\n                        credit = <Tag key={key} color=\"#108ee9\">{credit}</Tag>\r\n                        return credit\r\n                    })\r\n                    setDataNews({ ...data, hashtag: hashtagMap, credit: creditMap })\r\n                    setStatusNews(data.status)\r\n                    setCause(data.cause)\r\n                } else {\r\n                    setDataNews()\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const handleSelectStatus = (value) => {\r\n        setStatusNews(value)\r\n        console.log('value', value)\r\n    }\r\n\r\n    const changeCause = ({ target: { value } }) => {\r\n        setCause(value)\r\n        console.log('value', cause)\r\n    }\r\n\r\n    const submitUpdate = (status) => {\r\n        const setData = JSON.stringify({\r\n            \"status\": status,\r\n            \"cause\": cause,\r\n        })\r\n        httpClient.put(config.REACT_APP_BASEURL + '/news/update_status/' + params.id, setData)\r\n            .then(function (response) {\r\n                const code = response.data.code\r\n                if (code === 200) {\r\n                    message.success(response.data.message);\r\n                    setDataNews({ ...dataNews, status: status })\r\n                } else {\r\n                    message.success(response.data.message);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const onDelete = () => {\r\n        setModalData({\r\n            type: 'confirm',\r\n            icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n            title: 'คุณต้องการลบข่าวนี้ หรือไม่ ! ',\r\n            okColor: 'red',\r\n            okText: 'ลบ',\r\n            onOk() {\r\n                offModal()\r\n                httpClient.delete(config.REACT_APP_BASEURL + '/news/' + params.id)\r\n                    .then(function (response) {\r\n                        const code = response.data.code\r\n                        if (code === 200) {\r\n                            message.success(response.data.message);\r\n                            props.history.push(\"/home\")\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                        message.error(error.data.message);\r\n                    })\r\n            },\r\n            content: dataNews.topic,\r\n        })\r\n        onModal()\r\n    }\r\n    const onModal = () => {\r\n        setIsModalVisible(true)\r\n    };\r\n\r\n    const offModal = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const onErrorImg = (e) => {\r\n        e.target.src = imgError\r\n    }\r\n\r\n    const menu = () => {\r\n        if (dataNews.status === 'ร่าง' || dataNews.status === 'แก้ไข') {\r\n            return (\r\n                <Menu>\r\n                    <Menu.Item >\r\n                        <Link to={`/home/edit/${params.id}`}>\r\n                            <EditOutlined style={{ color: 'orange' }}></EditOutlined>\r\n                            แก้ไข\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        onClick={() => { onDelete() }}\r\n                    >\r\n                        <DeleteOutlined style={{ color: 'red' }} ></DeleteOutlined>\r\n                    ลบ\r\n                </Menu.Item>\r\n                </Menu>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Menu>\r\n                    <Menu.Item disabled>\r\n                        <EditOutlined style={{ color: '#DADADA' }} ></EditOutlined>\r\n                            แก้ไข\r\n                    </Menu.Item>\r\n                    <Menu.Item disabled>\r\n                        <DeleteOutlined style={{ color: '#DADADA' }} ></DeleteOutlined>\r\n                        ลบ\r\n                    </Menu.Item>\r\n                </Menu>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumb style={{ margin: '4px 0' }}>\r\n                <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n                <Breadcrumb.Item>ข่าว</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Content className=\"view-Content\">\r\n                <Row align=\"middle\">\r\n                    <Col flex='auto'>\r\n                        <div className=\"view-titel-news\">{dataNews.topic}</div>\r\n                    </Col>\r\n                    {role === 'admin' ?\r\n                        <Row>\r\n                            <Col>\r\n                                {/* สถานะ {dataNews.status} */}\r\n                            </Col>\r\n                            <Col flex='15px'>\r\n                                <Dropdown placement=\"bottomRight\" overlay={menu()}><MoreOutlined style={{ fontSize: '20px' }} /></Dropdown>\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        null\r\n                    }\r\n                </Row>\r\n                <hr />\r\n                <Row justify=\"center\">\r\n                    <Col span={10} justify=\"center\">\r\n                        <Image\r\n                            style={{ padding: '20px' }}\r\n                            width={'100%'}\r\n                            src={dataNews.image}\r\n                            onError={onErrorImg}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row justify=\"center\">\r\n                    <Col span={10}>\r\n                        <FroalaView\r\n                            model={dataNews.content}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[0, 10]} >\r\n                    <Col flex=\"60px\">แฮชแท็ก</Col>\r\n                    <Col>{dataNews.hashtag}</Col>\r\n                </Row>\r\n                <Row gutter={[0, 10]} >\r\n                    <Col flex=\"60px\">เครดิต</Col>\r\n                    <Col>{dataNews.credit}</Col>\r\n                </Row>\r\n\r\n                <Row gutter={[0, 10]}>\r\n                    <Col flex=\"60px\">ผู้ดูแล : </Col>\r\n                    <Col>{dataNews.by}</Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <h3>ไทม์ไลน์</h3>\r\n                        <div style={{ width: \"400px\", marginTop: '20px' }}>\r\n                            <Timeline idNews={params.id}></Timeline>\r\n                        </div>\r\n                    </Col>\r\n                    {role === 'superadmin' ?\r\n                        <Col span={12} >\r\n                            <h3>เปลี่ยนสถานะข่าว</h3>\r\n                            <Row style={{ marginTop: '20px' }}>\r\n                                <Col span={4} >\r\n                                    สถานะ :\r\n                            </Col>\r\n                                <Col span={20}>\r\n                                    <Input.Group>\r\n                                        <Select placeholder={statusNews} onChange={handleSelectStatus} className=\"view-Input-Group\">\r\n                                            {/* <Option value=\"ส่ง\">ส่ง</Option> */}\r\n                                            <Option value=\"ร่าง\">ร่าง</Option>\r\n                                            <Option value=\"อนุมัติ\">อนุมัติ</Option>\r\n                                            <Option value=\"สาธารณะ\">สาธารณะ</Option>\r\n                                        </Select>\r\n                                    </Input.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={20} offset={4}>\r\n                                    {statusNews === 'ร่าง' ?\r\n                                        <div className=\"view-Input-TextArea\">\r\n                                            <div style={{ color: 'red' }}>*กรุณากรอกสิ่งที่ต้องแก้ไข</div>\r\n                                            <TextArea value={cause} autoSize={{ minRows: 1, maxRows: 5 }} onChange={changeCause} />\r\n                                        </div>\r\n                                        : null\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        : null\r\n                    }\r\n                </Row>\r\n                <Row justify=\"end\" style={{ marginTop: '20px' }}>\r\n                    {role === 'superadmin' ?\r\n\r\n                        <>\r\n                            <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate(statusNews) }} >บันทึก</Button>\r\n                            <Button className=\"view-Button\" onClick={onDelete} danger>ลบ</Button>\r\n                            <Link to=\"/home\">\r\n                                <Button className=\"view-Button\">ยกเลิก</Button>\r\n                            </Link>\r\n                        </>\r\n                        :\r\n                        dataNews.status === 'ร่าง' || dataNews.status === 'แก้ไข' ?\r\n                            <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate('ส่ง') }} >ส่ง</Button>\r\n                            : dataNews.status === 'ส่ง' ?\r\n                                <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate('ขอแก้ไข')}} >ขอแก้ไข</Button>\r\n                                :\r\n                                null\r\n                    }\r\n                    < Link to=\"/home\">\r\n                        <Button className=\"view-Button\">ย้อนกลับ</Button>\r\n                    </Link>\r\n                </Row>\r\n                <Modals\r\n                    isModalVisible={isModalVisible}\r\n                    onOk={modalData.onOk}\r\n                    onCancel={offModal}\r\n                    modalData={modalData}\r\n                >\r\n                    <p className=\"truncate-text\">{modalData.content}</p>\r\n                </Modals>\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default View","E:\\web-touch-news\\src\\pages\\admin\\home\\index.js",["119"],"import { Breadcrumb, Button, Col, Input, Layout, Row, Select, Space, Tooltip, message } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, FieldTimeOutlined, PlusOutlined, SendOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from 'components/layout/modal'\r\nimport Tables from 'components/layout/table'\r\nimport Timeline from 'components/layout/timeline'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\n\r\nconst { Content } = Layout;\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst Home = () => {\r\n    const [dataSource, setDataSource] = useState()\r\n    const [total, setTotal] = useState({ all: 0, sdnt: 0, draft: 0 })\r\n    const [loading, setLoading] = useState(true)\r\n    const [pagination, setPagination] = useState({ current: 1, sorter: 'dsc', pageSize: 1, total: 1 })\r\n    const [category, setCategory] = useState(null)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: null, okText: '' });\r\n    const [dataSearch, setDataSearch] = useState({ category: '', filter: '' })\r\n    const [filters, setFilters] = useState()\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        getTotalNews()\r\n        getCategory()\r\n    }, [pagination.current, pagination.sorter, dataSearch, filters])\r\n\r\n    const getData = () => {\r\n        var params = new URLSearchParams()\r\n        params.append(\"page\", pagination.current)\r\n        params.append(\"sorts\", `created_at:${pagination.sorter}`)\r\n        params.append(\"filters\", `topic:like:${dataSearch.filter}`)\r\n        params.append(\"filters\", `category:like:${dataSearch.category}`)\r\n        httpClient.get(config.REACT_APP_BASEURL + '/news/admin', { params })\r\n            .then(function (response) {\r\n                console.log('response', response)\r\n                const code = response.data.code\r\n                const data = response.data.data.data_list\r\n                setLoading(false)\r\n                if (code === 200) {\r\n                    setPagination({\r\n                        current: response.data.data.pagination.current_page,\r\n                        pageSize: response.data.data.pagination.per_page,\r\n                        total: response.data.data.pagination.total,\r\n                        sorter: response.data.data.pagination.sorts[0].value\r\n                    })\r\n                    const dataMap = data.map((item) => {\r\n                        item.key = item.id\r\n                        item.date = item.created_at\r\n                        return item\r\n                    })\r\n                    setDataSource(dataMap)\r\n\r\n                } else {\r\n                    setDataSource()\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const getTotalNews = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/news/countadmin')\r\n          .then(function (response) {\r\n            console.log('response', response)\r\n            const code = response.data.code\r\n            if (code === 200) {\r\n              console.log('total', response.data.data)\r\n              setTotal({...total,\r\n                all:pagination.total,\r\n                sdnt:response.data.data[1],\r\n                draft:response.data.data[0]\r\n\r\n              })\r\n            } else {\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          })\r\n      }\r\n\r\n    const getCategory = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/category')\r\n            .then(function (response) {\r\n                const data = response.data.data.data_list\r\n                const code = response.data.code\r\n                if (code === 200) {\r\n                    const dataMap = data.map((item) => {\r\n                        item = <Option key={item.id} value={item.category}>{item.category}</Option>\r\n                        return item\r\n                    })\r\n                    setCategory(dataMap)\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const onSearch = (value) => {\r\n        setDataSearch({ ...dataSearch, filter: value })\r\n        setLoading(true)\r\n    }\r\n\r\n    const onCategory = (value) => {\r\n        setDataSearch({ ...dataSearch, category: value })\r\n        setLoading(true)\r\n    }\r\n\r\n    const onTimeline = (record) => {\r\n        setModalData({\r\n            type: 'show',\r\n            icon: <FieldTimeOutlined className=\"admin-icon-time\" />,\r\n            title: 'ไทม์ไลน์',\r\n            okColor: '#216258',\r\n            okText: 'ตกลง',\r\n            onOk() {\r\n                offModal()\r\n            },\r\n            content: <Timeline idNews={record.key} />,\r\n        })\r\n        onModal()\r\n    }\r\n\r\n    const onDelete = (record) => {\r\n        setModalData({\r\n            type: 'confirm',\r\n            icon: <DeleteOutlined className=\"admin-icon-delete\" />,\r\n            title: 'คุณต้องการลบข่าวนี้ หรือไม่ ! ',\r\n            okColor: 'red',\r\n            okText: 'ลบ',\r\n            onOk() {\r\n                offModal()\r\n                httpClient.delete(config.REACT_APP_BASEURL + '/news/' + record.key)\r\n                    .then(function (response) {\r\n                        const code = response.data.code\r\n                        if (code === 200) {\r\n                            message.success(response.data.message);\r\n                            setFilters(record.key)\r\n                        } else {\r\n                            message.success(response.data.message);\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                        message.error('เชื่อมต่อ Server ล้มเหลว');\r\n                    })\r\n            },\r\n            content: record.topic,\r\n        })\r\n        onModal()\r\n    }\r\n\r\n    const onModal = () => {\r\n        setIsModalVisible(true)\r\n    };\r\n\r\n    const offModal = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: '120px',\r\n            sorter: true,\r\n        },\r\n        {\r\n            title: 'หัวข้อ',\r\n            dataIndex: 'topic',\r\n            key: 'topic',\r\n            width: '500px',\r\n            ellipsis: true,\r\n            render: (text, record) => (<Link to={`/home/view/${record.key}`} style={{ color: '#000' }}>{record.topic}</Link>),\r\n        },\r\n        {\r\n            title: 'ประเภท',\r\n            dataIndex: 'category',\r\n            key: 'category',\r\n            width: '150px'\r\n        },\r\n        {\r\n            title: 'สถานะ',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: '100px'\r\n        },\r\n        {\r\n            title: '',\r\n            fixed: 'right',\r\n            width: '140px',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space >\r\n                    <Tooltip placement=\"bottom\" title=\"ไทม์ไลน์\">\r\n                        {/* <FieldTimeOutlined className=\"admin-icon-time\" onClick={() => { onTimeline(record) }}></FieldTimeOutlined> */}\r\n                        <Button  icon={<FieldTimeOutlined className=\"admin-icon-time\"/>} size={'middle'} onClick={() => { onTimeline(record) }}/> \r\n\r\n                    </Tooltip>\r\n                    {record.status === 'ร่าง' || record.status === 'แก้ไข'?\r\n                        <>\r\n                            <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n                                <Link to={`/home/edit/${record.key}`}>\r\n                                    {/* <EditOutlined className=\"admin-icon-edit\" /> */}\r\n                                    <Button  icon={<EditOutlined className=\"admin-icon-edit\" />} size={'middle'} /> \r\n                                </Link>\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n                                {/* <DeleteOutlined className=\"admin-icon-delete\" onClick={() => { onDelete(record) }} /> */}\r\n                                <Button  icon={<DeleteOutlined className=\"admin-icon-delete\"/>} size={'middle'} onClick={() => { onDelete(record) }}/> \r\n                            </Tooltip>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n                                {/* <EditOutlined className=\"admin-icon-disabled\" /> */}\r\n                                <Button  icon={<EditOutlined className=\"admin-icon-disabled\" />} size={'middle'} disabled/> \r\n\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n                                {/* <DeleteOutlined className=\"admin-icon-disabled\" /> */}\r\n                                <Button  icon={<DeleteOutlined className=\"admin-icon-disabled\"/>} size={'middle'} disabled/> \r\n\r\n                            </Tooltip>\r\n                        </>\r\n                    }\r\n                </Space>\r\n            ),\r\n        }\r\n    ];\r\n    return (\r\n        <>\r\n            <Breadcrumb style={{ margin: '4px 0' }}>\r\n                <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Content className=\"admin-home-content\">\r\n                <Row gutter={[16, 16]} >\r\n                    <Col xs={24} sm={12} md={12} lg={8} xl={8}>\r\n                        <div className=\"admin-home-box-left\">\r\n                            <Row align=\"middle\" style={{ height: '100%' }}>\r\n                                <Col span={8} offset={4}>\r\n                                    <UnorderedListOutlined className=\"admin-home-icon\" />\r\n                                </Col>\r\n                                <Col span={8}>\r\n                                    <p className=\"admin-home-number\"> {total.all} </p>\r\n                                    <p className=\"admin-home-text\">ข่าวทั้งหมด</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={24} sm={12} md={12} lg={8} xl={8} >\r\n                        <div className=\"admin-home-box-center\" >\r\n                            <Row align=\"middle\" style={{ height: '100%' }}>\r\n                                <Col span={8} offset={4}>\r\n                                    <SendOutlined className=\"admin-home-icon\" />\r\n                                </Col>\r\n                                <Col span={8}>\r\n                                    <p className=\"admin-home-number\"> {total.sdnt} </p>\r\n                                    <p className=\"admin-home-text\">ข่าวส่งแล้ว</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={24} sm={12} md={12} lg={8} xl={8} >\r\n                        <div className=\"admin-home-box-right\" >\r\n                            <Row align=\"middle\" style={{ height: '100%' }}>\r\n                                <Col span={8} offset={4}>\r\n                                    <EditOutlined className=\"admin-home-icon\" />\r\n                                </Col>\r\n                                <Col span={8}>\r\n                                    <p className=\"admin-home-number\"> {total.draft} </p>\r\n                                    <p className=\"admin-home-text\">ข่าวร่าง</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={8} style={{ marginTop: '20px' }} >\r\n                    <Col flex=\"auto\" xs={24} sm={12} md={12} lg={16} xl={16}>\r\n                        <div className=\"admin-home-text-list\">รายการ</div>\r\n                    </Col>\r\n                    <Col flex=\"220px\">\r\n                        <Input.Group >\r\n                            <Select placeholder=\"เลือกประเภท\" style={{ width: '100%' }} onChange={onCategory}>\r\n                                <Option value=\"\">ทั้งหมด</Option>\r\n                                {category}\r\n                            </Select>\r\n                        </Input.Group>\r\n                    </Col>\r\n                    <Col flex=\"220px\">\r\n                        <Search placeholder=\"ค้นหา\" onSearch={onSearch}></Search>\r\n                    </Col>\r\n                    <Col flex=\"100px\">\r\n                        <Link to=\"/home/create\">\r\n                            <Button style={{ width: '100%' }} type=\"primary\" icon={<PlusOutlined />}>เพิ่ม</Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Tables\r\n                    loading={loading}\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                    setPagination={setPagination}\r\n                    pagination={pagination}\r\n                />\r\n                <Modals\r\n                    isModalVisible={isModalVisible}\r\n                    onOk={modalData.onOk}\r\n                    onCancel={offModal}\r\n                    modalData={modalData}\r\n                >\r\n                    {modalData.type === 'show' ?\r\n                        <div style={{ marginTop: '5px', marginLeft: '20px' }}>{modalData.content}</div>\r\n                        :\r\n                        <p className=\"truncate-text\">{modalData.content}</p>\r\n                    }\r\n                </Modals>\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default Home","E:\\web-touch-news\\src\\pages\\admin\\createNews\\index.js",["120","121","122"],"import { AutoComplete, Breadcrumb, Button, Col, Form, Image, Input, Layout, Row, Select, Spin, Tooltip, Upload, message } from 'antd'\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\n\r\nimport { Context } from '../../../context'\r\nimport FormData from 'form-data'\r\nimport { Froala } from 'components/layout/froala/index'\r\nimport { Link } from \"react-router-dom\";\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport Tag from 'components/layout/tag/index'\r\nimport axios from 'axios'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\nimport imgError from 'assets/image/img_error2.png'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\n\r\nconst CreateNews = (props) => {\r\n    const params = props.match.params\r\n    const context = useContext(Context)\r\n    const [form] = Form.useForm()\r\n    const [category, setCategory] = useState(null)\r\n    const [credit, setCredit] = useState({ inputValue: '', tags: [] })\r\n    const [hashtag, setHashtag] = useState({ inputValue: '', tags: [] })\r\n    const [hashtagSource, setHashtagSource] = useState(null)\r\n    const [image, setImage] = useState('error')\r\n    const [spinningImage, setSpinningImage] = useState(false)\r\n    const [newsContent, setNewsContent] = useState('')\r\n    const [imageContent, setImageContent] = useState()\r\n    const [cause, setCause] = useState('')\r\n    useEffect(() => {\r\n        getCategory()\r\n        getHashtag()\r\n        if (params.type === 'edit') {\r\n            getData()\r\n        }\r\n    }, [props.location.pathname])\r\n\r\n    const getData = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/news/info/' + params.id)\r\n            .then(function (response) {\r\n                const code = response.data.code\r\n                const data = response.data.data\r\n                const hashtag = response.data.data.hashtag\r\n                const credit = response.data.data.credit\r\n                if (code === 200) {\r\n                    form.setFieldsValue({\r\n                        topic: data.topic,\r\n                        category: data.category,\r\n                    })\r\n                    setNewsContent(data.content)\r\n                    setImage(data.image)\r\n                    setCause(data.cause)\r\n                    setCredit({\r\n                        tags:credit,\r\n                        inputValue:''\r\n                    })\r\n                    setHashtag({\r\n                        tags:hashtag,\r\n                        inputValue:''\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const getCategory = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/category')\r\n            .then(function (response) {\r\n                const data = response.data.data.data_list\r\n                const code = response.data.code\r\n                if (code === 200) {\r\n                    const dataMap = data.map((item) => {\r\n                        item = <Option key={item.id} value={item.category}>{item.category}</Option>\r\n                        return item\r\n                    })\r\n                    setCategory(dataMap)\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const getHashtag = () => {\r\n        httpClient.get(config.REACT_APP_BASEURL + '/hashtag')\r\n            .then(function (response) {\r\n                const code = response.data.code\r\n                if (code === 200) {\r\n                    const data = response.data?.data\r\n                    const dataMap = data?.map((item) => {\r\n                        item = { value: item }\r\n                        return item\r\n                    })\r\n                    setHashtagSource(dataMap)\r\n                }else{\r\n                    console.log('map Error')\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    const uploadImage = (option) => {\r\n        // console.log('file.originFileObj', file.originFileObj)\r\n        setSpinningImage(true)\r\n        let setData = new FormData();\r\n        setData.append('sampleFile', option.file);\r\n        setData.append('save', false)\r\n        axios.post(config.REACT_APP_IMGAE + '/upload', setData)\r\n            .then(function (response) {\r\n                console.log('response', response)\r\n                const status = response.status\r\n                const data = response.data\r\n                if (status === 200) {\r\n                    setImage(data.url)\r\n                    setSpinningImage(false)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const submitCreate = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            const setData = JSON.stringify({\r\n                \"category\": values.category,\r\n                \"topic\": values.topic,\r\n                \"content\": newsContent,\r\n                \"image\": image,\r\n                \"credit\": credit.tags,\r\n                \"hashtag\": hashtag.tags,\r\n                \"status\": \"ร่าง\",\r\n            })\r\n            httpClient.post(config.REACT_APP_BASEURL + '/news', setData)\r\n                .then(function (response) {\r\n                    const code = response.data.code\r\n                    if (code === 201) {\r\n                        message.success(response.data.message)\r\n                        let setData = new FormData();\r\n                        setData.append('url', image);\r\n                        axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\r\n                            .then(function (response) {\r\n                                console.log(response)\r\n                            })\r\n                            .catch(function (error) {\r\n                                console.log(error)\r\n                            })\r\n                        if (imageContent !== undefined) {\r\n                            imageContent.map((item) => {\r\n                                let setData = new FormData();\r\n                                setData.append('url', item);\r\n                                axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\r\n                                    .then(function (response) {\r\n                                        console.log(response)\r\n                                    })\r\n                                    .catch(function (error) {\r\n                                        console.log(error)\r\n                                    })\r\n                            })\r\n                        }\r\n                        props.history.push(`/home/view/${response.data.data}`)\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        } catch (errorInfo) {\r\n            console.log('Failed:', errorInfo);\r\n        }\r\n    }\r\n\r\n    const submitEdit = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            const setData = JSON.stringify({\r\n                \"category\": values.category,\r\n                \"topic\": values.topic,\r\n                \"content\": newsContent,\r\n                \"image\": image,\r\n                \"credit\": credit.tags,\r\n                \"hashtag\": hashtag.tags,\r\n                \"status\": \"แก้ไข\",\r\n                \"by\": context.user.firstname + \" \" + context.user.lastname\r\n            })\r\n            httpClient.put(config.REACT_APP_BASEURL + `/news/update/${params.id}`, setData)\r\n                .then(function (response) {\r\n                    const code = response.data.code\r\n                    if (code === 200) {\r\n                        message.success(response.data.message)\r\n                        let setData = new FormData();\r\n                        setData.append('url', image);\r\n                        axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\r\n                            .then(function (response) {\r\n                                console.log(response)\r\n                            })\r\n                            .catch(function (error) {\r\n                                console.log(error)\r\n                            })\r\n                        if (imageContent !== undefined) {\r\n                            imageContent.map((item) => {\r\n                                let setData = new FormData();\r\n                                setData.append('url', item);\r\n                                axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\r\n                                    .then(function (response) {\r\n                                        console.log(response)\r\n                                    })\r\n                                    .catch(function (error) {\r\n                                        console.log(error)\r\n                                    })\r\n                            })\r\n                        }\r\n                        props.history.push(`/home/view/${params.id}`)\r\n                        console.log('params.id', params.id)\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        } catch (errorInfo) {\r\n            console.log('Failed:', errorInfo);\r\n        }\r\n    }\r\n    \r\n\r\n    const changeNewsContent = html => {\r\n        console.log('html', html)\r\n        console.log('imageContent', imageContent)\r\n        setNewsContent(html)\r\n    }\r\n    const creditChange = (e) => {\r\n        setCredit({ ...credit, inputValue: e.target.value });\r\n    };\r\n    const creditClose = removedTag => {\r\n        const tags = credit.tags.filter(tag => tag !== removedTag);\r\n        setCredit({ tags })\r\n    }\r\n    const creditConfirm = (e) => {\r\n        let tags = [...credit.tags];\r\n        tags.push(credit.inputValue)\r\n        setCredit({\r\n            tags,\r\n            inputValue: '',\r\n        });\r\n    }\r\n\r\n    const hashtagChange = (inputValue) => {\r\n        setHashtag({ ...hashtag, inputValue: inputValue });\r\n    }\r\n\r\n    const hashtagClose = removedTag => {\r\n        const tags = hashtag.tags.filter(tag => tag !== removedTag);\r\n        setHashtag({\r\n            tags,\r\n            inputValue: ''\r\n        })\r\n    }\r\n\r\n    const hashtagConfirm = () => {\r\n        let tags = [...hashtag.tags];\r\n        tags.push(hashtag.inputValue)\r\n        setHashtag({\r\n            tags,\r\n            inputValue: '',\r\n        });\r\n    }\r\n\r\n    const onErrorImg = (e) => {\r\n        e.target.src = imgError\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {params.type === \"create\" ?\r\n                <Breadcrumb style={{ margin: '4px 0' }}>\r\n                    <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>เพิ่ม</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                :\r\n                <Breadcrumb style={{ margin: '4px 0' }}>\r\n                    <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>แก้ไข</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            }\r\n            <Content className=\"create-content\">\r\n                <Form\r\n                    form={form}\r\n                    layout=\"vertical\"\r\n                >\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={12} >\r\n                            <Row gutter={[0, 0]} justify='center'>\r\n                                <Col span={16}>\r\n                                    <Spin spinning={spinningImage}>\r\n                                        <Image\r\n                                            width={'100%'}\r\n                                            // height='50xp\r\n                                            src={image}\r\n                                            onError={onErrorImg}\r\n                                        />\r\n                                    </Spin>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[0, 0]} justify='center'>\r\n                                <Col>\r\n                                    <div style={{ color: '#A0A0A0' }}>อัตราส่วนภาพ 1:1 ขนาด 1080x1080 px</div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[0, 16]} justify='center'>\r\n                                <Col>\r\n                                    <Upload\r\n                                        listType=\"picture\"\r\n                                        customRequest={uploadImage}\r\n                                        showUploadList={false}\r\n                                    >\r\n                                        <Button>อัพโหลดรูปภาพ</Button>\r\n                                    </Upload>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 8]} align='middle' style={{marginTop:'20px'}}>\r\n                                <Col style={{ textAlign: 'right'}} span={5}>\r\n                                    <div>เครติด</div>\r\n                                </Col>\r\n                                <Col span={16}>\r\n                                    <Input\r\n                                        value={credit.inputValue}\r\n                                        onChange={creditChange}\r\n                                        // onBlur={handleTagConfirm}\r\n                                        onPressEnter={creditConfirm}\r\n                                    />\r\n                                </Col>\r\n                                <Col span={2}>\r\n                                    <Tooltip placement=\"bottom\" title=\"เพิ่มเครติด\">\r\n                                        <PlusCircleOutlined className=\"create-icon\" onClick={creditConfirm}></PlusCircleOutlined>\r\n                                    </Tooltip>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 16]} align='middle'>\r\n                                <Col offset={5}>\r\n                                    <Tag\r\n                                        data={credit.tags}\r\n                                        onClose={creditClose}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 8]} align='middle'>\r\n                                <Col style={{ textAlign: 'right' }} span={5}>\r\n                                    <div>แฮชแท็ก</div>\r\n                                </Col>\r\n                                <Col span={16}>\r\n                                    <Input.Group>\r\n                                        <AutoComplete\r\n                                            style={{ width: '100%', }}\r\n                                            value={hashtag.inputValue}\r\n                                            onChange={hashtagChange}\r\n                                            options={hashtagSource}\r\n                                            filterOption={(inputValue, option) =>\r\n                                                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                                            }\r\n                                        />\r\n                                    </Input.Group>\r\n                                </Col>\r\n                                <Col span={2}>\r\n                                    <Tooltip placement=\"bottom\" title=\"เพิ่มแฮชแท็ก\">\r\n                                        <PlusCircleOutlined onClick={hashtagConfirm} className=\"create-icon\"></PlusCircleOutlined>\r\n                                    </Tooltip>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 16]} align='middle'>\r\n                                <Col offset={5}>\r\n                                    <Tag\r\n                                        data={hashtag.tags}\r\n                                        onClose={hashtagClose}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            {params.type === 'edit' ?\r\n                                <Row gutter={[8, 8]}>\r\n                                    <Col style={{ textAlign: 'right' }} span={5}>\r\n                                        <div>สิ่งที่ควรแก้ไข</div>\r\n                                    </Col>\r\n                                    <Col span={17}>\r\n                                        <div style={{ color: 'red' }}>คำแนะนำจาก Super Admin</div>\r\n                                        <div>{cause}</div>\r\n                                    </Col>\r\n                                </Row>\r\n                            :\r\n                                null\r\n                            }\r\n                        </Col>\r\n                        <Col xs={{ span: 18, offset: 3 }} sm={{ span: 18, offset: 3 }} md={{ span: 18, offset: 3 }} lg={{ span: 18, offset: 3 }} xl={{ span: 12, offset: 0 }}>\r\n                            <Form.Item\r\n                                label=\"ประเภทข่าว\"\r\n                                name=\"category\"\r\n                                rules={[{ required: true, message: 'Please input your username!' }]}\r\n                            >\r\n                                <Select placeholder=\"เลือกประเภท\">\r\n                                    {category}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"หัวเรื่อง\"\r\n                                name=\"topic\"\r\n                                rules={[{ required: true, message: 'กรุณาใส่ข้อมูล' }]}\r\n                            >\r\n                                <Input></Input>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"เนื้อหาข่าว\"\r\n                            >\r\n                                <Froala\r\n                                    onModelChange={changeNewsContent}\r\n                                    setImageContent={setImageContent}\r\n                                    mode={newsContent}\r\n                                />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"end\">\r\n                    {params.type === 'create' ?\r\n                        <Button className=\"create-button\" type=\"primary\" ghost onClick={submitCreate} >บันทึก</Button>\r\n                        :\r\n                        <Button className=\"create-button\" type=\"primary\" ghost onClick={submitEdit} >บันทึก</Button>\r\n                        }\r\n                        <Link to=\"/home\">\r\n                            <Button className=\"create-button\">ยกเลิก</Button>\r\n                        </Link>\r\n                    </Row>\r\n                </Form>\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default CreateNews","E:\\web-touch-news\\src\\pages\\super\\home\\index.js",["123"],"E:\\web-touch-news\\src\\pages\\super\\manage\\index.js",["124","125"],"import { Breadcrumb, Button, Col, Form, Input, Layout, Row, Space, Switch, Tooltip, message } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, ExclamationCircleOutlined, PlusOutlined, UserOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport Modals from 'components/layout/modal'\r\nimport Tables from 'components/layout/table'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst Manage = () => {\r\n  const [formValue] = Form.useForm();\r\n  const [dataSource, setDataSource] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  const [dataFilter, setDataFilter] = useState(\"\")\r\n  const [dataSearch, setDataSearch] = useState(\"\")\r\n  const [current, setCurrent] = useState(1)\r\n  const [pagination, setPagination] = useState({ pageCurrent: 1, perPage: 15, totalPage: 1 })\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: '', okText: '', onOk: null });\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [dataFilter, current, isModalVisible, dataSearch])\r\n\r\n  const getData = () => {\r\n    const params = {\r\n      // per_page: '10',\r\n      page: current,\r\n      filters: `firstname:like:${dataSearch}`\r\n    }\r\n    httpClient.get(config.REACT_APP_BASEURL + '/admin', { params })\r\n      .then(function (response) {\r\n        console.log('response', response.data.code)\r\n        const code = response.data.code\r\n        const data = response.data.data.data_list\r\n        setPagination({\r\n          currentPage: response.data.data.pagination.current_page,\r\n          perPage: response.data.data.pagination.per_page,\r\n          totalPage: response.data.data.pagination.total\r\n        })\r\n        if (code === 200) {\r\n          const dataMap = data.map((item) => {\r\n            item.key = item.id\r\n            item.email = item.email\r\n            item.name = item.firstname + ' ' + item.lastname\r\n            // item.status = item.status\r\n            const status = item.status\r\n            item.status = status === 'active' ? true : false\r\n            return item\r\n          })\r\n          setDataSource(dataMap)\r\n          setLoading(false)\r\n        } else {\r\n          setLoading(false)\r\n          setDataSource(data)\r\n          // message.error(response.data.message)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const onInsert = (value) => {\r\n    const setData = JSON.stringify({\r\n      \"email\": value.email\r\n    })\r\n    httpClient.post(config.REACT_APP_BASEURL + '/admin', setData)\r\n      .then(function (response) {\r\n        const code = response.data.code\r\n        if (code === 201) {\r\n          setModalData({\r\n            type: 'show',\r\n            icon: <UserOutlined className=\"manage-icon-insert\" />,\r\n            title: 'เพิ่มผู้ดูแลระบบใหม่',\r\n            okColor: '#216258',\r\n            okText: 'ตกลง',\r\n            onOk() {\r\n              setIsModalVisible(false)\r\n            },\r\n            content: ({\r\n              email: response.data.data.email,\r\n              password: response.data.data.password\r\n            }),\r\n          })\r\n          onModal()\r\n          setDataFilter(response.data.data.email)\r\n          formValue.setFieldsValue({\r\n            email: \"\"\r\n          })\r\n        }\r\n        else if (code === 200) {\r\n          message.error(response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    console.log('Delete id : ', record.key)\r\n    setModalData({\r\n      type: 'confirm',\r\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n      title: 'คุณต้องการลบผู้ดูแลระบบนี้ หรือไม่ ! ',\r\n      okColor: 'red',\r\n      okText: 'ลบ',\r\n      content: record.email,\r\n      onOk() {\r\n        setIsModalVisible(false)\r\n        httpClient.delete(config.REACT_APP_BASEURL + '/admin/' + record.key)\r\n          .then(function (response) {\r\n            const code = response.data.code\r\n            if (code === 200) {\r\n              message.success('ลบผู้ดูแลระบบสำเร็จ');\r\n              setDataFilter(record.key)\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error('ลบไม่สำเร็จ');\r\n          })\r\n      },\r\n    })\r\n    onModal()\r\n  }\r\n\r\n  const onSuspend = (checked, record) => {\r\n    if (checked === false) {\r\n      setModalData({\r\n        type: 'confirm',\r\n        icon: <ExclamationCircleOutlined className=\"manage-icon-suspend\" />,\r\n        title: 'คุณต้องการระงับผู้ดูแลระบบนี้ หรือไม่ ! ',\r\n        okColor: 'orange',\r\n        content: record.email,\r\n        okText: 'ระงับ',\r\n        onOk() {\r\n          const setData = JSON.stringify({\r\n            \"status\": \"inactive\"\r\n          })\r\n          console.log('setData', setData)\r\n          httpClient.put(config.REACT_APP_BASEURL + '/admin/suspend/' + record.key, setData)\r\n            .then(function (response) {\r\n              console.log('response', response)\r\n              const code = response.data.code\r\n              if (code === 200) {\r\n                message.success('ระงับผู้ดูแลระบบสำเร็จ');\r\n                setDataFilter(record.key)\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n              message.error('ระงับผู้ดูแลระบบไม่สำเร็จ');\r\n            })\r\n          offModal()\r\n        },\r\n      })\r\n      onModal()\r\n    }\r\n    else {\r\n      const setData = JSON.stringify({\r\n        \"status\": \"active\"\r\n      })\r\n      console.log('setData', setData)\r\n      httpClient.put(config.REACT_APP_BASEURL + '/admin/suspend/' + record.key, setData)\r\n        .then(function (response) {\r\n          const code = response.data.code\r\n          if (code === 200) {\r\n            message.success('อนุญาติผู้ดูแลระบบสำเร็จ');\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          message.error('อนุญาติผู้ดูแลระบบไม่สำเร็จ');\r\n        })\r\n    }\r\n  }\r\n\r\n  const onSearch = (value) => {\r\n    setDataSearch(value)\r\n    setLoading(true)\r\n  }\r\n\r\n  const currentPage = (value) => {\r\n    setCurrent(value);\r\n    console.log('currentPage', current)\r\n  }\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true)\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'อีเมล',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'ชื่อ - นามสกุล',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      responsive: ['md'],\r\n    },\r\n    {\r\n      title: '',\r\n      width: '15%',\r\n      key: 'action',\r\n      render: (record) => (\r\n        <Space >\r\n          <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n            <Link to={`/manage/profile/${record.key}`}>\r\n            <Button  icon={<EditOutlined className=\"manage-icon-edit\" />} size={'middle'} /> \r\n              {/* <EditOutlined className=\"manage-icon-edit\" /> */}\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n            <Button  icon={<DeleteOutlined className=\"manage-icon-delete\"/>} size={'middle'} onClick={() => { onDelete(record) }} /> \r\n            {/* <DeleteOutlined className=\"manage-icon-delete\" onClick={() => { onDelete(record) }} /> */}\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ระงับ\">\r\n            <Switch size=\"small\" defaultChecked={record.status} onClick={(e) => { onSuspend(e, record) }} />\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: '4px 0' }}>\r\n        <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"manage-content\">\r\n        <Row >\r\n          <Col xs={24} sm={24} md={14} lg={14} xl={16} style={{ marginBottom: '5px' }}>\r\n            <Form form={formValue} name=\"email\" layout=\"inline\" onFinish={onInsert}>\r\n              <Form.Item>\r\n                <div className=\"manage-Text\">ผู้ดูแลระบบ</div>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: false,\r\n                    pattern: /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i,\r\n                    message: 'Enter a valid email address!',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter your E-mail!\"\r\n                  }\r\n                ]}\r\n                className=\"manage-Input\">\r\n                <Input placeholder=\"กรอกอีเมล\" />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button className=\"manage-button\" type=\"primary\" htmlType=\"submit\" icon={<PlusOutlined />}>เพิ่ม</Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Col md={10} lg={10} xl={8} style={{ textAlign: 'right', paddingLeft: '80px' }}>\r\n            <Search placeholder=\"ค้นหา\" className=\"manage-search\" onSearch={onSearch} />\r\n          </Col>\r\n        </Row>\r\n        <Tables\r\n          loading={loading}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          setCurrentPage={currentPage}\r\n          pageCurrent={pagination.pageCurrent}\r\n          perPage={pagination.perPage}\r\n          totalPage={pagination.totalPage}\r\n        />\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={modalData.onOk}\r\n        onCancel={offModal}\r\n        modalData={modalData}\r\n      >\r\n        {modalData.type === 'show' ?\r\n          <>\r\n            <div style={{ marginLeft: '80px' }}>อีเมล : {modalData.content.email}</div>\r\n            <div style={{ marginLeft: '80px' }}>รหัสผ่าน {modalData.content.password}</div>\r\n            <div style={{ marginLeft: '40px', marginTop: '20px', color: 'red' }}>*ระบบจะแสดงข้อมูลเพียงครั้งเดียว*</div>\r\n          </>\r\n          :\r\n          <p style={{ marginLeft: '80px' }}>{modalData.content}</p>\r\n        }\r\n      </Modals>\r\n    </>\r\n  );\r\n}\r\nexport default Manage","E:\\web-touch-news\\src\\context.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":8,"column":8,"nodeType":"132","messageId":"133","endLine":8,"endColumn":14},{"ruleId":"130","severity":1,"message":"134","line":1,"column":18,"nodeType":"132","messageId":"133","endLine":1,"endColumn":23},{"ruleId":"130","severity":1,"message":"135","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":24,"column":8,"nodeType":"138","endLine":24,"endColumn":51,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":21,"column":8,"nodeType":"138","endLine":21,"endColumn":33,"suggestions":"141"},{"ruleId":"130","severity":1,"message":"142","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"143","line":12,"column":7,"nodeType":"138","endLine":12,"endColumn":21,"suggestions":"144"},{"ruleId":"126","replacedBy":"145"},{"ruleId":"128","replacedBy":"146"},{"ruleId":"136","severity":1,"message":"147","line":43,"column":6,"nodeType":"138","endLine":43,"endColumn":23,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":273,"column":19,"nodeType":"151","endLine":273,"endColumn":48},{"ruleId":"149","severity":1,"message":"150","line":275,"column":19,"nodeType":"151","endLine":275,"endColumn":50},{"ruleId":"136","severity":1,"message":"137","line":29,"column":8,"nodeType":"138","endLine":29,"endColumn":16,"suggestions":"152"},{"ruleId":"136","severity":1,"message":"153","line":31,"column":8,"nodeType":"138","endLine":31,"endColumn":68,"suggestions":"154"},{"ruleId":"136","severity":1,"message":"155","line":37,"column":8,"nodeType":"138","endLine":37,"endColumn":33,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":157,"column":53,"nodeType":"159","messageId":"160","endLine":157,"endColumn":55},{"ruleId":"157","severity":1,"message":"158","line":208,"column":53,"nodeType":"159","messageId":"160","endLine":208,"endColumn":55},{"ruleId":"136","severity":1,"message":"161","line":34,"column":6,"nodeType":"138","endLine":34,"endColumn":66,"suggestions":"162"},{"ruleId":"136","severity":1,"message":"137","line":27,"column":6,"nodeType":"138","endLine":27,"endColumn":55,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":48,"column":26,"nodeType":"166","messageId":"167","endLine":48,"endColumn":36},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'sha256' is defined but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'BellOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["170"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["171"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getTimeLine'. Either include it or remove the dependency array.",["172"],["168"],["169"],"React Hook useEffect has missing dependencies: 'getData', 'getDataAdmin', and 'props.location.pathname'. Either include them or remove the dependency array.",["173"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["174"],"React Hook useEffect has missing dependencies: 'getData' and 'getTotalNews'. Either include them or remove the dependency array. Mutable values like 'pagination.current' aren't valid dependencies because mutating them doesn't re-render the component.",["175"],"React Hook useEffect has missing dependencies: 'getData' and 'params.type'. Either include them or remove the dependency array.",["176"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array. Mutable values like 'pagination.current' aren't valid dependencies because mutating them doesn't re-render the component.",["177"],["178"],"no-self-assign","'item.email' is assigned to itself.","MemberExpression","selfAssignment","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [user.firstname, user.lastname, user.image, getData]",{"range":"197","text":"198"},"Update the dependencies array to be: [props, props.location.pathname]",{"range":"199","text":"200"},"Update the dependencies array to be: [getTimeLine, props.idNews]",{"range":"201","text":"202"},"Update the dependencies array to be: [params, context, props.location.pathname, getData, getDataAdmin]",{"range":"203","text":"204"},"Update the dependencies array to be: [getData, params]",{"range":"205","text":"206"},"Update the dependencies array to be: [pagination.sorter, dataSearch, filters, getData, getTotalNews]",{"range":"207","text":"208"},"Update the dependencies array to be: [getData, params.type, props.location.pathname]",{"range":"209","text":"210"},"Update the dependencies array to be: [pagination.sorter, dataSearch, filters, getData]",{"range":"211","text":"212"},"Update the dependencies array to be: [dataFilter, current, isModalVisible, dataSearch, getData]",{"range":"213","text":"214"},[740,783],"[user.firstname, user.lastname, user.image, getData]",[724,749],"[props, props.location.pathname]",[435,449],"[getTimeLine, props.idNews]",[1454,1471],"[params, context, props.location.pathname, getData, getDataAdmin]",[1196,1204],"[getData, params]",[1404,1464],"[pagination.sorter, dataSearch, filters, getData, getTotalNews]",[1513,1538],"[getData, params.type, props.location.pathname]",[1435,1495],"[pagination.sorter, dataSearch, filters, getData]",[1193,1242],"[dataFilter, current, isModalVisible, dataSearch, getData]"]
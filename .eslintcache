[{"E:\\web-touch-news\\src\\index.js":"1","E:\\web-touch-news\\src\\context.js":"2","E:\\web-touch-news\\src\\reportWebVitals.js":"3","E:\\web-touch-news\\src\\Root.js":"4","E:\\web-touch-news\\src\\App.js":"5","E:\\web-touch-news\\src\\pages\\login\\index.js":"6","E:\\web-touch-news\\src\\components\\router\\index.js":"7","E:\\web-touch-news\\src\\components\\layout\\sider\\index.js":"8","E:\\web-touch-news\\src\\components\\layout\\header\\index.js":"9","E:\\web-touch-news\\src\\config.js":"10","E:\\web-touch-news\\src\\HttpClient.js":"11","E:\\web-touch-news\\src\\pages\\profile\\index.js":"12","E:\\web-touch-news\\src\\pages\\viewNews\\index.js":"13","E:\\web-touch-news\\src\\pages\\admin\\createNews\\index.js":"14","E:\\web-touch-news\\src\\pages\\admin\\home\\index.js":"15","E:\\web-touch-news\\src\\pages\\super\\manage\\index.js":"16","E:\\web-touch-news\\src\\pages\\super\\home\\index.js":"17","E:\\web-touch-news\\src\\components\\layout\\tag\\index.js":"18","E:\\web-touch-news\\src\\components\\layout\\froala\\index.js":"19","E:\\web-touch-news\\src\\components\\layout\\modal\\index.js":"20","E:\\web-touch-news\\src\\components\\layout\\table\\index.js":"21","E:\\web-touch-news\\src\\components\\layout\\timeline\\index.js":"22"},{"size":585,"mtime":1614781856437,"results":"23","hashOfConfig":"24"},{"size":578,"mtime":1614781828457,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1612938333687,"results":"26","hashOfConfig":"24"},{"size":673,"mtime":1614781893374,"results":"27","hashOfConfig":"24"},{"size":720,"mtime":1614781907028,"results":"28","hashOfConfig":"24"},{"size":4254,"mtime":1614780862314,"results":"29","hashOfConfig":"24"},{"size":1448,"mtime":1614780843823,"results":"30","hashOfConfig":"24"},{"size":1890,"mtime":1614782305012,"results":"31","hashOfConfig":"24"},{"size":3640,"mtime":1614780452756,"results":"32","hashOfConfig":"24"},{"size":64,"mtime":1614781818690,"results":"33","hashOfConfig":"24"},{"size":1701,"mtime":1614781841231,"results":"34","hashOfConfig":"24"},{"size":13742,"mtime":1614781484776,"results":"35","hashOfConfig":"24"},{"size":10455,"mtime":1614781767922,"results":"36","hashOfConfig":"24"},{"size":15748,"mtime":1614781123561,"results":"37","hashOfConfig":"24"},{"size":12686,"mtime":1614782100868,"results":"38","hashOfConfig":"24"},{"size":11542,"mtime":1614781620839,"results":"39","hashOfConfig":"24"},{"size":12047,"mtime":1614782203929,"results":"40","hashOfConfig":"24"},{"size":478,"mtime":1614780807851,"results":"41","hashOfConfig":"24"},{"size":1463,"mtime":1614779774778,"results":"42","hashOfConfig":"24"},{"size":1437,"mtime":1614780673864,"results":"43","hashOfConfig":"24"},{"size":872,"mtime":1614780779144,"results":"44","hashOfConfig":"24"},{"size":3899,"mtime":1614782155520,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"xzs7i7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"E:\\web-touch-news\\src\\index.js",[],["99","100"],"E:\\web-touch-news\\src\\context.js",[],"E:\\web-touch-news\\src\\reportWebVitals.js",[],"E:\\web-touch-news\\src\\Root.js",[],"E:\\web-touch-news\\src\\App.js",[],"E:\\web-touch-news\\src\\pages\\login\\index.js",[],"E:\\web-touch-news\\src\\components\\router\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\sider\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\header\\index.js",["101","102","103"],"import {\r\n  Avatar,\r\n  Badge,\r\n  Col,\r\n  Layout,\r\n  Popover,\r\n  Row,\r\n  Tooltip,\r\n  message,\r\n} from \"antd\";\r\nimport { BellOutlined, ExportOutlined } from \"@ant-design/icons\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Context } from \"../../../context\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst Headerbar = () => {\r\n  const context = useContext(Context);\r\n  const user = context.user;\r\n  const [dataUser, setDataUser] = useState({\r\n    image: \"\",\r\n    firstname: \"\",\r\n    badge: null,\r\n  });\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleVisibleChange = (visible) => {\r\n    setVisible(visible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [user.firstname, user.lastname, user.image]);\r\n\r\n  const getData = () => {\r\n    const setData = localStorage.getItem(\"id\");\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/user/\" + setData)\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        const data = response.data.data;\r\n        if (code === 200) {\r\n          setDataUser({\r\n            image: data.image,\r\n            firstname: data.firstname,\r\n            badge: 2,\r\n          });\r\n          context.setData({\r\n            email: data.email,\r\n            image: data.image,\r\n            firstname: data.firstname,\r\n            lastname: data.lastname,\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onLogout = () => {\r\n    httpClient\r\n      .post(config.REACT_APP_BASEURL + \"/logout\")\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          localStorage.setItem(\"access_token\", \"\");\r\n          localStorage.setItem(\"refresh_token\", \"\");\r\n          localStorage.setItem(\"role\", \"\");\r\n          localStorage.setItem(\"id\", \"\");\r\n          message.success(\"ออกจากระบบสำเร็จ\");\r\n          window.location.reload();\r\n        } else {\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Header className=\"header\">\r\n      <Row>\r\n        <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <div className=\"header-text\">touch korat news</div>\r\n        </Col>\r\n        <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify=\"end\">\r\n            <Col>\r\n              <Avatar size={40} src={dataUser.image} />\r\n            </Col>\r\n            <Col className=\"header-name\">{dataUser.firstname}</Col>\r\n            <Col className=\"header-col-icon\">\r\n              <Popover\r\n                placement=\"bottomRight\"\r\n                content={\r\n                  <div>\r\n                    <p>Content</p>\r\n                    <p>Content</p>\r\n                  </div>\r\n                }\r\n                // title=\"Title\"\r\n                trigger=\"click\"\r\n                visible={visible}\r\n                onVisibleChange={handleVisibleChange}\r\n              >\r\n                {/* <Badge count={dataUser.badge} size=\"small\">\r\n                                    <BellOutlined className=\"header-icon\" />\r\n                                </Badge> */}\r\n              </Popover>\r\n            </Col>\r\n            <Col>\r\n              <Tooltip placement=\"bottomRight\" title=\"ออกจากระบบ\">\r\n                <ExportOutlined className=\"header-icon\" onClick={onLogout} />\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Header>\r\n  );\r\n};\r\nexport default Headerbar;\r\n","E:\\web-touch-news\\src\\config.js",[],"E:\\web-touch-news\\src\\HttpClient.js",[],"E:\\web-touch-news\\src\\pages\\profile\\index.js",["104"],"import {\r\n  Avatar,\r\n  Breadcrumb,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Layout,\r\n  Row,\r\n  Spin,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport { ExclamationCircleOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Context } from \"../../context\";\r\nimport FormData from \"form-data\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from \"components/layout/modal\";\r\nimport axios from \"axios\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\n\r\nconst { Content } = Layout;\r\nconst layout = {\r\n  labelCol: {\r\n    xs: { span: 2 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  },\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const context = useContext(Context);\r\n  const [formValue] = Form.useForm();\r\n  const params = props.match.params;\r\n  const [image, setImage] = useState(\"\");\r\n  const [spinningImage, setSpinningImage] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [showInputPass, setShowInputPass] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    type: \"\",\r\n    icon: null,\r\n    title: \"\",\r\n    okColor: \"\",\r\n    content: \"\",\r\n    okText: \"\",\r\n  });\r\n  const setId =\r\n    params.state === \"manage\" ? params.id : localStorage.getItem(\"id\");\r\n\r\n  useEffect(() => {\r\n    if (props.location.pathname === \"/profile\") {\r\n      getData();\r\n    } else {\r\n      getDataAdmin();\r\n    }\r\n  }, [params, context]);\r\n\r\n  const getData = () => {\r\n    const data = context.user;\r\n    setImage(data.image);\r\n    formValue.setFieldsValue({\r\n      email: data.email,\r\n      firstname: data.firstname,\r\n      lastname: data.lastname,\r\n      passwordNew: \"\",\r\n      passwordConfirm: \"\",\r\n    });\r\n  };\r\n\r\n  const getDataAdmin = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/user/\" + setId)\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          setImage(response.data.data.image);\r\n          formValue.setFieldsValue({\r\n            email: response.data.data.email,\r\n            firstname: response.data.data.firstname,\r\n            lastname: response.data.data.lastname,\r\n            passwordNew: \"\",\r\n            passwordConfirm: \"\",\r\n          });\r\n        } else {\r\n          message.error(\"โหลดข้อมูลล้มเหลว\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onLogout = () => {\r\n    httpClient\r\n      .post(config.REACT_APP_BASEURL + \"/logout\")\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          localStorage.setItem(\"access_token\", \"\");\r\n          localStorage.setItem(\"refresh_token\", \"\");\r\n          localStorage.setItem(\"role\", \"\");\r\n          localStorage.setItem(\"id\", \"\");\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const conFirmPassword = () => {\r\n    setModalData({\r\n      type: \"confirm\",\r\n      icon: <ExclamationCircleOutlined className=\"manage-icon-edit\" />,\r\n      title: \"ยืนยันการสร้างรหัสผ่านใหม่\",\r\n      okColor: \"orange\",\r\n      okText: \"ตกลง\",\r\n      content: \"คุณต้องการยืนยันการสร้างรหัสใหม่นี้หรือไม่ !!! \",\r\n      onOk() {\r\n        httpClient\r\n          .put(config.REACT_APP_BASEURL + \"/admin/reset_password/\" + setId)\r\n          .then(function (response) {\r\n            const code = response.data.code;\r\n            if (code === 201) {\r\n              setModalData({\r\n                type: \"show\",\r\n                icon: <UserOutlined className=\"manage-icon-insert\" />,\r\n                title: \"เปลี่ยนรหัสผ่านสำเร็จ\",\r\n                okColor: \"#216258\",\r\n                okText: \"ตกลง\",\r\n                onOk() {\r\n                  offModal();\r\n                },\r\n                content: {\r\n                  email: response.data.data.email,\r\n                  password: response.data.data.password,\r\n                },\r\n              });\r\n              onModal();\r\n            } else {\r\n              message.error(\"เปลี่ยนรหัสผ่านไม่สำเร็จ\");\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error(\"เปลี่ยนรหัสผ่านไม่สำเร็จ\");\r\n          });\r\n      },\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const cancelUpdate = () => {\r\n    getData();\r\n    setShowInputPass(false);\r\n    formValue.setFieldsValue({\r\n      password: \"\",\r\n      confirm: \"\",\r\n    });\r\n  };\r\n\r\n  const submitUpdate = (value) => {\r\n    if (showInputPass === true) {\r\n      const setData = JSON.stringify({\r\n        password: value.password,\r\n      });\r\n      httpClient\r\n        .put(config.REACT_APP_BASEURL + \"/user/password/\" + setId, setData)\r\n        .then(function (response) {\r\n          message.success(\"เปลี่ยนรหัสผ่านสำเร็จ\");\r\n          onLogout();\r\n        })\r\n        .catch(function (error) {\r\n          message.error(\"เปลี่ยนรหัสผ่านไม่สำเร็จ\");\r\n        });\r\n      formValue.setFieldsValue({\r\n        password: \"\",\r\n        confirm: \"\",\r\n      });\r\n    } else {\r\n      const setData = JSON.stringify({\r\n        firstname: value.firstname,\r\n        lastname: value.lastname,\r\n        image: image,\r\n      });\r\n      httpClient\r\n        .put(config.REACT_APP_BASEURL + \"/user/update/\" + setId, setData)\r\n        .then(function (response) {\r\n          if (response.data.code === 200) {\r\n            message.success(response.data.message);\r\n            context.setData({\r\n              image: image,\r\n              firstname: value.firstname,\r\n              lastname: value.lastname,\r\n            });\r\n            let setData = new FormData();\r\n            setData.append(\"url\", image);\r\n            axios\r\n              .post(config.REACT_APP_IMGAE + \"/savefile\", setData)\r\n              .then(function (response) {})\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const ShowInputPassword = () => {\r\n    if (showInputPass === false) {\r\n      setShowInputPass(true);\r\n    } else {\r\n      setShowInputPass(false);\r\n      formValue.setFieldsValue({\r\n        password: \"\",\r\n        confirm: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const customRequest = (option) => {\r\n    setSpinningImage(true);\r\n    let setData = new FormData();\r\n    setData.append(\"sampleFile\", option.file);\r\n    setData.append(\"save\", false);\r\n    axios\r\n      .post(config.REACT_APP_IMGAE + \"/upload\", setData)\r\n      .then(function (response) {\r\n        const status = response.status;\r\n        const data = response.data;\r\n        if (status === 200) {\r\n          setImage(data.url);\r\n          setSpinningImage(false);\r\n        } else {\r\n          setSpinningImage(false);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: \"4px 0\" }}>\r\n        {params.state === \"manage\" ? (\r\n          <>\r\n            <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\r\n            <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\r\n          </>\r\n        ) : (\r\n          <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\r\n        )}\r\n      </Breadcrumb>\r\n      <Content className=\"profile-layout-background\">\r\n        <Row justify=\"center\" gutter={[16, 16]} style={{ marginTop: \"20px\" }}>\r\n          <Col>\r\n            <Spin spinning={spinningImage}>\r\n              <Avatar\r\n                size={{ xs: 150, sm: 150, md: 150, lg: 150, xl: 150, xxl: 250 }}\r\n                src={image}\r\n              />\r\n            </Spin>\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"center\" gutter={[16, 16]}>\r\n          <Col>\r\n            <Upload\r\n              listType=\"picture\"\r\n              customRequest={customRequest}\r\n              showUploadList={false}\r\n            >\r\n              <Button>อัพโหลดรูปภาพโปรไฟล์</Button>\r\n            </Upload>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Col\r\n            xs={{ span: 22, offset: 1 }}\r\n            sm={{ span: 22, offset: 1 }}\r\n            md={{ span: 18, offset: 2 }}\r\n            lg={{ span: 18, offset: 2 }}\r\n            xl={{ span: 18, offset: 2 }}\r\n          >\r\n            <Form form={formValue} onFinish={submitUpdate}>\r\n              <Form.Item name=\"email\" label=\"อีเมล\" {...layout}>\r\n                <Input disabled={true} />\r\n              </Form.Item>\r\n              <Form.Item name=\"firstname\" label=\"ชื่อ\" {...layout}>\r\n                <Input disabled={showInputPass} />\r\n              </Form.Item>\r\n              <Form.Item name=\"lastname\" label=\"นามสกุล\" {...layout}>\r\n                <Input disabled={showInputPass} />\r\n              </Form.Item>\r\n              <Form.Item className=\"profile-right\">\r\n                {params.state === \"manage\" ? (\r\n                  <Button type=\"link\" onClick={conFirmPassword}>\r\n                    <u>เปลี่ยนรหัสผ่าน</u>\r\n                  </Button>\r\n                ) : (\r\n                  <Button type=\"link\" onClick={ShowInputPassword}>\r\n                    <u>เปลี่ยนรหัสผ่าน</u>\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n              {showInputPass === true ? (\r\n                <>\r\n                  <Form.Item\r\n                    {...layout}\r\n                    name=\"password\"\r\n                    label=\"รหัสผ่านใหม่\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"รหัสผ่านไม่ถูกต้อง !\",\r\n                      },\r\n                    ]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"ยืนยันรหัสผ่านใหม่\"\r\n                    {...layout}\r\n                    dependencies={[\"password\"]}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"รหัสผ่านไม่ถูกต้อง !\",\r\n                      },\r\n                      ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                          if (!value || getFieldValue(\"password\") === value) {\r\n                            return Promise.resolve();\r\n                          }\r\n\r\n                          return Promise.reject(\r\n                            new Error(\"รหัสผ่านไม่ถูกต้อง\")\r\n                          );\r\n                        },\r\n                      }),\r\n                    ]}\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n                </>\r\n              ) : null}\r\n              <Form.Item className=\"profile-right\">\r\n                <Button\r\n                  className=\"profile-button\"\r\n                  type=\"primary\"\r\n                  ghost\r\n                  htmlType=\"submit\"\r\n                >\r\n                  บันทึก\r\n                </Button>\r\n                {params.state === \"manage\" ? (\r\n                  <Link to=\"/manage\">\r\n                    <Button\r\n                      className=\"profile-button\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      ยกเลิก\r\n                    </Button>\r\n                  </Link>\r\n                ) : (\r\n                  <Button\r\n                    className=\"profile-button\"\r\n                    onClick={cancelUpdate}\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    disabled={false}\r\n                  >\r\n                    ยกเลิก\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={modalData.onOk}\r\n        onCancel={offModal}\r\n        modalData={modalData}\r\n      >\r\n        {modalData.type === \"show\" ? (\r\n          <>\r\n            <div style={{ marginLeft: \"80px\" }}>\r\n              อีเมล : {modalData.content.email}\r\n            </div>\r\n            <div style={{ marginLeft: \"80px\" }}>\r\n              รหัสผ่าน {modalData.content.password}\r\n            </div>\r\n            <div\r\n              style={{ marginLeft: \"40px\", marginTop: \"20px\", color: \"red\" }}\r\n            >\r\n              *ระบบจะแสดงข้อมูลเพียงครั้งเดียว*\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p style={{ marginLeft: \"80px\" }}>{modalData.content}</p>\r\n        )}\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\web-touch-news\\src\\pages\\viewNews\\index.js",["105","106"],"import {\r\n  Breadcrumb,\r\n  Button,\r\n  Col,\r\n  Dropdown,\r\n  Image,\r\n  Input,\r\n  Layout,\r\n  Menu,\r\n  Row,\r\n  Select,\r\n  Tag,\r\n  message,\r\n} from \"antd\";\r\nimport { DeleteOutlined, EditOutlined, MoreOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { FroalaView } from \"components/layout/froala/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from \"components/layout/modal\";\r\nimport Timeline from \"components/layout/timeline\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\nimport imgError from \"assets/image/img_error2.png\";\r\n\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst View = (props) => {\r\n  const params = props.match.params;\r\n  const role = localStorage.getItem(\"role\");\r\n  const [dataNews, setDataNews] = useState({});\r\n  const [statusNews, setStatusNews] = useState();\r\n  const [cause, setCause] = useState();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    type: \"\",\r\n    icon: null,\r\n    title: \"\",\r\n    okColor: \"\",\r\n    content: null,\r\n    okText: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [params]);\r\n\r\n  const getData = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/news/info/\" + params.id)\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        const data = response.data.data;\r\n        const hashtag = response.data.data.hashtag;\r\n        const credit = response.data.data.credit;\r\n        if (code === 200) {\r\n          const hashtagMap = hashtag.map((hashtag, key) => {\r\n            hashtag = (\r\n              <Tag key={key} color=\"#87d068\">\r\n                {hashtag}\r\n              </Tag>\r\n            );\r\n            return hashtag;\r\n          });\r\n          const creditMap = credit.map((credit, key) => {\r\n            credit = (\r\n              <Tag key={key} color=\"#108ee9\">\r\n                {credit}\r\n              </Tag>\r\n            );\r\n            return credit;\r\n          });\r\n          setDataNews({ ...data, hashtag: hashtagMap, credit: creditMap });\r\n          setStatusNews(data.status);\r\n          setCause(data.cause);\r\n        } else {\r\n          setDataNews();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSelectStatus = (value) => {\r\n    setStatusNews(value);\r\n  };\r\n\r\n  const changeCause = ({ target: { value } }) => {\r\n    setCause(value);\r\n  };\r\n\r\n  const submitUpdate = (status) => {\r\n    const setData = JSON.stringify({\r\n      status: status,\r\n      cause: cause,\r\n    });\r\n    httpClient\r\n      .put(\r\n        config.REACT_APP_BASEURL + \"/news/update_status/\" + params.id,\r\n        setData\r\n      )\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          message.success(response.data.message);\r\n          setDataNews({ ...dataNews, status: status });\r\n          props.history.push(`/home`);\r\n        } else {\r\n          message.success(response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onDelete = () => {\r\n    setModalData({\r\n      type: \"confirm\",\r\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n      title: \"คุณต้องการลบข่าวนี้ หรือไม่ ! \",\r\n      okColor: \"red\",\r\n      okText: \"ลบ\",\r\n      onOk() {\r\n        offModal();\r\n        httpClient\r\n          .delete(config.REACT_APP_BASEURL + \"/news/\" + params.id)\r\n          .then(function (response) {\r\n            const code = response.data.code;\r\n            if (code === 200) {\r\n              message.success(response.data.message);\r\n              props.history.push(\"/home\");\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error(error.data.message);\r\n          });\r\n      },\r\n      content: dataNews.topic,\r\n    });\r\n    onModal();\r\n  };\r\n  const onModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onErrorImg = (e) => {\r\n    e.target.src = imgError;\r\n  };\r\n\r\n  const menu = () => {\r\n    if (dataNews.status === \"Draft\" || dataNews.status === \"Edit\") {\r\n      return (\r\n        <Menu>\r\n          <Menu.Item>\r\n            <Link to={`/home/edit/${params.id}`}>\r\n              <EditOutlined style={{ color: \"orange\" }}></EditOutlined>\r\n              แก้ไข\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            onClick={() => {\r\n              onDelete();\r\n            }}\r\n          >\r\n            <DeleteOutlined style={{ color: \"red\" }}></DeleteOutlined>\r\n            ลบ\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n    } else {\r\n      return (\r\n        <Menu>\r\n          <Menu.Item disabled>\r\n            <EditOutlined style={{ color: \"#DADADA\" }}></EditOutlined>\r\n            แก้ไข\r\n          </Menu.Item>\r\n          <Menu.Item disabled>\r\n            <DeleteOutlined style={{ color: \"#DADADA\" }}></DeleteOutlined>\r\n            ลบ\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: \"4px 0\" }}>\r\n        <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n        <Breadcrumb.Item>ข่าว</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"view-Content\">\r\n        <Row align=\"middle\">\r\n          <Col flex=\"auto\">\r\n            <div className=\"view-titel-news\">{dataNews.topic}</div>\r\n          </Col>\r\n          {role === \"admin\" ? (\r\n            <Col flex=\"15px\">\r\n              <Dropdown placement=\"bottomRight\" overlay={menu()}>\r\n                <a\r\n                  style={{ color: \"black\" }}\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <MoreOutlined style={{ fontSize: \"20px\" }} />\r\n                </a>\r\n              </Dropdown>\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n        <hr />\r\n        <Row justify=\"center\">\r\n          <Col span={10} justify=\"center\">\r\n            <Image\r\n              style={{ padding: \"20px\" }}\r\n              width={\"100%\"}\r\n              src={dataNews.image}\r\n              onError={onErrorImg}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"center\">\r\n          <Col span={16}>\r\n            <FroalaView model={dataNews.content} />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[0, 10]}>\r\n          <Col flex=\"60px\">แฮชแท็ก</Col>\r\n          <Col>{dataNews.hashtag}</Col>\r\n        </Row>\r\n        <Row gutter={[0, 10]}>\r\n          <Col flex=\"60px\">เครดิต</Col>\r\n          <Col>{dataNews.credit}</Col>\r\n        </Row>\r\n\r\n        <Row gutter={[0, 10]}>\r\n          <Col flex=\"60px\">ผู้ดูแล : </Col>\r\n          <Col>{dataNews.by}</Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col span={12}>\r\n            <h3>ไทม์ไลน์</h3>\r\n            <div style={{ width: \"400px\", marginTop: \"20px\" }}>\r\n              <Timeline idNews={params.id} />\r\n            </div>\r\n          </Col>\r\n          {role === \"superadmin\" ? (\r\n            <Col span={12}>\r\n              <h3>เปลี่ยนสถานะข่าว</h3>\r\n              <Row style={{ marginTop: \"20px\" }}>\r\n                <Col span={4}>สถานะ :</Col>\r\n                <Col span={20}>\r\n                  <Input.Group>\r\n                    <Select\r\n                      placeholder={statusNews}\r\n                      onChange={handleSelectStatus}\r\n                      className=\"view-Input-Group\"\r\n                    >\r\n                      <Option value=\"Draft\">Draft</Option>\r\n                      <Option value=\"Approve\">Approve</Option>\r\n                      <Option value=\"Public\">Public</Option>\r\n                    </Select>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={20} offset={4}>\r\n                  {statusNews === \"Draft\" ? (\r\n                    <div className=\"view-Input-TextArea\">\r\n                      <div style={{ color: \"red\" }}>\r\n                        *กรุณากรอกสิ่งที่ต้องแก้ไข\r\n                      </div>\r\n                      <TextArea\r\n                        value={cause}\r\n                        autoSize={{ minRows: 1, maxRows: 5 }}\r\n                        onChange={changeCause}\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n        <Row justify=\"end\" style={{ marginTop: \"20px\" }}>\r\n          {role === \"superadmin\" ? (\r\n            <>\r\n              <Button\r\n                type=\"primary\"\r\n                ghost\r\n                className=\"view-Button\"\r\n                onClick={() => {\r\n                  submitUpdate(statusNews);\r\n                }}\r\n              >\r\n                บันทึก\r\n              </Button>\r\n              <Button className=\"view-Button\" onClick={onDelete} danger>\r\n                ลบ\r\n              </Button>\r\n            </>\r\n          ) : dataNews.status === \"Draft\" ? (\r\n            <Button\r\n              type=\"primary\"\r\n              ghost\r\n              className=\"view-Button\"\r\n              onClick={() => {\r\n                submitUpdate(\"Submit\");\r\n              }}\r\n            >\r\n              ส่ง\r\n            </Button>\r\n          ) : dataNews.status === \"Submit\" ? (\r\n            <Button\r\n              type=\"primary\"\r\n              ghost\r\n              className=\"view-Button\"\r\n              onClick={() => {\r\n                submitUpdate(\"Edit\");\r\n              }}\r\n            >\r\n              ขอแก้ไข\r\n            </Button>\r\n          ) : null}\r\n          <Link to=\"/home\">\r\n            <Button className=\"view-Button\">ย้อนกลับ</Button>\r\n          </Link>\r\n        </Row>\r\n        <Modals\r\n          isModalVisible={isModalVisible}\r\n          onOk={modalData.onOk}\r\n          onCancel={offModal}\r\n          modalData={modalData}\r\n        >\r\n          <p className=\"truncate-text\">{modalData.content}</p>\r\n        </Modals>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","E:\\web-touch-news\\src\\pages\\admin\\createNews\\index.js",["107"],"import {\r\n  AutoComplete,\r\n  Breadcrumb,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Image,\r\n  Input,\r\n  Layout,\r\n  Row,\r\n  Select,\r\n  Spin,\r\n  Tooltip,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Context } from \"../../../context\";\r\nimport FormData from \"form-data\";\r\nimport { Froala } from \"components/layout/froala/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport Tag from \"components/layout/tag/index\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\nimport imgError from \"assets/image/img_error2.png\";\r\n\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\n\r\nconst CreateNews = (props) => {\r\n  const params = props.match.params;\r\n  const context = useContext(Context);\r\n  const [form] = Form.useForm();\r\n  const [category, setCategory] = useState(null);\r\n  const [credit, setCredit] = useState({ inputValue: \"\", tags: [] });\r\n  const [hashtag, setHashtag] = useState({ inputValue: \"\", tags: [] });\r\n  const [hashtagSource, setHashtagSource] = useState(null);\r\n  const [image, setImage] = useState(\"error\");\r\n  const [spinningImage, setSpinningImage] = useState(false);\r\n  const [newsContent, setNewsContent] = useState(\"\");\r\n  const [imageContent, setImageContent] = useState();\r\n  const [cause, setCause] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getCategory();\r\n    getHashtag();\r\n    if (params.type === \"edit\") {\r\n      getData();\r\n    }\r\n  }, [props.location.pathname]);\r\n\r\n  const getData = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/news/info/\" + params.id)\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        const data = response.data.data;\r\n        const hashtag = response.data.data.hashtag;\r\n        const credit = response.data.data.credit;\r\n        if (code === 200) {\r\n          form.setFieldsValue({\r\n            topic: data.topic,\r\n            category: data.category,\r\n          });\r\n          setNewsContent(data.content);\r\n          setImage(data.image);\r\n          setCause(data.cause);\r\n          setCredit({\r\n            tags: credit,\r\n            inputValue: \"\",\r\n          });\r\n          setHashtag({\r\n            tags: hashtag,\r\n            inputValue: \"\",\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCategory = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/category\")\r\n      .then(function (response) {\r\n        const data = response.data.data.data_list;\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          const dataMap = data.map((item) => {\r\n            item = (\r\n              <Option key={item.id} value={item.category}>\r\n                {item.category}\r\n              </Option>\r\n            );\r\n            return item;\r\n          });\r\n          setCategory(dataMap);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getHashtag = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/news/hashtag\")\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          const data = response.data?.data;\r\n          const dataMap = data?.map((item) => {\r\n            item = { value: item };\r\n            return item;\r\n          });\r\n          setHashtagSource(dataMap);\r\n        } else {\r\n          console.log(\"map Error\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const uploadImage = (option) => {\r\n    setSpinningImage(true);\r\n    let setData = new FormData();\r\n    setData.append(\"sampleFile\", option.file);\r\n    setData.append(\"save\", false);\r\n    httpClient\r\n      .post(config.REACT_APP_IMGAE + \"/upload\", setData)\r\n      .then(function (response) {\r\n        console.log(\"response\", response);\r\n        const status = response.status;\r\n        const data = response.data;\r\n        if (status === 200) {\r\n          setImage(data.url);\r\n          setSpinningImage(false);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const submitCreate = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      const setData = JSON.stringify({\r\n        category: values.category,\r\n        topic: values.topic,\r\n        content: newsContent,\r\n        image: image,\r\n        credit: credit.tags,\r\n        hashtag: hashtag.tags,\r\n        status: \"Draft\",\r\n      });\r\n      httpClient\r\n        .post(config.REACT_APP_BASEURL + \"/news\", setData)\r\n        .then(function (response) {\r\n          const code = response.data.code;\r\n          if (code === 201) {\r\n            message.success(response.data.message);\r\n            let setData = new FormData();\r\n            setData.append(\"url\", image);\r\n            httpClient\r\n              .post(config.REACT_APP_IMGAE + \"/savefile\", setData)\r\n              .then(function (response) {\r\n                console.log(response);\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n            if (imageContent !== undefined) {\r\n              imageContent.map((item) => {\r\n                let setData = new FormData();\r\n                setData.append(\"url\", item);\r\n                httpClient\r\n                  .post(config.REACT_APP_IMGAE + \"/savefile\", setData)\r\n                  .then(function (response) {\r\n                    console.log(response);\r\n                  })\r\n                  .catch(function (error) {\r\n                    console.log(error);\r\n                  });\r\n                return item;\r\n              });\r\n            }\r\n            props.history.push(`/home/view/${response.data.data}`);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } catch (errorInfo) {\r\n      console.log(\"Failed:\", errorInfo);\r\n    }\r\n  };\r\n\r\n  const submitEdit = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      const setData = JSON.stringify({\r\n        category: values.category,\r\n        topic: values.topic,\r\n        content: newsContent,\r\n        image: image,\r\n        credit: credit.tags,\r\n        hashtag: hashtag.tags,\r\n        status: \"Draft\",\r\n        by: context.user.firstname + \" \" + context.user.lastname,\r\n      });\r\n      httpClient\r\n        .put(config.REACT_APP_BASEURL + `/news/update/${params.id}`, setData)\r\n        .then(function (response) {\r\n          const code = response.data.code;\r\n          if (code === 200) {\r\n            message.success(response.data.message);\r\n            let setData = new FormData();\r\n            setData.append(\"url\", image);\r\n            httpClient\r\n              .post(config.REACT_APP_IMGAE + \"/savefile\", setData)\r\n              .then(function (response) {\r\n                console.log(response);\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n            if (imageContent !== undefined) {\r\n              imageContent.map((item) => {\r\n                let setData = new FormData();\r\n                setData.append(\"url\", item);\r\n                httpClient\r\n                  .post(config.REACT_APP_IMGAE + \"/savefile\", setData)\r\n                  .then(function (response) {\r\n                    console.log(response);\r\n                  })\r\n                  .catch(function (error) {\r\n                    console.log(error);\r\n                  });\r\n                return item;\r\n              });\r\n            }\r\n            props.history.push(`/home/view/${params.id}`);\r\n            console.log(\"params.id\", params.id);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } catch (errorInfo) {\r\n      console.log(\"Failed:\", errorInfo);\r\n    }\r\n  };\r\n\r\n  const changeNewsContent = (html) => {\r\n    console.log(\"html\", html);\r\n    console.log(\"imageContent\", imageContent);\r\n    setNewsContent(html);\r\n  };\r\n  const creditChange = (e) => {\r\n    setCredit({ ...credit, inputValue: e.target.value });\r\n  };\r\n  const creditClose = (removedTag) => {\r\n    const tags = credit.tags.filter((tag) => tag !== removedTag);\r\n    setCredit({ tags });\r\n  };\r\n  const creditConfirm = (e) => {\r\n    let tags = [...credit.tags];\r\n    tags.push(credit.inputValue);\r\n    setCredit({\r\n      tags,\r\n      inputValue: \"\",\r\n    });\r\n  };\r\n\r\n  const hashtagChange = (inputValue) => {\r\n    setHashtag({ ...hashtag, inputValue: inputValue });\r\n  };\r\n\r\n  const hashtagClose = (removedTag) => {\r\n    const tags = hashtag.tags.filter((tag) => tag !== removedTag);\r\n    setHashtag({\r\n      tags,\r\n      inputValue: \"\",\r\n    });\r\n  };\r\n\r\n  const hashtagConfirm = () => {\r\n    let tags = [...hashtag.tags];\r\n    tags.push(hashtag.inputValue);\r\n    setHashtag({\r\n      tags,\r\n      inputValue: \"\",\r\n    });\r\n  };\r\n\r\n  const onErrorImg = (e) => {\r\n    e.target.src = imgError;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {params.type === \"create\" ? (\r\n        <Breadcrumb style={{ margin: \"4px 0\" }}>\r\n          <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n          <Breadcrumb.Item>เพิ่ม</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      ) : (\r\n        <Breadcrumb style={{ margin: \"4px 0\" }}>\r\n          <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n          <Breadcrumb.Item>แก้ไข</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      )}\r\n      <Content className=\"create-content\">\r\n        <Form form={form} layout=\"vertical\">\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={10}>\r\n              <Row gutter={[0, 0]} justify=\"center\">\r\n                <Col span={14}>\r\n                  <Spin spinning={spinningImage}>\r\n                    <Image width={\"100%\"} src={image} onError={onErrorImg} />\r\n                  </Spin>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={[0, 0]} justify=\"center\">\r\n                <Col>\r\n                  <div style={{ color: \"#A0A0A0\" }}>\r\n                    อัตราส่วนภาพ 1:1 ขนาด 1080x1080 px\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={[0, 16]} justify=\"center\">\r\n                <Col>\r\n                  <Upload\r\n                    listType=\"picture\"\r\n                    customRequest={uploadImage}\r\n                    showUploadList={false}\r\n                  >\r\n                    <Button>อัพโหลดรูปภาพ</Button>\r\n                  </Upload>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={[8, 8]} align=\"middle\" style={{ marginTop: \"20px\" }}>\r\n                <Col style={{ textAlign: \"right\" }} span={5}>\r\n                  <div>เครติด</div>\r\n                </Col>\r\n                <Col span={16}>\r\n                  <Input\r\n                    value={credit.inputValue}\r\n                    onChange={creditChange}\r\n                    onPressEnter={creditConfirm}\r\n                  />\r\n                </Col>\r\n                <Col span={2}>\r\n                  <Tooltip placement=\"bottom\" title=\"เพิ่มเครติด\">\r\n                    <PlusCircleOutlined\r\n                      className=\"create-icon\"\r\n                      onClick={creditConfirm}\r\n                    />\r\n                  </Tooltip>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={[8, 16]} align=\"middle\">\r\n                <Col offset={5}>\r\n                  <Tag data={credit.tags} onClose={creditClose} />\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={[8, 8]} align=\"middle\">\r\n                <Col style={{ textAlign: \"right\" }} span={5}>\r\n                  <div>แฮชแท็ก</div>\r\n                </Col>\r\n                <Col span={16}>\r\n                  <Input.Group>\r\n                    <AutoComplete\r\n                      onPressEnter={hashtagConfirm}\r\n                      style={{ width: \"100%\" }}\r\n                      value={hashtag.inputValue}\r\n                      onChange={hashtagChange}\r\n                      options={hashtagSource}\r\n                      filterOption={(inputValue, option) =>\r\n                        option.value\r\n                          .toUpperCase()\r\n                          .indexOf(inputValue.toUpperCase()) !== -1\r\n                      }\r\n                    />\r\n                  </Input.Group>\r\n                </Col>\r\n                <Col span={2}>\r\n                  <Tooltip placement=\"bottom\" title=\"เพิ่มแฮชแท็ก\">\r\n                    <PlusCircleOutlined\r\n                      onClick={hashtagConfirm}\r\n                      className=\"create-icon\"\r\n                    />\r\n                  </Tooltip>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={[8, 16]} align=\"middle\">\r\n                <Col offset={5}>\r\n                  <Tag data={hashtag.tags} onClose={hashtagClose} />\r\n                </Col>\r\n              </Row>\r\n              {params.type === \"edit\" ? (\r\n                <Row gutter={[8, 8]}>\r\n                  <Col style={{ textAlign: \"right\" }} span={5}>\r\n                    <div>สิ่งที่ควรแก้ไข</div>\r\n                  </Col>\r\n                  <Col span={17}>\r\n                    <div style={{ color: \"red\" }}>คำแนะนำจาก Super Admin</div>\r\n                    <div>{cause}</div>\r\n                  </Col>\r\n                </Row>\r\n              ) : null}\r\n            </Col>\r\n            <Col\r\n              xs={{ span: 18, offset: 3 }}\r\n              sm={{ span: 18, offset: 3 }}\r\n              md={{ span: 18, offset: 3 }}\r\n              lg={{ span: 18, offset: 3 }}\r\n              xl={{ span: 14, offset: 0 }}\r\n            >\r\n              <Form.Item\r\n                label=\"ประเภทข่าว\"\r\n                name=\"category\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your username!\" },\r\n                ]}\r\n              >\r\n                <Select placeholder=\"เลือกประเภท\">{category}</Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"หัวเรื่อง\"\r\n                name=\"topic\"\r\n                rules={[{ required: true, message: \"กรุณาใส่ข้อมูล\" }]}\r\n              >\r\n                <Input></Input>\r\n              </Form.Item>\r\n              <Form.Item label=\"เนื้อหาข่าว\">\r\n                <Froala\r\n                  onModelChange={changeNewsContent}\r\n                  setImageContent={setImageContent}\r\n                  mode={newsContent}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"end\">\r\n            {params.type === \"create\" ? (\r\n              <Button\r\n                className=\"create-button\"\r\n                type=\"primary\"\r\n                ghost\r\n                onClick={submitCreate}\r\n              >\r\n                บันทึก\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                className=\"create-button\"\r\n                type=\"primary\"\r\n                ghost\r\n                onClick={submitEdit}\r\n              >\r\n                บันทึก\r\n              </Button>\r\n            )}\r\n            <Link to=\"/home\">\r\n              <Button className=\"create-button\">ยกเลิก</Button>\r\n            </Link>\r\n          </Row>\r\n        </Form>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateNews;\r\n","E:\\web-touch-news\\src\\pages\\admin\\home\\index.js",["108"],"import {\r\n  Breadcrumb,\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Layout,\r\n  Row,\r\n  Select,\r\n  Space,\r\n  Tooltip,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  FieldTimeOutlined,\r\n  PlusOutlined,\r\n  SendOutlined,\r\n  UnorderedListOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from \"components/layout/modal\";\r\nimport Tables from \"components/layout/table\";\r\nimport Timeline from \"components/layout/timeline\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\nimport moment from \"moment\";\r\n\r\nconst { Content } = Layout;\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst Home = () => {\r\n  const [dataSource, setDataSource] = useState();\r\n  const [total, setTotal] = useState({ all: 0, sdnt: 0, draft: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    sorter: \"dsc\",\r\n    pageSize: 1,\r\n    total: 1,\r\n  });\r\n  const [category, setCategory] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    type: \"\",\r\n    icon: null,\r\n    title: \"\",\r\n    okColor: \"\",\r\n    content: null,\r\n    okText: \"\",\r\n  });\r\n  const [dataSearch, setDataSearch] = useState({ category: \"\", filter: \"\" });\r\n  const [filters, setFilters] = useState();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getTotalNews();\r\n    getCategory();\r\n  }, [pagination.current, pagination.sorter, dataSearch, filters]);\r\n\r\n  const dateShow = (time) => {\r\n    const date = moment(time * 1000).format(\"DD/MM/YYYY HH:mm:ss \");\r\n    return date;\r\n  };\r\n\r\n  const getData = () => {\r\n    var params = new URLSearchParams();\r\n    params.append(\"page\", pagination.current);\r\n    params.append(\"sorts\", `created_at:${pagination.sorter}`);\r\n    params.append(\"filters\", `topic:like:${dataSearch.filter}`);\r\n    params.append(\"filters\", `category:like:${dataSearch.category}`);\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/news/admin\", { params })\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        const data = response.data.data.data_list;\r\n        setLoading(false);\r\n        if (code === 200) {\r\n          setPagination({\r\n            current: response.data.data.pagination.current_page,\r\n            pageSize: response.data.data.pagination.per_page,\r\n            total: response.data.data.pagination.total,\r\n            sorter: response.data.data.pagination.sorts[0].value,\r\n          });\r\n          const dataMap = data.map((item) => {\r\n            item.key = item.id;\r\n            item.date = dateShow(item.created_at);\r\n            return item;\r\n          });\r\n          setDataSource(dataMap);\r\n        } else {\r\n          setDataSource();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getTotalNews = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/news/countadmin\")\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          setTotal({\r\n            ...total,\r\n            all: pagination.total,\r\n            sdnt: response.data.data[0],\r\n            draft: response.data.data[1],\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCategory = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/category\")\r\n      .then(function (response) {\r\n        const data = response.data.data.data_list;\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          const dataMap = data.map((item) => {\r\n            item = (\r\n              <Option key={item.id} value={item.category}>\r\n                {item.category}\r\n              </Option>\r\n            );\r\n            return item;\r\n          });\r\n          setCategory(dataMap);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setDataSearch({ ...dataSearch, filter: value });\r\n    setLoading(true);\r\n  };\r\n\r\n  const onCategory = (value) => {\r\n    setDataSearch({ ...dataSearch, category: value });\r\n    setLoading(true);\r\n  };\r\n\r\n  const onTimeline = (record) => {\r\n    setModalData({\r\n      type: \"show\",\r\n      icon: <FieldTimeOutlined className=\"admin-icon-time\" />,\r\n      title: \"ไทม์ไลน์\",\r\n      okColor: \"#216258\",\r\n      okText: \"ตกลง\",\r\n      onOk() {\r\n        offModal();\r\n      },\r\n      content: <Timeline idNews={record.key} />,\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const onDelete = (record) => {\r\n    setModalData({\r\n      type: \"confirm\",\r\n      icon: <DeleteOutlined className=\"admin-icon-delete\" />,\r\n      title: \"คุณต้องการลบข่าวนี้ หรือไม่ ! \",\r\n      okColor: \"red\",\r\n      okText: \"ลบ\",\r\n      onOk() {\r\n        offModal();\r\n        httpClient\r\n          .delete(config.REACT_APP_BASEURL + \"/news/\" + record.key)\r\n          .then(function (response) {\r\n            const code = response.data.code;\r\n            if (code === 200) {\r\n              message.success(response.data.message);\r\n              setFilters(record.key);\r\n            } else {\r\n              message.success(response.data.message);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error(\"เชื่อมต่อ Server ล้มเหลว\");\r\n          });\r\n      },\r\n      content: record.topic,\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"วันที่\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n      width: \"120px\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"หัวข้อ\",\r\n      dataIndex: \"topic\",\r\n      key: \"topic\",\r\n      width: \"500px\",\r\n      ellipsis: true,\r\n      render: (record) => (\r\n        <Link to={`/home/view/${record.key}`} style={{ color: \"#000\" }}>\r\n          {record.topic}\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      title: \"ประเภท\",\r\n      dataIndex: \"category\",\r\n      key: \"category\",\r\n      width: \"150px\",\r\n    },\r\n    {\r\n      title: \"สถานะ\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: \"100px\",\r\n      render: (status) => (\r\n        <div\r\n          style={{\r\n            color:\r\n              status === \"Submit\"\r\n                ? \"blue\"\r\n                : status === \"Draft\"\r\n                ? \"grey\"\r\n                : status === \"Approve\"\r\n                ? \"#73d13d\"\r\n                : status === \"Public\"\r\n                ? \"red\"\r\n                : status === \"Edit\"\r\n                ? \"orange\"\r\n                : \"black\",\r\n          }}\r\n        >\r\n          {status}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"\",\r\n      fixed: \"right\",\r\n      width: \"140px\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <Space>\r\n          <Tooltip placement=\"bottom\" title=\"ไทม์ไลน์\">\r\n            <Button\r\n              icon={<FieldTimeOutlined className=\"admin-icon-time\" />}\r\n              size={\"middle\"}\r\n              onClick={() => {\r\n                onTimeline(record);\r\n              }}\r\n            />\r\n          </Tooltip>\r\n          {record.status === \"Draft\" || record.status === \"Edit\" ? (\r\n            <>\r\n              <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n                <Link to={`/home/edit/${record.key}`}>\r\n                  <Button\r\n                    icon={<EditOutlined className=\"admin-icon-edit\" />}\r\n                    size={\"middle\"}\r\n                  />\r\n                </Link>\r\n              </Tooltip>\r\n              <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n                <Button\r\n                  icon={<DeleteOutlined className=\"admin-icon-delete\" />}\r\n                  size={\"middle\"}\r\n                  onClick={() => {\r\n                    onDelete(record);\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n                <Button\r\n                  icon={<EditOutlined className=\"admin-icon-disabled\" />}\r\n                  size={\"middle\"}\r\n                  disabled\r\n                />\r\n              </Tooltip>\r\n              <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n                <Button\r\n                  icon={<DeleteOutlined className=\"admin-icon-disabled\" />}\r\n                  size={\"middle\"}\r\n                  disabled\r\n                />\r\n              </Tooltip>\r\n            </>\r\n          )}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: \"4px 0\" }}>\r\n        <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"admin-home-content\">\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\r\n            <div className=\"admin-home-box-left\">\r\n              <Row align=\"middle\" style={{ height: \"100%\" }}>\r\n                <Col span={8} offset={4}>\r\n                  <UnorderedListOutlined className=\"admin-home-icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"admin-home-number\"> {pagination.total} </p>\r\n                  <p className=\"admin-home-text\">ข่าวทั้งหมด</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\r\n            <div className=\"admin-home-box-center\">\r\n              <Row align=\"middle\" style={{ height: \"100%\" }}>\r\n                <Col span={8} offset={4}>\r\n                  <SendOutlined className=\"admin-home-icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"admin-home-number\"> {total.sdnt} </p>\r\n                  <p className=\"admin-home-text\">ข่าวส่งแล้ว</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\r\n            <div className=\"admin-home-box-right\">\r\n              <Row align=\"middle\" style={{ height: \"100%\" }}>\r\n                <Col span={8} offset={4}>\r\n                  <EditOutlined className=\"admin-home-icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"admin-home-number\"> {total.draft} </p>\r\n                  <p className=\"admin-home-text\">ข่าวร่าง</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={8} style={{ marginTop: \"20px\" }}>\r\n          <Col flex=\"auto\" xs={24} sm={12} md={12} lg={16} xl={16}>\r\n            <div className=\"admin-home-text-list\">รายการ</div>\r\n          </Col>\r\n          <Col flex=\"220px\">\r\n            <Input.Group>\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={onCategory}\r\n              >\r\n                <Option value=\"\">ทั้งหมด</Option>\r\n                {category}\r\n              </Select>\r\n            </Input.Group>\r\n          </Col>\r\n          <Col flex=\"220px\">\r\n            <Search placeholder=\"ค้นหา\" onSearch={onSearch}></Search>\r\n          </Col>\r\n          <Col flex=\"100px\">\r\n            <Link to=\"/home/create\">\r\n              <Button\r\n                style={{ width: \"100%\" }}\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n              >\r\n                เพิ่มข่าว\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Tables\r\n          loading={loading}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          setPagination={setPagination}\r\n          pagination={pagination}\r\n        />\r\n        <Modals\r\n          isModalVisible={isModalVisible}\r\n          onOk={modalData.onOk}\r\n          onCancel={offModal}\r\n          modalData={modalData}\r\n        >\r\n          {modalData.type === \"show\" ? (\r\n            <div style={{ marginTop: \"5px\", marginLeft: \"20px\" }}>\r\n              {modalData.content}\r\n            </div>\r\n          ) : (\r\n            <p className=\"truncate-text\">{modalData.content}</p>\r\n          )}\r\n        </Modals>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\web-touch-news\\src\\pages\\super\\manage\\index.js",["109"],"import {\r\n  Breadcrumb,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Layout,\r\n  Row,\r\n  Space,\r\n  Switch,\r\n  Tooltip,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  ExclamationCircleOutlined,\r\n  PlusOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from \"components/layout/modal\";\r\nimport Tables from \"components/layout/table\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst Manage = () => {\r\n  const [formValue] = Form.useForm();\r\n  const [dataSource, setDataSource] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataFilter, setDataFilter] = useState(\"\");\r\n  const [dataSearch, setDataSearch] = useState(\"\");\r\n  const [current, setCurrent] = useState(1);\r\n  const [pagination, setPagination] = useState({\r\n    pageCurrent: 1,\r\n    perPage: 15,\r\n    totalPage: 1,\r\n  });\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    type: \"\",\r\n    icon: null,\r\n    title: \"\",\r\n    okColor: \"\",\r\n    content: \"\",\r\n    okText: \"\",\r\n    onOk: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [dataFilter, current, isModalVisible, dataSearch]);\r\n\r\n  const getData = () => {\r\n    const params = {\r\n      page: current,\r\n      filters: `firstname:like:${dataSearch}`,\r\n    };\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/admin\", { params })\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        const data = response.data.data.data_list;\r\n        setPagination({\r\n          currentPage: response.data.data.pagination.current_page,\r\n          perPage: response.data.data.pagination.per_page,\r\n          totalPage: response.data.data.pagination.total,\r\n        });\r\n        if (code === 200) {\r\n          const dataMap = data.map((item) => {\r\n            item.key = item.id;\r\n            item.name = item.firstname + \" \" + item.lastname;\r\n            const status = item.status;\r\n            item.status = status === \"active\" ? true : false;\r\n            return item;\r\n          });\r\n          setDataSource(dataMap);\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(false);\r\n          setDataSource(data);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onInsert = (value) => {\r\n    const setData = JSON.stringify({\r\n      email: value.email,\r\n    });\r\n    httpClient\r\n      .post(config.REACT_APP_BASEURL + \"/admin\", setData)\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 201) {\r\n          setModalData({\r\n            type: \"show\",\r\n            icon: <UserOutlined className=\"manage-icon-insert\" />,\r\n            title: \"เพิ่มผู้ดูแลระบบใหม่\",\r\n            okColor: \"#216258\",\r\n            okText: \"ตกลง\",\r\n            onOk() {\r\n              setIsModalVisible(false);\r\n            },\r\n            content: {\r\n              email: response.data.data.email,\r\n              password: response.data.data.password,\r\n            },\r\n          });\r\n          onModal();\r\n          setDataFilter(response.data.data.email);\r\n          formValue.setFieldsValue({\r\n            email: \"\",\r\n          });\r\n        } else if (code === 200) {\r\n          message.error(response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onDelete = (record) => {\r\n    setModalData({\r\n      type: \"confirm\",\r\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n      title: \"คุณต้องการลบผู้ดูแลระบบนี้ หรือไม่ ! \",\r\n      okColor: \"red\",\r\n      okText: \"ลบ\",\r\n      content: record.email,\r\n      onOk() {\r\n        setIsModalVisible(false);\r\n        httpClient\r\n          .delete(config.REACT_APP_BASEURL + \"/admin/\" + record.key)\r\n          .then(function (response) {\r\n            const code = response.data.code;\r\n            if (code === 200) {\r\n              message.success(\"ลบผู้ดูแลระบบสำเร็จ\");\r\n              setDataFilter(record.key);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error(\"ลบไม่สำเร็จ\");\r\n          });\r\n      },\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const onSuspend = (checked, record) => {\r\n    if (checked === false) {\r\n      setModalData({\r\n        type: \"confirm\",\r\n        icon: <ExclamationCircleOutlined className=\"manage-icon-suspend\" />,\r\n        title: \"คุณต้องการระงับผู้ดูแลระบบนี้ หรือไม่ ! \",\r\n        okColor: \"orange\",\r\n        content: record.email,\r\n        okText: \"ระงับ\",\r\n        onOk() {\r\n          const setData = JSON.stringify({\r\n            status: \"inactive\",\r\n          });\r\n          httpClient\r\n            .put(\r\n              config.REACT_APP_BASEURL + \"/admin/suspend/\" + record.key,\r\n              setData\r\n            )\r\n            .then(function (response) {\r\n              const code = response.data.code;\r\n              if (code === 200) {\r\n                message.success(\"ระงับผู้ดูแลระบบสำเร็จ\");\r\n                setDataFilter(record.key);\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n              message.error(\"ระงับผู้ดูแลระบบไม่สำเร็จ\");\r\n            });\r\n          offModal();\r\n        },\r\n      });\r\n      onModal();\r\n    } else {\r\n      const setData = JSON.stringify({\r\n        status: \"active\",\r\n      });\r\n      httpClient\r\n        .put(config.REACT_APP_BASEURL + \"/admin/suspend/\" + record.key, setData)\r\n        .then(function (response) {\r\n          const code = response.data.code;\r\n          if (code === 200) {\r\n            message.success(\"อนุญาติผู้ดูแลระบบสำเร็จ\");\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          message.error(\"อนุญาติผู้ดูแลระบบไม่สำเร็จ\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setDataSearch(value);\r\n    setLoading(true);\r\n  };\r\n\r\n  const currentPage = (value) => {\r\n    setCurrent(value);\r\n  };\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"อีเมล\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n    },\r\n    {\r\n      title: \"ชื่อ - นามสกุล\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      responsive: [\"md\"],\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"15%\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <Space>\r\n          <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n            <Link to={`/manage/profile/${record.key}`}>\r\n              <Button\r\n                icon={<EditOutlined className=\"manage-icon-edit\" />}\r\n                size={\"middle\"}\r\n              />\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n            <Button\r\n              icon={<DeleteOutlined className=\"manage-icon-delete\" />}\r\n              size={\"middle\"}\r\n              onClick={() => {\r\n                onDelete(record);\r\n              }}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ระงับ\">\r\n            <Switch\r\n              size=\"small\"\r\n              defaultChecked={record.status}\r\n              onClick={(e) => {\r\n                onSuspend(e, record);\r\n              }}\r\n            />\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: \"4px 0\" }}>\r\n        <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"manage-content\">\r\n        <Row>\r\n          <Col\r\n            xs={24}\r\n            sm={24}\r\n            md={14}\r\n            lg={14}\r\n            xl={16}\r\n            style={{ marginBottom: \"5px\" }}\r\n          >\r\n            <Form\r\n              form={formValue}\r\n              name=\"email\"\r\n              layout=\"inline\"\r\n              onFinish={onInsert}\r\n            >\r\n              <Form.Item>\r\n                <div className=\"manage-Text\">ผู้ดูแลระบบ</div>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: false,\r\n                    pattern: /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i,\r\n                    message: \"Enter a valid email address!\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter your E-mail!\",\r\n                  },\r\n                ]}\r\n                className=\"manage-Input\"\r\n              >\r\n                <Input placeholder=\"กรอกอีเมล\" />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  className=\"manage-button\"\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  เพิ่ม\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            md={10}\r\n            lg={10}\r\n            xl={8}\r\n            style={{ textAlign: \"right\", paddingLeft: \"80px\" }}\r\n          >\r\n            <Search\r\n              placeholder=\"ค้นหา\"\r\n              className=\"manage-search\"\r\n              onSearch={onSearch}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Tables\r\n          loading={loading}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          setCurrentPage={currentPage}\r\n          pageCurrent={pagination.pageCurrent}\r\n          perPage={pagination.perPage}\r\n          totalPage={pagination.totalPage}\r\n        />\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={modalData.onOk}\r\n        onCancel={offModal}\r\n        modalData={modalData}\r\n      >\r\n        {modalData.type === \"show\" ? (\r\n          <>\r\n            <div style={{ marginLeft: \"80px\" }}>\r\n              อีเมล : {modalData.content.email}\r\n            </div>\r\n            <div style={{ marginLeft: \"80px\" }}>\r\n              รหัสผ่าน {modalData.content.password}\r\n            </div>\r\n            <div\r\n              style={{ marginLeft: \"40px\", marginTop: \"20px\", color: \"red\" }}\r\n            >\r\n              *ระบบจะแสดงข้อมูลเพียงครั้งเดียว*\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p style={{ marginLeft: \"80px\" }}>{modalData.content}</p>\r\n        )}\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Manage;\r\n","E:\\web-touch-news\\src\\pages\\super\\home\\index.js",["110","111"],"import {\r\n  Breadcrumb,\r\n  Col,\r\n  Dropdown,\r\n  Input,\r\n  Layout,\r\n  Menu,\r\n  Row,\r\n  Select,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EyeOutlined,\r\n  FieldTimeOutlined,\r\n  MoreOutlined,\r\n  SendOutlined,\r\n  TeamOutlined,\r\n  UnorderedListOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from \"components/layout/modal\";\r\nimport Tables from \"components/layout/table\";\r\nimport Timeline from \"components/layout/timeline\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\nimport moment from \"moment\";\r\n\r\nconst { Content } = Layout;\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst Home = (props) => {\r\n  const [dataSource, setDataSource] = useState();\r\n  const [category, setCategory] = useState(null);\r\n  const [totalNews, setTotalNews] = useState({ all: 0, toDate: 0 });\r\n  const [totalAdmin, setTotalAdmin] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    sorter: \"dsc\",\r\n    pageSize: 1,\r\n    total: 1,\r\n  });\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    type: \"\",\r\n    icon: null,\r\n    title: \"\",\r\n    okColor: \"\",\r\n    content: null,\r\n    okText: \"\",\r\n  });\r\n  const [dataSearch, setDataSearch] = useState({ category: \"\", filter: \"\" });\r\n  const [filters, setFilters] = useState();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getData();\r\n      getCategory();\r\n      getTotalAdmin();\r\n      getTotalNews();\r\n    }, 1000);\r\n  }, [pagination.current, pagination.sorter, dataSearch, filters]);\r\n\r\n  const dateShow = (time) => {\r\n    const date = moment(time * 1000).format(\"DD/MM/YYYY HH:mm:ss \");\r\n    return date;\r\n  };\r\n\r\n  const getData = () => {\r\n    setLoading(true);\r\n    var params = new URLSearchParams();\r\n    params.append(\"page\", pagination.current);\r\n    params.append(\"sorts\", `created_at:${pagination.sorter}`);\r\n    params.append(\"filters\", `topic:like:${dataSearch.filter}`);\r\n    params.append(\"filters\", `category:like:${dataSearch.category}`);\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/news/super\", { params })\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        const data = response.data.data.data_list;\r\n        setLoading(false);\r\n        if (code === 200) {\r\n          setPagination({\r\n            current: response.data.data.pagination.current_page,\r\n            pageSize: response.data.data.pagination.per_page,\r\n            total: response.data.data.pagination.total,\r\n            sorter: response.data.data.pagination.sorts[0].value,\r\n          });\r\n          const dataMap = data.map((item) => {\r\n            item.key = item.id;\r\n            item.created_at = dateShow(item.created_at);\r\n            return item;\r\n          });\r\n          setDataSource(dataMap);\r\n        } else {\r\n          setDataSource();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getTotalNews = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/news/countsuper\")\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          setTotalNews({\r\n            all: response.data.data[0],\r\n            toDate: response.data.data[1],\r\n          });\r\n        } else {\r\n          setTotalNews({\r\n            all: 0,\r\n            toDate: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getTotalAdmin = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/admin/count\")\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          setTotalAdmin(response.data.data[0]);\r\n        } else {\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCategory = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/category\")\r\n      .then(function (response) {\r\n        const data = response.data.data.data_list;\r\n        const code = response.data.code;\r\n        if (code === 200) {\r\n          const dataMap = data.map((item) => {\r\n            item = (\r\n              <Option key={item.id} value={item.category}>\r\n                {item.category}\r\n              </Option>\r\n            );\r\n            return item;\r\n          });\r\n          setCategory(dataMap);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onCategory = (value) => {\r\n    setDataSearch({ ...dataSearch, category: value });\r\n  };\r\n  const onSearch = (value) => {\r\n    setDataSearch({ ...dataSearch, filter: value });\r\n  };\r\n\r\n  const onDelete = (record) => {\r\n    setModalData({\r\n      type: \"confirm\",\r\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n      title: \"คุณต้องการลบข่าวนี้ หรือไม่ ! \",\r\n      okColor: \"red\",\r\n      okText: \"ลบ\",\r\n      onOk() {\r\n        offModal();\r\n        httpClient\r\n          .delete(config.REACT_APP_BASEURL + \"/news/\" + record.key)\r\n          .then(function (response) {\r\n            const code = response.data.code;\r\n            if (code === 200) {\r\n              message.success(response.data.message);\r\n              setFilters(record.key);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error(error.data.message);\r\n          });\r\n      },\r\n      content: record.topic,\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const onTimeline = (record) => {\r\n    setModalData({\r\n      type: \"show\",\r\n      icon: <FieldTimeOutlined className=\"manage-icon-insert\" />,\r\n      title: \"ไทม์ไลน์\",\r\n      okColor: \"#216258\",\r\n      okText: \"ตกลง\",\r\n      onOk() {\r\n        setIsModalVisible(false);\r\n      },\r\n      content: <Timeline idNews={record.key} />,\r\n    });\r\n    onModal();\r\n  };\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const offModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const menu = (record) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          key=\"0\"\r\n          onClick={() => {\r\n            props.history.push(`/home/view/${record.key}`);\r\n          }}\r\n        >\r\n          <EyeOutlined style={{ color: \"#73d13d\" }} />\r\n          ดูข่าว\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"1\"\r\n          onClick={() => {\r\n            onTimeline(record);\r\n          }}\r\n        >\r\n          <FieldTimeOutlined style={{ color: \"#1890ff\" }} />\r\n          ไทม์ไลน์\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          onClick={() => {\r\n            onDelete(record);\r\n          }}\r\n        >\r\n          <DeleteOutlined style={{ color: \"red\" }} />\r\n          ลบ\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"วันที่\",\r\n      dataIndex: \"created_at\",\r\n      key: \"created_at\",\r\n      width: \"120px\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"หัวข้อ\",\r\n      key: \"topic\",\r\n      width: \"400px\",\r\n      ellipsis: true,\r\n      render: (record) => (\r\n        <Link to={`/home/view/${record.key}`} style={{ color: \"#000\" }}>\r\n          {record.topic}\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      title: \"ผู้ดูแลระบบ\",\r\n      dataIndex: \"by\",\r\n      key: \"by\",\r\n      width: \"200px\",\r\n    },\r\n    {\r\n      title: \"ประเภท\",\r\n      dataIndex: \"category\",\r\n      key: \"category\",\r\n      width: \"200px\",\r\n    },\r\n    {\r\n      title: \"สถานะ\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: \"100px\",\r\n      render: (status) => (\r\n        <div\r\n          style={{\r\n            color:\r\n              status === \"Submit\"\r\n                ? \"blue\"\r\n                : status === \"Approve\"\r\n                ? \"#73d13d\"\r\n                : status === \"Public\"\r\n                ? \"red\"\r\n                : status === \"Edit\"\r\n                ? \"orange\"\r\n                : \"black\",\r\n          }}\r\n        >\r\n          {status}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"50px\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      render: (record) => (\r\n        <Dropdown placement=\"bottomCenter\" overlay={menu(record)}>\r\n          <a style={{ color: \"black\" }} onClick={(e) => e.preventDefault()}>\r\n            <MoreOutlined />\r\n          </a>\r\n        </Dropdown>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: \"4px 0\" }}>\r\n        <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"home-Content\">\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\r\n            <div className=\"home-Box-Left\">\r\n              <Row align=\"middle\" style={{ height: \"100%\" }}>\r\n                <Col span={8} offset={4}>\r\n                  <UnorderedListOutlined className=\"home-Icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"home-Number\">{totalNews.all}</p>\r\n                  <p className=\"home-Text\">ข่าวทั้งหมด</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\r\n            <div className=\"home-Box-Center\">\r\n              <Row align=\"middle\" style={{ height: \"100%\" }}>\r\n                <Col span={8} offset={4}>\r\n                  <TeamOutlined className=\"home-Icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"home-Number\">{totalAdmin}</p>\r\n                  <p className=\"home-Text\">ผู้ดูแลระบบ</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\r\n            <div className=\"home-Box-Right\">\r\n              <Row align=\"middle\" style={{ height: \"100%\" }}>\r\n                <Col span={8} offset={4}>\r\n                  <SendOutlined className=\"home-Icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"home-Number\">{totalNews.toDate}</p>\r\n                  <p className=\"home-Text\">ข่าววันนี้</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Col xs={24} sm={24} md={12} lg={12} xl={16}>\r\n            <div className=\"home-Text-List\">รายการ</div>\r\n          </Col>\r\n          <Col xs={12} sm={10} md={6} lg={6} xl={4}>\r\n            <Input.Group className=\"home-Input-Group\">\r\n              <Select\r\n                defaultValue=\"\"\r\n                className=\"home-Select\"\r\n                onChange={onCategory}\r\n              >\r\n                <Option value=\"\">ทั้งหมด</Option>\r\n                {category}\r\n              </Select>\r\n            </Input.Group>\r\n          </Col>\r\n          <Col xs={12} sm={10} md={6} lg={6} xl={4}>\r\n            <Search placeholder=\"ค้นหา\" onSearch={onSearch}></Search>\r\n          </Col>\r\n        </Row>\r\n        <Tables\r\n          loading={loading}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          setPagination={setPagination}\r\n          pagination={pagination}\r\n        />\r\n        <Modals\r\n          isModalVisible={isModalVisible}\r\n          onOk={modalData.onOk}\r\n          onCancel={offModal}\r\n          modalData={modalData}\r\n        >\r\n          {modalData.type === \"show\" ? (\r\n            <div style={{ marginTop: \"5px\" }}>{modalData.content}</div>\r\n          ) : (\r\n            <p className=\"truncate-text\">{modalData.content}</p>\r\n          )}\r\n        </Modals>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\web-touch-news\\src\\components\\layout\\tag\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\froala\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\modal\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\table\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\timeline\\index.js",["112"],"import {\r\n  CheckOutlined,\r\n  FileExclamationOutlined,\r\n  FileTextOutlined,\r\n  GlobalOutlined,\r\n  SendOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Timeline } from \"antd\";\r\nimport config from \"config\";\r\nimport { httpClient } from \"HttpClient\";\r\nimport moment from \"moment\";\r\n\r\nconst Timelines = (props) => {\r\n  const [timeLine, setTimeLine] = useState(null);\r\n  useEffect(() => {\r\n    getTimeLine();\r\n  }, [props.idNews]);\r\n\r\n  const color = {\r\n    Submit: \"blue\",\r\n    Approve: \"#73d13d\",\r\n    Public: \"red\",\r\n    Edit: \"orange\",\r\n    Draft: \"grey\",\r\n  };\r\n\r\n  const dateShow = (time) => {\r\n    const date = moment(time * 1000).format(\"DD/MM/YYYY HH:mm:ss \");\r\n    return date;\r\n  };\r\n\r\n  const getTimeLine = () => {\r\n    httpClient\r\n      .get(config.REACT_APP_BASEURL + \"/news/timeline/\" + props.idNews)\r\n      .then(function (response) {\r\n        const code = response.data.code;\r\n        const data = response.data.data.timeline;\r\n        if (code === 200) {\r\n          const dataMap = data.map((item, key) => {\r\n            if (item.Status === \"Draft\") {\r\n              item = (\r\n                <Timeline.Item\r\n                  key={key}\r\n                  dot={<FileTextOutlined style={{ color: \"gray\" }} />}\r\n                  label={\r\n                    <div style={{ color: color[item.Status] }}>\r\n                      {item.Status}\r\n                    </div>\r\n                  }\r\n                >\r\n                  {dateShow(item.Date)}\r\n                </Timeline.Item>\r\n              );\r\n            } else if (item.Status === \"Submit\") {\r\n              item = (\r\n                <Timeline.Item\r\n                  key={key}\r\n                  dot={<SendOutlined style={{ color: \"blue\" }} />}\r\n                  label={\r\n                    <div style={{ color: color[item.Status] }}>\r\n                      {item.Status}\r\n                    </div>\r\n                  }\r\n                >\r\n                  {dateShow(item.Date)}\r\n                </Timeline.Item>\r\n              );\r\n            } else if (item.Status === \"Edit\") {\r\n              item = (\r\n                <Timeline.Item\r\n                  key={key}\r\n                  dot={<FileExclamationOutlined style={{ color: \"orange\" }} />}\r\n                  label={\r\n                    <div style={{ color: color[item.Status] }}>\r\n                      {item.Status}\r\n                    </div>\r\n                  }\r\n                >\r\n                  {dateShow(item.Date)}\r\n                </Timeline.Item>\r\n              );\r\n            } else if (item.Status === \"Approve\") {\r\n              item = (\r\n                <Timeline.Item\r\n                  key={key}\r\n                  dot={<CheckOutlined style={{ color: \"green\" }} />}\r\n                  label={\r\n                    <div style={{ color: color[item.Status] }}>\r\n                      {item.Status}\r\n                    </div>\r\n                  }\r\n                >\r\n                  {dateShow(item.Date)}\r\n                </Timeline.Item>\r\n              );\r\n            } else if (item.Status === \"Public\") {\r\n              item = (\r\n                <Timeline.Item\r\n                  key={key}\r\n                  dot={<GlobalOutlined style={{ color: \"red\" }} />}\r\n                  label={\r\n                    <div style={{ color: color[item.Status] }}>\r\n                      {item.Status}\r\n                    </div>\r\n                  }\r\n                >\r\n                  {dateShow(item.Date)}\r\n                </Timeline.Item>\r\n              );\r\n            } else {\r\n              <p>Status Empty</p>;\r\n            }\r\n            return item;\r\n          });\r\n          setTimeLine(dataMap);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return <Timeline mode=\"left\">{timeLine}</Timeline>;\r\n};\r\n\r\nexport default Timelines;\r\n",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":3,"nodeType":"119","messageId":"120","endLine":3,"endColumn":8},{"ruleId":"117","severity":1,"message":"121","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":36,"column":6,"nodeType":"124","endLine":36,"endColumn":49,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":61,"column":6,"nodeType":"124","endLine":61,"endColumn":23,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"123","line":48,"column":6,"nodeType":"124","endLine":48,"endColumn":14,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":209,"column":17,"nodeType":"131","endLine":212,"endColumn":18},{"ruleId":"122","severity":1,"message":"132","line":52,"column":6,"nodeType":"124","endLine":52,"endColumn":31,"suggestions":"133"},{"ruleId":"122","severity":1,"message":"134","line":62,"column":6,"nodeType":"124","endLine":62,"endColumn":66,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"123","line":57,"column":6,"nodeType":"124","endLine":57,"endColumn":55,"suggestions":"136"},{"ruleId":"122","severity":1,"message":"137","line":66,"column":6,"nodeType":"124","endLine":66,"endColumn":66,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"130","line":322,"column":11,"nodeType":"131","endLine":322,"endColumn":77},{"ruleId":"122","severity":1,"message":"139","line":19,"column":6,"nodeType":"124","endLine":19,"endColumn":20,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'BellOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has missing dependencies: 'getData', 'getDataAdmin', and 'props.location.pathname'. Either include them or remove the dependency array.",["144"],["145"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getData' and 'params.type'. Either include them or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'getData' and 'getTotalNews'. Either include them or remove the dependency array. Mutable values like 'pagination.current' aren't valid dependencies because mutating them doesn't re-render the component.",["147"],["148"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array. Mutable values like 'pagination.current' aren't valid dependencies because mutating them doesn't re-render the component.",["149"],"React Hook useEffect has a missing dependency: 'getTimeLine'. Either include it or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [user.firstname, user.lastname, user.image, getData]",{"range":"167","text":"168"},"Update the dependencies array to be: [params, context, props.location.pathname, getData, getDataAdmin]",{"range":"169","text":"170"},"Update the dependencies array to be: [getData, params]",{"range":"171","text":"172"},"Update the dependencies array to be: [getData, params.type, props.location.pathname]",{"range":"173","text":"174"},"Update the dependencies array to be: [pagination.sorter, dataSearch, filters, getData, getTotalNews]",{"range":"175","text":"176"},"Update the dependencies array to be: [dataFilter, current, isModalVisible, dataSearch, getData]",{"range":"177","text":"178"},"Update the dependencies array to be: [pagination.sorter, dataSearch, filters, getData]",{"range":"179","text":"180"},"Update the dependencies array to be: [getTimeLine, props.idNews]",{"range":"181","text":"182"},[771,814],"[user.firstname, user.lastname, user.image, getData]",[1475,1492],"[params, context, props.location.pathname, getData, getDataAdmin]",[1224,1232],"[getData, params]",[1509,1534],"[getData, params.type, props.location.pathname]",[1525,1585],"[pagination.sorter, dataSearch, filters, getData, getTotalNews]",[1316,1365],"[dataFilter, current, isModalVisible, dataSearch, getData]",[1656,1716],"[pagination.sorter, dataSearch, filters, getData]",[464,478],"[getTimeLine, props.idNews]"]
[{"E:\\web-touch-news\\src\\index.js":"1","E:\\web-touch-news\\src\\App.js":"2","E:\\web-touch-news\\src\\reportWebVitals.js":"3","E:\\web-touch-news\\src\\Root.js":"4","E:\\web-touch-news\\src\\pages\\login\\index.js":"5","E:\\web-touch-news\\src\\components\\layout\\header\\index.js":"6","E:\\web-touch-news\\src\\components\\router\\index.js":"7","E:\\web-touch-news\\src\\components\\layout\\sider\\index.js":"8","E:\\web-touch-news\\src\\config.js":"9","E:\\web-touch-news\\src\\constants\\home\\index.js":"10","E:\\web-touch-news\\src\\constants\\profile\\index.js":"11","E:\\web-touch-news\\src\\constants\\manage\\index.js":"12","E:\\web-touch-news\\src\\constants\\viewNews\\index.js":"13","E:\\web-touch-news\\src\\components\\layout\\table\\index.js":"14","E:\\web-touch-news\\src\\components\\layout\\modal\\index.js":"15"},{"size":497,"mtime":1610089899202,"results":"16","hashOfConfig":"17"},{"size":635,"mtime":1610089899193,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1610073374053,"results":"19","hashOfConfig":"17"},{"size":697,"mtime":1610089899193,"results":"20","hashOfConfig":"17"},{"size":4678,"mtime":1610089899203,"results":"21","hashOfConfig":"17"},{"size":2230,"mtime":1610086198474,"results":"22","hashOfConfig":"17"},{"size":861,"mtime":1610090735600,"results":"23","hashOfConfig":"17"},{"size":1108,"mtime":1610086198477,"results":"24","hashOfConfig":"17"},{"size":135,"mtime":1610089899195,"results":"25","hashOfConfig":"17"},{"size":5771,"mtime":1610361342416,"results":"26","hashOfConfig":"17"},{"size":5140,"mtime":1610089899199,"results":"27","hashOfConfig":"17"},{"size":5967,"mtime":1610089899198,"results":"28","hashOfConfig":"17"},{"size":3483,"mtime":1610096340811,"results":"29","hashOfConfig":"17"},{"size":239,"mtime":1610086198479,"results":"30","hashOfConfig":"17"},{"size":1206,"mtime":1610086198476,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1hmo6ys",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\web-touch-news\\src\\index.js",[],["66","67"],"E:\\web-touch-news\\src\\App.js",[],"E:\\web-touch-news\\src\\reportWebVitals.js",[],"E:\\web-touch-news\\src\\Root.js",[],"E:\\web-touch-news\\src\\pages\\login\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\header\\index.js",[],"E:\\web-touch-news\\src\\components\\router\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\sider\\index.js",[],"E:\\web-touch-news\\src\\config.js",[],"E:\\web-touch-news\\src\\constants\\home\\index.js",[],"E:\\web-touch-news\\src\\constants\\profile\\index.js",["68","69","70"],"import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Breadcrumb, Form, Row, Col, Avatar, Button, Input, Upload } from 'antd'\r\nimport { KeyOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nimport Modals from 'components/layout/modal/index'\r\n\r\nconst { Content } = Layout\r\nconst layout = {\r\n  labelCol: {\r\n    span: 5,\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  },\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [Showpass, setShowpass] = useState(false)\r\n  const [modalData, setmodalData] = useState({ type: '', icon: null, title: '', cancelButton: '', okButton: null, email: '', okText: '' });\r\n\r\n  const onPasswdr = () => {\r\n    console.log('pass')\r\n    setShowpass(true)\r\n  }\r\n\r\n  const onNewPassword = () => {\r\n    setmodalData({\r\n      type: 'confirm',\r\n      icon: <ExclamationCircleOutlined className=\"manage-Icon-edit\" />,\r\n      title: 'ยืนยันการสร้างรหัสผ่านใหม่',\r\n      cancelButton: '',\r\n      okButton: { backgroundColor: 'white', color: 'orange', borderColor: 'orange' },\r\n      okText: 'ตกลง',\r\n      email: 'คุณต้องการยืนยันการสร้างรหัสใหม่นี้หรือไม่ !!! ',\r\n    })\r\n    showModal()\r\n  }\r\n\r\n  const newPassword = () => {\r\n    setmodalData({\r\n      type: 'show',\r\n      icon: <KeyOutlined className=\"manage-Icon-edit\" />,\r\n      cancelButton: 'none',\r\n      okButton: { backgroundColor: 'white', color: '#216258', borderColor: '#216258' },\r\n      title: 'เพิ่มผู้ดูแลระบบใหม่',\r\n      okText: 'ตกลง',\r\n      email: 'asdfghjkl;'\r\n    })\r\n    showModal()\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true)\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: '4px 0' }}>\r\n        {props.type === 'manage' ?\r\n          <>\r\n            <Breadcrumb.Item>{props.title}</Breadcrumb.Item>\r\n            <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\r\n          </>\r\n          :\r\n            <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\r\n        }\r\n      </Breadcrumb>\r\n      <Content className=\"content-layout-background\">\r\n        <Row style={{ marginTop: '20px' }}>\r\n          <Col span={12} offset={6}>\r\n            <Form>\r\n              <Form.Item className=\"profile-Center\">\r\n                <Avatar size={250} />\r\n              </Form.Item>\r\n              <Form.Item className=\"profile-Center\">\r\n                <Upload>\r\n                  <Button>อัพโหลดรูปภาพโปรไฟล์</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n              <Form.Item label='อีเมล' {...layout}>\r\n                <Input></Input>\r\n              </Form.Item>\r\n              <Form.Item label='ชื่อ' {...layout}>\r\n                <Input></Input>\r\n              </Form.Item>\r\n              <Form.Item label='นามสกุล' {...layout}>\r\n                <Input></Input>\r\n              </Form.Item>\r\n              <Form.Item className=\"profile-Right\">\r\n                {props.type === 'manage' ?\r\n                  <>\r\n                    <a onClick={onNewPassword}><u>เปลี่ยนรหัสผ่าน</u></a>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <a onClick={onPasswdr}><u>เปลี่ยนรหัสผ่าน</u></a>\r\n                  </>\r\n                }\r\n              </Form.Item>\r\n              {Showpass === true ?\r\n                <>\r\n                  <Form.Item label='รหัสผ่านใหม่' {...layout}>\r\n                    <Input></Input>\r\n                  </Form.Item>\r\n                  <Form.Item label='ยืนยันรหัสผ่านใหม่' {...layout}>\r\n                    <Input></Input>\r\n                  </Form.Item>\r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n              }\r\n              <Form.Item className=\"profile-Right\">\r\n                {props.type === 'manage' ?\r\n                  <>\r\n                    <Button type=\"primary\" ghost>บันทึก</Button>\r\n                    <Link to=\"/manage\">\r\n                      <Button style={{ marginLeft: '10px' }}>ยกเลิก</Button>\r\n                    </Link>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <Button type=\"primary\" ghost>บันทึก</Button>\r\n                    <Button style={{ marginLeft: '10px' }}>ยกเลิก</Button>\r\n                  </>\r\n                }\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        modalData={modalData}\r\n      ></Modals>\r\n    </>\r\n  );\r\n}\r\nexport default Profile","E:\\web-touch-news\\src\\constants\\manage\\index.js",["71","72","73"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport Modals from 'components/layout/modal/index'\r\nimport Tables from 'components/layout/table/index'\r\nimport { Row, Col, Form, Input, Button, Space, Switch, Tooltip } from 'antd';\r\nimport { PlusOutlined, EditOutlined, UserOutlined, ExclamationCircleOutlined, DeleteOutlined, } from '@ant-design/icons';\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst data = [{\r\n  key: 1,\r\n  email: '1-@gmail.com',\r\n  name: 'Admin 1',\r\n  status: true\r\n},\r\n{\r\n  key: 2,\r\n  email: '2-@gmail.com',\r\n  name: 'Admin 2',\r\n  status: false\r\n},\r\n{\r\n  key: 3,\r\n  email: '3-@gmail.com',\r\n  name: 'Admin 3',\r\n  status: false\r\n},\r\n{\r\n  key: 4,\r\n  email: '4-@gmail.com',\r\n  name: 'Admin 4',\r\n  status: true\r\n},];\r\n\r\n\r\n\r\nconst Manage = () => {\r\n  const [DataTest, setDataTest] = useState({dataAdmin: data, page: '5'})\r\n  const [dataSource, setDataSource] = useState(DataTest.dataAdmin);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setmodalData] = useState({ type: '', icon: null, title: '', cancelButton: '', okButton: null, email: '', okText: '' });\r\n  \r\n\r\n\r\n  const onInsert = (value) => {\r\n    const datA = DataTest.dataAdmin\r\n    const dataMap = datA.map((item, key) =>{\r\n      item.key = item.key * 10\r\n      item.email = item.email\r\n      item.name = 'Test map'\r\n      // item.status = item.status\r\n      {item.status === true? item.status = false : item.status = true}\r\n      return item\r\n    })\r\n    setDataSource(dataMap)\r\n    console.log('DataSource', dataSource)\r\n    setmodalData({\r\n      type: 'show',\r\n      icon: <UserOutlined className=\"manage-Icon-insert\" />,\r\n      cancelButton: 'none',\r\n      okButton: { backgroundColor: 'white', color: '#216258', borderColor: '#216258' },\r\n      title: 'เพิ่มผู้ดูแลระบบใหม่',\r\n      okText: 'ตกลง',\r\n      email: value.email\r\n    })\r\n    // showModal()\r\n  }\r\n\r\n  const onDelete = (email, e) => {\r\n    setmodalData({\r\n      type: 'confirm',\r\n      icon: <DeleteOutlined className=\"manage-Icon-delete\" />,\r\n      title: 'คุณต้องการลบผู้ดูแลระบบนี้ หรือไม่ ! ',\r\n      cancelButton: '',\r\n      okButton: { backgroundColor: 'white', color: 'red', borderColor: 'red' },\r\n      okText: 'ลบ',\r\n      email: email,\r\n    })\r\n    showModal()\r\n  }\r\n\r\n  const onEdit = (email, e) => {\r\n    console.log('edit', email);\r\n  }\r\n\r\n  const onChangeSwitch = (email, e) => {\r\n    setmodalData({\r\n      type: 'confirm',\r\n      icon: <ExclamationCircleOutlined className=\"manage-Icon-ban\" />,\r\n      title: 'คุณต้องการระงับผู้ดูแลระบบนี้ หรือไม่ ! ',\r\n      cancelButton: '',\r\n      okButton: { backgroundColor: 'white', color: 'orange', borderColor: 'orange' },\r\n      email: email,\r\n      okText: 'ระงับ'\r\n    })\r\n    showModal()\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true)\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    console.log('Search : ' + value)\r\n    const currValue = value;\r\n    const filteredData = data.filter(entry =>\r\n      entry.name.includes(currValue)\r\n    );\r\n    setDataSource(filteredData)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'อีเมล',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'ชื่อ - นามสกุล',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: '',\r\n      width: '15%',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n            <Link to={`/manage/profile/${record.email}`}>\r\n              <EditOutlined className=\"manage-Icon-edit\" onClick={(e) => { onEdit(record.email, e); }} /></Link>\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n            <DeleteOutlined className=\"manage-Icon-delete\" onClick={(e) => { onDelete(record.email, e); }} />\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"แบน\">\r\n            <Switch defaultChecked={record.status} onChange={(e) => { onChangeSwitch(record.email, e); }} />\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: '4px 0' }}>\r\n        <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"manage-Content\">\r\n        <Row>\r\n          <Col span={18}>\r\n            <Form name=\"email\" layout=\"inline\" onFinish={onInsert}>\r\n              <Form.Item>\r\n                <div className=\"manage-Text\">ผู้ดูแลระบบ</div>\r\n              </Form.Item>\r\n              <Form.Item name=\"email\" className=\"manage-Input\">\r\n                <Input placeholder=\"กรอกอีเมล\" />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button className=\"manage-Button\" type=\"primary\" htmlType=\"submit\" icon={<PlusOutlined />}>เพิ่ม</Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Col span={6} style={{ textAlign: 'right' }}>\r\n            <Search placeholder=\"ค้นหา\" className=\"manage-Search\" onSearch={onSearch} />\r\n          </Col>\r\n        </Row>\r\n        {/* <Table columns={columns} dataSource={dataSource} style={{ marginTop: '10px' }} /> */}\r\n        <Tables\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n        />\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        modalData={modalData}\r\n      />\r\n\r\n\r\n    </>\r\n  );\r\n}\r\nexport default Manage","E:\\web-touch-news\\src\\constants\\viewNews\\index.js",["74","75"],"import { Layout, Breadcrumb, Image, Row, Col, Select, Input, Avatar, Button, Upload } from 'antd'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select;\r\n\r\nconst View = (props) => {\r\n    return (\r\n        <>\r\n            <Breadcrumb style={{ margin: '4px 0' }}>\r\n                <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n                <Breadcrumb.Item>ข่าว</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Content className=\"view-Content\">\r\n                <div className=\"view-titel-news\">ตร.ค้นโกดังย่านฉลองกรุง ยังไม่พบผิด เร่งเช็กภาพโต๊ะบาคาร่า ตัดต่อหรือไม่</div>\r\n                <hr />\r\n                <Row justify=\"center\">\r\n                    <Image\r\n                        width={400}\r\n                        src=\"https://www.thairath.co.th/media/dFQROr7oWzulq5Fa4VWesCxyzDRhGiTaaQHKKLE9G1eqrrp8gfV9rJEz93EgR5Xdmao.webp\"\r\n                    />\r\n                </Row>\r\n                <Row justify=\"center\">\r\n                    <Col span={10}>\r\n                        <p >รองต๊ะ พล.ต.ต.ปิยะ ต๊ะวิชัย รอง ผบช.น. เผยภาพรวมการตั้งด่านตรวจคัดกรองโควิด-19 ตามแนวรอยต่อกทม.-ปริมณฑลเรียบร้อยดี ส่วนเรื่องค้นโกดังย่านฉลองกรุง เจอไพ่และโพยพนัน ยังไม่สามารถพิสูจน์ได้ว่าเป็นอุปกรณ์ที่ใช้ในการกระทำผิดตาม พ.ร.บ.การพนัน ทำให้ไม่มีมูลพอจะดำเนินคดีฐานพยายามทำลายหลักฐาน</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>แฮกแทร็ก</Row>\r\n                <Row>เครดิต</Row>\r\n                <Row>ดูแล</Row>\r\n                <hr />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <div>ไทม์ไลน์</div>\r\n                        <p>!</p>\r\n                        <p>!</p>\r\n                        <p>!</p>\r\n                        <p>!</p>\r\n                        <p>!</p>\r\n                        <p>!</p>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <div>เปลี่ยนสถานะข่าว</div>\r\n                        <Input.Group >\r\n                            สถานะ :\r\n                            <Select defaultValue=\"1\" className=\"view-Button\">\r\n                                <Option value=\"1\">ส่ง</Option>\r\n                                <Option value=\"2\">ร่าง</Option>\r\n                            </Select>\r\n                        </Input.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify=\"end\">\r\n                    <Button type=\"primary\" ghost className=\"view-Button\">บันทึก</Button>\r\n                    <Button className=\"view-Button\">ลบ</Button>\r\n                    <Button className=\"view-Button\">ยกเลิก</Button>\r\n                </Row>\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default View","E:\\web-touch-news\\src\\components\\layout\\table\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\modal\\index.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":41,"column":9,"nodeType":"82","messageId":"83","endLine":41,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":102,"column":21,"nodeType":"86","endLine":102,"endColumn":48},{"ruleId":"84","severity":1,"message":"85","line":106,"column":21,"nodeType":"86","endLine":106,"endColumn":44},{"ruleId":"80","severity":1,"message":"87","line":40,"column":20,"nodeType":"82","messageId":"83","endLine":40,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":51,"column":20,"nodeType":"90","messageId":"91","endLine":51,"endColumn":30},{"ruleId":"92","severity":1,"message":"93","line":54,"column":7,"nodeType":"94","messageId":"95","endLine":54,"endColumn":71},{"ruleId":"80","severity":1,"message":"96","line":1,"column":62,"nodeType":"82","messageId":"83","endLine":1,"endColumn":68},{"ruleId":"80","severity":1,"message":"97","line":1,"column":78,"nodeType":"82","messageId":"83","endLine":1,"endColumn":84},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'newPassword' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setDataTest' is assigned a value but never used.","no-self-assign","'item.email' is assigned to itself.","MemberExpression","selfAssignment","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Avatar' is defined but never used.","'Upload' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"E:\\web-touch-news\\src\\index.js":"1","E:\\web-touch-news\\src\\App.js":"2","E:\\web-touch-news\\src\\reportWebVitals.js":"3","E:\\web-touch-news\\src\\Root.js":"4","E:\\web-touch-news\\src\\pages\\login\\index.js":"5","E:\\web-touch-news\\src\\components\\layout\\header\\index.js":"6","E:\\web-touch-news\\src\\components\\router\\index.js":"7","E:\\web-touch-news\\src\\components\\layout\\sider\\index.js":"8","E:\\web-touch-news\\src\\config.js":"9","E:\\web-touch-news\\src\\components\\layout\\table\\index.js":"10","E:\\web-touch-news\\src\\components\\layout\\modal\\index.js":"11","E:\\web-touch-news\\src\\components\\layout\\timeline\\index.js":"12","E:\\web-touch-news\\src\\components\\layout\\pagination\\index.js":"13","E:\\web-touch-news\\src\\HttpClient.js":"14","E:\\web-touch-news\\src\\components\\layout\\froala\\index.js":"15","E:\\web-touch-news\\src\\components\\layout\\tag\\index.js":"16","E:\\web-touch-news\\src\\pages\\profile\\index.js":"17","E:\\web-touch-news\\src\\pages\\viewNews\\index.js":"18","E:\\web-touch-news\\src\\pages\\admin\\home\\index.js":"19","E:\\web-touch-news\\src\\pages\\admin\\createNews\\index.js":"20","E:\\web-touch-news\\src\\pages\\super\\home\\index.js":"21","E:\\web-touch-news\\src\\pages\\super\\manage\\index.js":"22"},{"size":506,"mtime":1611654301025,"results":"23","hashOfConfig":"24"},{"size":704,"mtime":1611654301017,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1610073374053,"results":"26","hashOfConfig":"24"},{"size":712,"mtime":1610611664028,"results":"27","hashOfConfig":"24"},{"size":4905,"mtime":1611654301028,"results":"28","hashOfConfig":"24"},{"size":2335,"mtime":1611654301020,"results":"29","hashOfConfig":"24"},{"size":2084,"mtime":1611654301024,"results":"30","hashOfConfig":"24"},{"size":1398,"mtime":1611803316322,"results":"31","hashOfConfig":"24"},{"size":241,"mtime":1611654301024,"results":"32","hashOfConfig":"24"},{"size":791,"mtime":1611654301022,"results":"33","hashOfConfig":"24"},{"size":1305,"mtime":1611654301021,"results":"34","hashOfConfig":"24"},{"size":925,"mtime":1611654301023,"results":"35","hashOfConfig":"24"},{"size":337,"mtime":1610522627840,"results":"36","hashOfConfig":"24"},{"size":516,"mtime":1611654301017,"results":"37","hashOfConfig":"24"},{"size":471,"mtime":1611731739805,"results":"38","hashOfConfig":"24"},{"size":554,"mtime":1611654301023,"results":"39","hashOfConfig":"24"},{"size":9375,"mtime":1611821823777,"results":"40","hashOfConfig":"24"},{"size":7976,"mtime":1611654301044,"results":"41","hashOfConfig":"24"},{"size":8605,"mtime":1611800950407,"results":"42","hashOfConfig":"24"},{"size":9683,"mtime":1611736229854,"results":"43","hashOfConfig":"24"},{"size":6485,"mtime":1611654301041,"results":"44","hashOfConfig":"24"},{"size":10075,"mtime":1611730022388,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1hmo6ys",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},"E:\\web-touch-news\\src\\index.js",[],["97","98"],"E:\\web-touch-news\\src\\App.js",[],"E:\\web-touch-news\\src\\reportWebVitals.js",[],"E:\\web-touch-news\\src\\Root.js",[],"E:\\web-touch-news\\src\\pages\\login\\index.js",["99","100"],"import { Button, Checkbox, Form, Input, message } from 'antd';\r\nimport React, { useState } from \"react\";\r\nimport { UnlockOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nimport FormData from 'form-data'\r\nimport axios from 'axios'\r\nimport config from 'config'\r\nimport sha256 from 'js-sha256'\r\n\r\nconst Login = (props) => {\r\n    const [username, setUsername] = useState((localStorage.getItem('checkbox') ? localStorage.getItem('email') : ''))\r\n    const [password, setPassword] = useState((localStorage.getItem('checkbox') ? localStorage.getItem('password') : ''))\r\n    const [isCheckbox, setIsCheckbox] = useState((localStorage.getItem('checkbox')=== 'true' ? true : false))\r\n    \r\n    console.log('isCheckbox', isCheckbox)\r\n    const onFinish = values => {\r\n        if (isCheckbox && values.username !== \"\") {\r\n            localStorage.setItem('email', values.username)\r\n            localStorage.setItem('password', values.password)\r\n            localStorage.setItem('checkbox', isCheckbox)\r\n        }else if(isCheckbox === false){\r\n            localStorage.setItem('email', '')\r\n            localStorage.setItem('password', '')\r\n            localStorage.setItem('checkbox', isCheckbox)\r\n        }\r\n        // const params = {\r\n        //     email: values.username,\r\n        //     password: values.password,\r\n        //     role: 'admin',\r\n        //     service: 'timelapse-service'\r\n        // }\r\n        let setData = new FormData();\r\n        setData.append('email', values.username);\r\n        setData.append('password', sha256.hmac(\"sil-dkigx]ujpocx]'my=\", values.password));\r\n        setData.append('role', 'admin');\r\n        setData.append('service', 'timelapse-service');\r\n\r\n        axios.post(`${config.REACT_APP_AUTHANURL}/login`, setData)\r\n            .then(function (response) {\r\n                // console.log('response', response.data.code)\r\n                if (response.data.code === 200) {\r\n                    message.success(response.data.message)\r\n                    localStorage.setItem('token', response.data.data.access_token)\r\n                    localStorage.setItem('type', 'super')\r\n                    props.history.push(\"/home\")\r\n                    window.location.reload()\r\n                } else {\r\n                    // message.error(response.data.message)\r\n\r\n                    message.success(response.data.message)\r\n                    localStorage.setItem('token', 'test admin')\r\n                    localStorage.setItem('type', 'admin')\r\n                    props.history.push(\"/home\")\r\n                    window.location.reload()\r\n                }\r\n                // console.log(JSON.stringify(response.data));\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const onCheckbox = (e) => {\r\n        setIsCheckbox(e.target.checked)\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <div className=\"Login-box\">\r\n                <div className=\"Login-herde\">\r\n                    T<p className=\"login-text-o\" >o</p>uch K<p className=\"login-text-o\">o</p>rat News\r\n                </div>\r\n\r\n                <div className=\"Login-form\">\r\n                    <Form\r\n                        initialValues={{ username: username, password: password }}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input value=\"s\" size=\"large\" placeholder=\"ชื่อผู้ใช้งาน\" prefix={<UserOutlined />}\r\n                                 />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Please input your password!' }]}\r\n                        >\r\n                            <Input.Password size=\"large\" placeholder=\"รหัสผ่าน\" prefix={<UnlockOutlined />}\r\n                                 />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"isCheckbox\" >\r\n                            <Checkbox checked={isCheckbox} onChange={onCheckbox}>บันทึกรหัสผ่าน</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item >\r\n                            <div className=\"Login-button\">\r\n                                <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\r\n                                    เข้าสู่ระบบ\r\n                            </Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Login;\r\n","E:\\web-touch-news\\src\\components\\layout\\header\\index.js",[],"E:\\web-touch-news\\src\\components\\router\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\sider\\index.js",[],"E:\\web-touch-news\\src\\config.js",[],"E:\\web-touch-news\\src\\components\\layout\\table\\index.js",["101"],"import { Table } from 'antd'\r\n\r\nconst Tables = (props) => {\r\n    const pagination = {\r\n        pageSize: props.perPage,\r\n        total: props.totalPage,\r\n        current: props.pageCurrent\r\n    }\r\n    const onChange = (pagination, filters, sorter, extra) => {\r\n        // console.log('params', pagination, filters, sorter, extra)\r\n        props.setCurrentPage(pagination.current)\r\n    }\r\n    return (\r\n        <>\r\n            <Table\r\n                pagination={false}\r\n                columns={props.columns}\r\n                dataSource={props.dataSource}\r\n                scroll={{ x: 'fit-content' }}\r\n                onChange={onChange}\r\n                style={{ marginTop: '20px' }}\r\n                pagination={pagination}\r\n            />\r\n        </>\r\n    );\r\n}\r\nexport default Tables","E:\\web-touch-news\\src\\components\\layout\\modal\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\timeline\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\pagination\\index.js",[],"E:\\web-touch-news\\src\\HttpClient.js",[],"E:\\web-touch-news\\src\\components\\layout\\froala\\index.js",[],"E:\\web-touch-news\\src\\components\\layout\\tag\\index.js",[],"E:\\web-touch-news\\src\\pages\\profile\\index.js",["102","103","104","105"],"import { Avatar, Breadcrumb, Button, Col, Form, Input, Layout, Row, Upload, message } from 'antd'\r\nimport { ExclamationCircleOutlined, KeyOutlined, UserOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from 'components/layout/modal'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\n\r\nconst { Content } = Layout\r\nconst layout = {\r\n  labelCol: {\r\n    span: 5,\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  },\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const [formValue] = Form.useForm();\r\n  const params = props.match.params;\r\n  const [image, setImage] = useState('')\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [showInputPass, setShowInputPass] = useState(false)\r\n  const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: '', okText: '' });\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [params,])\r\n\r\n  const getData = () => {\r\n    httpClient.get(config.REACT_APP_BASEURL + '/user/' + params.id)\r\n      .then(function (response) {\r\n        // console.log('response', response)\r\n        const code = response.data.code\r\n        if (code === 200) {\r\n          setImage(response.data.data.image)\r\n          formValue.setFieldsValue({\r\n            email: response.data.data.email,\r\n            firstname: response.data.data.firstname,\r\n            lastname: response.data.data.lastname,\r\n            passwordNew: \" \",\r\n            passwordConfirm: \" \"\r\n          })\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const handleChange = (fileList) => {\r\n    console.log('fileList', fileList)\r\n    setImage(fileList.fileList[0].thumbUrl)\r\n  };\r\n\r\n  const conFirmPassword = () => {\r\n    setModalData({\r\n      type: 'confirm',\r\n      icon: <ExclamationCircleOutlined className=\"manage-icon-edit\" />,\r\n      title: 'ยืนยันการสร้างรหัสผ่านใหม่',\r\n      okColor: 'orange',\r\n      okText: 'ตกลง',\r\n      content: 'คุณต้องการยืนยันการสร้างรหัสใหม่นี้หรือไม่ !!! ',\r\n      onOk() {\r\n        // setIsModalVisible(false)\r\n        httpClient.put(config.REACT_APP_BASEURL + '/admin/resetpassword/' + params.id)\r\n          .then(function (response) {\r\n            const code = response.data.code\r\n            if (code === 201) {\r\n              setModalData({\r\n                type: 'show',\r\n                icon: <UserOutlined className=\"manage-icon-insert\" />,\r\n                title: 'เปลี่ยนรหัสผ่านสำเร็จ',\r\n                okColor: '#216258',\r\n                okText: 'ตกลง',\r\n                onOk() {\r\n                  offModal()\r\n                },\r\n                content: ({\r\n                  email: response.data.data.email,\r\n                  password: response.data.data.password\r\n                }),\r\n              })\r\n              onModal()\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error('เปลี่ยนรหัสผ่านไม่สำเร็จ');\r\n          })\r\n      },\r\n    })\r\n    onModal()\r\n  }\r\n\r\n  const cancelUpdate = () =>{\r\n    getData()\r\n  }\r\n\r\n  const submitUpdate = (value) => {\r\n    console.log('value', value)\r\n    if (showInputPass === true) {\r\n      if (value.passwordNew === value.passwordConfirm) {\r\n        const setData = JSON.stringify({\r\n          \"password\": value.passwordNew\r\n        })\r\n        httpClient.put(config.REACT_APP_BASEURL + '/user/password/' + params.id, setData)\r\n          .then(function (response) {\r\n            console.log('response', response)\r\n            message.success('เปลี่ยนรหัสผ่านสำเร็จ');\r\n          })\r\n          .catch(function (error) {\r\n            message.error('เปลี่ยนรหัสผ่านไม่สำเร็จ');\r\n          })\r\n      } else {\r\n        message.error('รหัสผ่านไม่ตรงกัน');\r\n      }\r\n    }\r\n    else {\r\n      const setData = JSON.stringify({\r\n        \"firstname\": value.firstname,\r\n        \"lastname\": value.lastname,\r\n        \"image\": image\r\n      })\r\n      httpClient.put(config.REACT_APP_BASEURL + '/user/update/' + params.id, setData)\r\n        .then(function (response) {\r\n          message.success('สำเร็จ');\r\n        })\r\n        .catch(function (error) {\r\n          message.error('ไม่สำเร็จ');\r\n        })\r\n    }\r\n  }\r\n\r\n  const ShowInputPassword = () => {\r\n    if (showInputPass === false) {\r\n      setShowInputPass(true);\r\n    }\r\n    else {\r\n      setShowInputPass(false)\r\n      formValue.setFieldsValue({\r\n        passwordNew: \" \",\r\n        passwordConfirm: \" \"\r\n      })\r\n    }\r\n  }\r\n\r\n  const onModal = () => {\r\n    setIsModalVisible(true)\r\n  };\r\n  const offModal = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: '4px 0' }}>\r\n        {params.state === 'manage' ?\r\n          <>\r\n            <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\r\n            <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\r\n          </>\r\n          :\r\n          <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\r\n        }\r\n      </Breadcrumb>\r\n      <Content className=\"content-layout-background\">\r\n        <Row style={{ marginTop: '20px' }}>\r\n          <Col span={12} offset={6}>\r\n            <Form\r\n              form={formValue}\r\n              onFinish={submitUpdate}\r\n            >\r\n              <Form.Item className=\"profile-Center\">\r\n                <Avatar size={250} src={image} />\r\n              </Form.Item>\r\n              <Form.Item className=\"profile-Center\">\r\n                <Upload\r\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                  listType=\"picture\"\r\n                  maxCount={1}\r\n                  onChange={handleChange}\r\n                >\r\n                  <Button>อัพโหลดรูปภาพโปรไฟล์</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n              <Form.Item name=\"email\" label='อีเมล' {...layout}>\r\n                <Input disabled={true}></Input>\r\n              </Form.Item>\r\n              <Form.Item name=\"firstname\" label='ชื่อ' {...layout}>\r\n                <Input disabled={showInputPass}></Input>\r\n              </Form.Item>\r\n              <Form.Item name=\"lastname\" label='นามสกุล' {...layout}>\r\n                <Input disabled={showInputPass}></Input>\r\n              </Form.Item>\r\n              <Form.Item className=\"profile-Right\">\r\n                {params.state === 'manage' ?\r\n                  <>\r\n                    <a onClick={conFirmPassword}><u>เปลี่ยนรหัสผ่าน</u></a>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <a onClick={ShowInputPassword}><u>เปลี่ยนรหัสผ่าน</u></a>\r\n                  </>\r\n                }\r\n              </Form.Item>\r\n              {showInputPass === true ?\r\n                <>\r\n                  <Form.Item\r\n                    name=\"passwordNew\"\r\n                    label='รหัสผ่านใหม่' {...layout}>\r\n                    <Input />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"passwordConfirm\"\r\n                    label='ยืนยันรหัสผ่านใหม่' {...layout}>\r\n                    <Input />\r\n                  </Form.Item>\r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n              }\r\n              <Form.Item className=\"profile-Right\">\r\n                <Button className=\"profile-button\" type=\"primary\" ghost htmlType=\"submit\">บันทึก</Button>\r\n                {params.state === 'manage' ?\r\n                  <>\r\n                    <Link to=\"/manage\">\r\n                      <Button className=\"profile-button\" style={{ marginLeft: '10px' }}>ยกเลิก</Button>\r\n                    </Link>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <Button className=\"profile-button\" onClick={cancelUpdate} style={{ marginLeft: '10px' }}>ยกเลิก</Button>\r\n                  </>\r\n                }\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={modalData.onOk}\r\n        onCancel={offModal}\r\n        modalData={modalData}\r\n      >\r\n        {modalData.type === 'show' ?\r\n          <>\r\n            <div style={{ marginLeft: '80px' }}>อีเมล : {modalData.content.email}</div>\r\n            <div style={{ marginLeft: '80px' }}>รหัสผ่าน {modalData.content.password}</div>\r\n            <div style={{ marginLeft: '40px', marginTop: '20px', color: 'red' }}>*ระบบจะแสดงข้อมูลเพียงครั้งเดียว*</div>\r\n          </>\r\n          :\r\n          <p style={{ marginLeft: '80px' }}>{modalData.content}</p>\r\n        }\r\n      </Modals>\r\n    </>\r\n  );\r\n}\r\nexport default Profile","E:\\web-touch-news\\src\\pages\\viewNews\\index.js",[],"E:\\web-touch-news\\src\\pages\\admin\\home\\index.js",["106","107","108","109"],"E:\\web-touch-news\\src\\pages\\admin\\createNews\\index.js",["110"],"import { Breadcrumb, Button, Col, Form, Image, Input, Layout, Row, Select } from 'antd';\r\nimport React, { useState } from \"react\"\r\n\r\nimport FroalaEditor from 'components/layout/froala/index'\r\nimport { Link } from \"react-router-dom\";\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport Tag from 'components/layout/tag/index'\r\n\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\n\r\nconst CreateNews = (props) => {\r\n    const params = props.match.params;\r\n    const [form] = Form.useForm();\r\n    const [credit, setCredit] = useState({ inputVisible: false, inputValue: '', tags: [] })\r\n    const [hashtag, setHashtag] = useState({ inputVisible: false, inputValue: '', tags: [] })\r\n    const [newsContent, setNewsContent] = useState('')\r\n\r\n    const newsContentChange = html => {\r\n        setNewsContent(html)\r\n    }\r\n    const creditChange = (e) => {\r\n        setCredit({ ...credit, inputValue: e.target.value });\r\n    };\r\n    const creditClose = removedTag => {\r\n        const tags = credit.tags.filter(tag => tag !== removedTag);\r\n        setCredit({ tags })\r\n    }\r\n    const creditConfirm = (e) => {\r\n        let tags = [...credit.tags];\r\n        tags.push(credit.inputValue)\r\n        setCredit({\r\n            tags,\r\n            inputVisible: false,\r\n            inputValue: '',\r\n        });\r\n    }\r\n    const hashtagChange = (e) => {\r\n        setHashtag({ ...hashtag, inputValue: e.target.value });\r\n    };\r\n    const hashtagClose = removedTag => {\r\n        const tags = hashtag.tags.filter(tag => tag !== removedTag);\r\n        setHashtag({ tags })\r\n    }\r\n    const hashtagConfirm = (e) => {\r\n        let tags = [...hashtag.tags];\r\n        tags.push(hashtag.inputValue)\r\n        setHashtag({\r\n            tags,\r\n            inputVisible: false,\r\n            inputValue: '',\r\n        });\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        console.log('newsContent', newsContent)\r\n        console.log('credit', credit)\r\n        console.log('hashtag', hashtag)\r\n    };\r\n\r\n    const onCheck = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            console.log('Success:', values);\r\n        } catch (errorInfo) {\r\n            console.log('Failed:', errorInfo);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {params.type === \"create\" ?\r\n                <Breadcrumb style={{ margin: '4px 0' }}>\r\n                    <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>เพิ่ม</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                :\r\n                <Breadcrumb style={{ margin: '4px 0' }}>\r\n                    <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>แก้ไข</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            }\r\n            <Content className=\"create-content\">\r\n                <Form\r\n                    form={form}\r\n                    // name=\"dynamic_rule\"\r\n                    // onFinish={onFinish}\r\n                    layout=\"vertical\"\r\n                >\r\n                    <Row>\r\n                        <Col span={12} >\r\n                            <Row gutter={[0, 0]} justify='center'>\r\n                                <Col>\r\n                                    <Image width={300} height={300} ></Image>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[0, 0]} justify='center'>\r\n                                <Col>\r\n                                    <div style={{ color: '#A0A0A0' }}>อัตราส่วนภาพ 1:1 ขนาด 1080x1080 px</div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[0, 16]} justify='center'>\r\n                                <Col>\r\n                                    <Button>รูปภาพ</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 8]} align='middle'>\r\n                                <Col style={{ textAlign: 'right' }} span={5}>\r\n                                    <div>เครติด</div>\r\n                                </Col>\r\n                                <Col span={16}>\r\n                                    <Input\r\n                                        value={credit.inputValue}\r\n                                        onChange={creditChange}\r\n                                        // onBlur={handleTagConfirm}\r\n                                        onPressEnter={creditConfirm}\r\n                                    />\r\n                                </Col>\r\n                                <Col span={2}>\r\n                                    <PlusCircleOutlined className=\"create-icon\"></PlusCircleOutlined>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 16]} align='middle'>\r\n                                <Col offset={5}>\r\n                                    <Tag\r\n                                        data={credit.tags}\r\n                                        onClose={creditClose}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 8]} align='middle'>\r\n                                <Col style={{ textAlign: 'right' }} span={5}>\r\n                                    <div>แฮชแท็ก</div>\r\n                                </Col>\r\n                                <Col span={16}>\r\n                                    <Input\r\n                                        value={hashtag.inputValue}\r\n                                        onChange={hashtagChange}\r\n                                        // onBlur={handleTagConfirm}\r\n                                        onPressEnter={hashtagConfirm}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col span={2}>\r\n                                    <PlusCircleOutlined onClick={hashtagConfirm} className=\"create-icon\"></PlusCircleOutlined>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 16]} align='middle'>\r\n                                <Col offset={5}>\r\n                                    <Tag\r\n                                        data={hashtag.tags}\r\n                                        onClose={hashtagClose}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={[8, 8]}>\r\n                                <Col style={{ textAlign: 'right' }} span={5}>\r\n                                    <div>สิ่งที่ควรแก้ไข</div>\r\n                                </Col>\r\n                                <Col span={17}>\r\n                                    <div style={{ color: 'red' }}>คำแนะนำจาก Super Admin</div>\r\n                                    <div>ข่าว-----</div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={12}>\r\n\r\n                            <Form.Item\r\n                                label=\"ประเภทข่าว\"\r\n                                name=\"category\"\r\n                                rules={[{ required: true, message: 'Please input your username!' }]}\r\n                            >\r\n                                <Select placeholder=\"เลือกประเภท\">\r\n                                    <Option value=\"1\">ไอที</Option>\r\n                                    <Option value=\"2\">ท่องเที่ยว</Option>\r\n                                    <Option value=\"3\">อาหาร</Option>\r\n                                    <Option value=\"4\">สุขภาพ</Option>\r\n                                    <Option value=\"5\">อุบัติเหตุ</Option>\r\n                                    <Option value=\"6\">กิจกรรม</Option>\r\n                                    <Option value=\"7\">ทั่วไป</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"หัวเรื่อง\"\r\n                                name=\"heading\"\r\n                                rules={[{ required: true, message: 'กรุณาใส่ข้อมูล' }]}\r\n                            >\r\n                                <Input></Input>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"เนื้อหาขาว\"\r\n                            >\r\n                                <FroalaEditor\r\n                                    onModelChange={newsContentChange}\r\n                                />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"end\">\r\n                        <Button className=\"create-button\" type=\"primary\" ghost onClick={onCheck} >บันทึก</Button>\r\n                        <Link to=\"/home\">\r\n                            <Button className=\"create-button\">ยกเลิก</Button>\r\n                        </Link>\r\n                    </Row>\r\n                </Form>\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default CreateNews","E:\\web-touch-news\\src\\pages\\super\\home\\index.js",["111","112"],"import { Breadcrumb, Col, Dropdown, Input, Layout, Menu, Row, Select } from 'antd';\r\nimport { DeleteOutlined, FieldTimeOutlined, MoreOutlined, SendOutlined, TeamOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Modals from 'components/layout/modal'\r\nimport Pagination from 'components/layout/pagination'\r\nimport Tables from 'components/layout/table'\r\nimport Timeline from 'components/layout/timeline'\r\n\r\nconst { Content } = Layout;\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\n\r\nconst data = [{\r\n  date: '07/01/2021',\r\n  topic: 'ตร.ค้นโกดังย่านฉลองกรุง ยังไม่พบผิด เร่งเช็กภาพโต๊ะบาคาร่า ตัดต่อหรือไม่',\r\n  admin: 'new',\r\n  category: 'การเมือง',\r\n  status: 'ส่ง',\r\n}\r\n];\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: null, okText: '' });\r\n\r\n  const onTimeline = (value) => {\r\n    setModalData({\r\n      type: 'show',\r\n      icon: <FieldTimeOutlined className=\"manage-icon-insert\" />,\r\n      title: 'ไทม์ไลน์',\r\n      okColor: '#216258',\r\n      okText: 'ตกลง',\r\n      content: <div style={{ width: '180px' }}><Timeline /></div>\r\n    })\r\n    showModal()\r\n  }\r\n\r\n  const onDelete = (topic, e) => {\r\n    setModalData({\r\n      type: 'confirm',\r\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n      title: 'คุณต้องการลบข่าวนี้ หรือไม่ ! ',\r\n      okColor: 'red',\r\n      okText: 'ลบ',\r\n      content: topic,\r\n    })\r\n    showModal()\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true)\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  const onPagination = (page) => {\r\n    console.log(page);\r\n  };\r\n  const menu = (topic) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item onClick={onTimeline}>\r\n          <FieldTimeOutlined style={{ color: '#6AC9FF' }}></FieldTimeOutlined>\r\n          ไทม์ไลน์\r\n      </Menu.Item>\r\n        <Menu.Item onClick={(e) => { onDelete(topic, e); }}>\r\n          <DeleteOutlined style={{ color: 'red' }}></DeleteOutlined>\r\n          ลบ\r\n      </Menu.Item>\r\n      </Menu>\r\n    );\r\n\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'วันที่',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'หัวข้อ',\r\n      // dataIndex: 'topic',\r\n      key: 'topic',\r\n      width: '50%',\r\n      ellipsis: true,\r\n      render: (text, record) => (<Link to=\"/home/view\" style={{ color: '#000' }}>{record.topic}</Link>),\r\n    },\r\n    {\r\n      title: 'ผู้ดูแลระบบ',\r\n      dataIndex: 'admin',\r\n      key: 'admin',\r\n    },\r\n    {\r\n      title: 'ประเภท',\r\n      dataIndex: 'category',\r\n      key: 'category',\r\n    },\r\n    {\r\n      title: 'สถานะ',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n    },\r\n    {\r\n      title: '',\r\n      width: '5%',\r\n      key: 'action',\r\n      render: (text, record) => (<Dropdown placement=\"bottomRight\" overlay={menu(record.topic)}><MoreOutlined /></Dropdown>),\r\n    }\r\n  ];\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: '4px 0' }}>\r\n        <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"home-Content\">\r\n        <Row style={{ height: '160px' }} >\r\n          <Col span={8} >\r\n            <div className=\"home-Box-Left\">\r\n              <Row align=\"middle\" style={{ height: '100%' }}>\r\n                <Col span={8} offset={4}>\r\n                  <UnorderedListOutlined className=\"home-Icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"home-Number\">6</p>\r\n                  <p className=\"home-Text\">ข่าวทั้งหมด</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col span={8} >\r\n            <div className=\"home-Box-Center\" >\r\n              <Row align=\"middle\" style={{ height: '100%' }}>\r\n                <Col span={8} offset={4}>\r\n                  <TeamOutlined className=\"home-Icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"home-Number\">6</p>\r\n                  <p className=\"home-Text\">ผู้ดูแลระบบ</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col span={8} >\r\n            <div className=\"home-Box-Right\" >\r\n              <Row align=\"middle\" style={{ height: '100%' }}>\r\n                <Col span={8} offset={4}>\r\n                  <SendOutlined className=\"home-Icon\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <p className=\"home-Number\">6</p>\r\n                  <p className=\"home-Text\">ข่าววันนี้</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: '20px' }}>\r\n          <Col span={16}>\r\n            <div className=\"home-Text-List\">รายการ</div>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Input.Group className=\"home-Input-Group\">\r\n              <Select defaultValue=\"1\" className=\"home-Select\">\r\n                <Option value=\"1\">ประเภทข่าวทั้งหมด</Option>\r\n                <Option value=\"2\">การเมือง</Option>\r\n              </Select>\r\n            </Input.Group>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Search placeholder=\"ค้นหา\"></Search>\r\n          </Col>\r\n        </Row>\r\n        <Tables\r\n          columns={columns}\r\n          dataSource={data}\r\n        />\r\n\r\n        <Modals\r\n          isModalVisible={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          modalData={modalData}\r\n        >\r\n          {modalData.type === 'show' ?\r\n            <div style={{ marginLeft: '100px' }}>{modalData.content}</div>\r\n            :\r\n            <p style={{ marginLeft: '80px' }} className=\"text-overflow\">{modalData.content}</p>\r\n          }\r\n        </Modals>\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\nexport default Home","E:\\web-touch-news\\src\\pages\\super\\manage\\index.js",["113","114","115"],"import { Breadcrumb, Button, Col, Form, Input, Layout, Row, Space, Switch, Tooltip, message } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, ExclamationCircleOutlined, PlusOutlined, UserOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport Modals from 'components/layout/modal'\r\nimport Tables from 'components/layout/table'\r\nimport config from 'config'\r\nimport { httpClient } from 'HttpClient'\r\n\r\n// import FormData from 'form-data'\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst Manage = () => {\r\n  const [dataSource, setDataSource] = useState();\r\n  const [dataFilter, setDataFilter] = useState(\"\")\r\n  const [current, setCurrent] = useState(1)\r\n  const [pagination, setPagination] = useState({ pageCurrent: 1, perPage: 1, totalPage: 1 })\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: '', okText: '', onOk: null });\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [dataFilter, current,isModalVisible])\r\n\r\n  const getData = () => {\r\n    const params = {\r\n      per_page: '10',\r\n      page: current,\r\n    }\r\n    httpClient.get(config.REACT_APP_BASEURL + '/admin', { params })\r\n      .then(function (response) {\r\n        console.log('response', response)\r\n        const code = response.data.code\r\n        const data = response.data.data.data_list\r\n        setPagination({\r\n          currentPage: response.data.data.pagination.current_page,\r\n          perPage: response.data.data.pagination.per_page,\r\n          totalPage: response.data.data.pagination.total\r\n        })\r\n        if (code === 200) {\r\n          const dataMap = data.map((item) => {\r\n            item.key = item.id\r\n            item.email = item.email\r\n            item.name = item.firstname + ' ' + item.lastname\r\n            // item.suspend = item.suspend\r\n            { item.suspend === \"true\" ? item.suspend = true : item.suspend = false }\r\n            return item\r\n          })\r\n          setDataSource(dataMap)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const onInsert = (value) => {\r\n    // console.log('email', value.email)\r\n    // let setData = `{\"email\":\"${value.email}\"}`\r\n    // setData.append(\"email\", value);\r\n    const setData = JSON.stringify({\r\n      \"email\": value.email\r\n    })\r\n    console.log('setData', setData)\r\n    httpClient.post(config.REACT_APP_BASEURL + '/admin', setData)\r\n      .then(function (response) {\r\n        const code = response.data.code\r\n        console.log('response', response)\r\n        if (code === 201) {\r\n          setModalData({\r\n            type: 'show',\r\n            icon: <UserOutlined className=\"manage-icon-insert\" />,\r\n            title: 'เพิ่มผู้ดูแลระบบใหม่',\r\n            okColor: '#216258',\r\n            okText: 'ตกลง',\r\n            onOk() {\r\n              setIsModalVisible(false)\r\n            },\r\n            content: ({\r\n              email: response.data.data.email,\r\n              password: response.data.data.password\r\n            }),\r\n          })\r\n          showModal()\r\n          setDataFilter(response.data.data.email)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    console.log('Delete id : ', record.key)\r\n    setModalData({\r\n      type: 'confirm',\r\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\r\n      title: 'คุณต้องการลบผู้ดูแลระบบนี้ หรือไม่ ! ',\r\n      okColor: 'red',\r\n      okText: 'ลบ',\r\n      content: record.email,\r\n      onOk() {\r\n        setIsModalVisible(false)\r\n        httpClient.delete(config.REACT_APP_BASEURL + '/admin/' + record.key)\r\n          .then(function (response) {\r\n            const code = response.data.code\r\n            if (code === 200) {\r\n              message.success('ลบผู้ดูแลระบบสำเร็จ');\r\n              setDataFilter(record.key)\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            message.error('ลบไม่สำเร็จ');\r\n          })\r\n      },\r\n    })\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  // const onEdit = (record) => {\r\n\r\n  // }\r\n\r\n  const onSuspend = (checked, record) => {\r\n    // console.log('checked', checked)\r\n    // console.log('record', record)\r\n    if (checked === false) {\r\n      setModalData({\r\n        type: 'confirm',\r\n        icon: <ExclamationCircleOutlined className=\"manage-icon-suspend\" />,\r\n        title: 'คุณต้องการระงับผู้ดูแลระบบนี้ หรือไม่ ! ',\r\n        okColor: 'orange',\r\n        content: record.email,\r\n        okText: 'ระงับ',\r\n        onOk() {\r\n          setIsModalVisible(false)\r\n          const setData = JSON.stringify({\r\n            \"suspend\": `\"${checked}\"`\r\n          })\r\n          console.log('setData', setData)\r\n          httpClient.put(config.REACT_APP_BASEURL + '/admin/suspend/' + record.key, setData)\r\n            .then(function (response) {\r\n              console.log('response', response)\r\n              const code = response.data.code\r\n              if (code === 200) {\r\n                message.success('ระงับผู้ดูแลระบบสำเร็จ');\r\n                setDataFilter(record.key)\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n              message.error('ระงับผู้ดูแลระบบไม่สำเร็จ');\r\n            })\r\n\r\n        },\r\n      })\r\n      setIsModalVisible(true)\r\n    }\r\n    else {\r\n      const setData = JSON.stringify({\r\n        \"suspend\": `\"${checked}\"`\r\n      })\r\n      httpClient.put(config.REACT_APP_BASEURL + '/admin/suspend/' + record.key, setData)\r\n        .then(function (response) {\r\n          message.success('อนุญาติผู้ดูแลระบบสำเร็จ');\r\n        })\r\n        .catch(function (error) {\r\n          message.error('อนุญาติผู้ดูแลระบบไม่สำเร็จ');\r\n        })\r\n    }\r\n  }\r\n\r\n  const onSearch = (value) => {\r\n  }\r\n\r\n  const currentPage = (value) => {\r\n    setCurrent(value);\r\n    console.log('currentPage', current)\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true)\r\n  };\r\n\r\n  // const handleOk = () => {\r\n  //   console.log('OK')\r\n  //   setIsModalVisible(false)\r\n  // };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'อีเมล',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'ชื่อ - นามสกุล',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: '',\r\n      width: '15%',\r\n      key: 'action',\r\n      render: ( record) => (\r\n        <Space >\r\n          <Tooltip placement=\"bottom\" title=\"แก้ไข\">\r\n            <Link to={`/manage/profile/${record.key}`}>\r\n              <EditOutlined className=\"manage-icon-edit\" />\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ลบ\">\r\n            <DeleteOutlined className=\"manage-icon-delete\" onClick={() => { onDelete(record) }} />\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"ระงับ\">\r\n            <Switch size=\"small\" defaultChecked={record.suspend} onClick={(e) => { onSuspend(e, record) }} />\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: '4px 0' }}>\r\n        <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Content className=\"manage-content\">\r\n        <Row style={{height:'32px'}}>\r\n          <Col span={18}>\r\n            <Form name=\"email\" layout=\"inline\" onFinish={onInsert}>\r\n              <Form.Item>\r\n                <div className=\"manage-Text\">ผู้ดูแลระบบ</div>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true, \r\n                    message: 'กรุณากรอกอีเมล'\r\n                  },\r\n                ]}\r\n                className=\"manage-Input\">\r\n                <Input placeholder=\"กรอกอีเมล\" />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button className=\"manage-button\" type=\"primary\" htmlType=\"submit\" icon={<PlusOutlined />}>เพิ่ม</Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Col span={6} style={{ textAlign: 'right' }}>\r\n            <Search placeholder=\"ค้นหา\" className=\"manage-search\" onSearch={onSearch} />\r\n          </Col>\r\n        </Row>\r\n        <Tables\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          setCurrentPage={currentPage}\r\n          pageCurrent={pagination.pageCurrent}\r\n          perPage={pagination.perPage}\r\n          totalPage={pagination.totalPage}\r\n        />\r\n      </Content>\r\n      <Modals\r\n        isModalVisible={isModalVisible}\r\n        onOk={modalData.onOk}\r\n        onCancel={handleCancel}\r\n        modalData={modalData}\r\n      >\r\n        {modalData.type === 'show' ?\r\n          <>\r\n            <div style={{ marginLeft: '80px' }}>อีเมล : {modalData.content.email}</div>\r\n            <div style={{ marginLeft: '80px' }}>รหัสผ่าน {modalData.content.password}</div>\r\n            <div style={{ marginLeft: '40px', marginTop: '20px', color: 'red' }}>*ระบบจะแสดงข้อมูลเพียงครั้งเดียว*</div>\r\n          </>\r\n          :\r\n          <p style={{ marginLeft: '80px' }}>{modalData.content}</p>\r\n        }\r\n      </Modals>\r\n    </>\r\n  );\r\n}\r\nexport default Manage",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":11,"column":22,"nodeType":"122","messageId":"123","endLine":11,"endColumn":33},{"ruleId":"120","severity":1,"message":"124","line":12,"column":22,"nodeType":"122","messageId":"123","endLine":12,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":22,"column":17,"nodeType":"127","endLine":22,"endColumn":40},{"ruleId":"120","severity":1,"message":"128","line":2,"column":37,"nodeType":"122","messageId":"123","endLine":2,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":30,"column":6,"nodeType":"131","endLine":30,"endColumn":15,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":201,"column":21,"nodeType":"135","endLine":201,"endColumn":50},{"ruleId":"133","severity":1,"message":"134","line":205,"column":21,"nodeType":"135","endLine":205,"endColumn":52},{"ruleId":"120","severity":1,"message":"136","line":1,"column":35,"nodeType":"122","messageId":"123","endLine":1,"endColumn":43},{"ruleId":"120","severity":1,"message":"137","line":1,"column":60,"nodeType":"122","messageId":"123","endLine":1,"endColumn":64},{"ruleId":"120","severity":1,"message":"138","line":2,"column":110,"nodeType":"122","messageId":"123","endLine":2,"endColumn":122},{"ruleId":"120","severity":1,"message":"139","line":68,"column":11,"nodeType":"122","messageId":"123","endLine":68,"endColumn":19},{"ruleId":"120","severity":1,"message":"140","line":55,"column":11,"nodeType":"122","messageId":"123","endLine":55,"endColumn":19},{"ruleId":"120","severity":1,"message":"141","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":18},{"ruleId":"120","severity":1,"message":"142","line":67,"column":9,"nodeType":"122","messageId":"123","endLine":67,"endColumn":21},{"ruleId":"129","severity":1,"message":"130","line":26,"column":6,"nodeType":"131","endLine":26,"endColumn":42,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":46,"column":26,"nodeType":"146","messageId":"147","endLine":46,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":49,"column":13,"nodeType":"150","messageId":"151","endLine":49,"endColumn":85},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'setUsername' is assigned a value but never used.","Identifier","unusedVar","'setPassword' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'KeyOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["154"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'UserOutlined' is defined but never used.","'handleOk' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'Pagination' is defined but never used.","'onPagination' is assigned a value but never used.",["155"],"no-self-assign","'item.email' is assigned to itself.","MemberExpression","selfAssignment","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [getData, params]",{"range":"160","text":"161"},"Update the dependencies array to be: [dataFilter, current, isModalVisible, getData]",{"range":"162","text":"163"},[968,977],"[getData, params]",[1093,1129],"[dataFilter, current, isModalVisible, getData]"]
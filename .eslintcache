[{"/Users/touch2007/intern/web-touch-news/src/index.js":"1","/Users/touch2007/intern/web-touch-news/src/Root.js":"2","/Users/touch2007/intern/web-touch-news/src/context.js":"3","/Users/touch2007/intern/web-touch-news/src/reportWebVitals.js":"4","/Users/touch2007/intern/web-touch-news/src/App.js":"5","/Users/touch2007/intern/web-touch-news/src/pages/login/index.js":"6","/Users/touch2007/intern/web-touch-news/src/components/router/index.js":"7","/Users/touch2007/intern/web-touch-news/src/components/layout/sider/index.js":"8","/Users/touch2007/intern/web-touch-news/src/components/layout/header/index.js":"9","/Users/touch2007/intern/web-touch-news/src/config.js":"10","/Users/touch2007/intern/web-touch-news/src/pages/viewNews/index.js":"11","/Users/touch2007/intern/web-touch-news/src/pages/profile/index.js":"12","/Users/touch2007/intern/web-touch-news/src/pages/admin/createNews/index.js":"13","/Users/touch2007/intern/web-touch-news/src/pages/super/manage/index.js":"14","/Users/touch2007/intern/web-touch-news/src/HttpClient.js":"15","/Users/touch2007/intern/web-touch-news/src/pages/super/home/index.js":"16","/Users/touch2007/intern/web-touch-news/src/pages/admin/home/index.js":"17","/Users/touch2007/intern/web-touch-news/src/components/layout/froala/index.js":"18","/Users/touch2007/intern/web-touch-news/src/components/layout/tag/index.js":"19","/Users/touch2007/intern/web-touch-news/src/components/layout/modal/index.js":"20","/Users/touch2007/intern/web-touch-news/src/components/layout/table/index.js":"21","/Users/touch2007/intern/web-touch-news/src/components/layout/timeline/index.js":"22"},{"size":561,"mtime":1614657019849,"results":"23","hashOfConfig":"24"},{"size":696,"mtime":1613104796479,"results":"25","hashOfConfig":"24"},{"size":641,"mtime":1613104796483,"results":"26","hashOfConfig":"24"},{"size":362,"mtime":1610509721631,"results":"27","hashOfConfig":"24"},{"size":718,"mtime":1613104796477,"results":"28","hashOfConfig":"24"},{"size":4608,"mtime":1613104796486,"results":"29","hashOfConfig":"24"},{"size":1973,"mtime":1614657019849,"results":"30","hashOfConfig":"24"},{"size":2452,"mtime":1614657019847,"results":"31","hashOfConfig":"24"},{"size":4573,"mtime":1614674660862,"results":"32","hashOfConfig":"24"},{"size":232,"mtime":1613104796482,"results":"33","hashOfConfig":"24"},{"size":12157,"mtime":1614657019854,"results":"34","hashOfConfig":"24"},{"size":10928,"mtime":1614657019851,"results":"35","hashOfConfig":"24"},{"size":19186,"mtime":1614660374856,"results":"36","hashOfConfig":"24"},{"size":10793,"mtime":1614657019853,"results":"37","hashOfConfig":"24"},{"size":2107,"mtime":1614660374802,"results":"38","hashOfConfig":"24"},{"size":10371,"mtime":1614674660863,"results":"39","hashOfConfig":"24"},{"size":13902,"mtime":1614674660863,"results":"40","hashOfConfig":"24"},{"size":1669,"mtime":1614657019845,"results":"41","hashOfConfig":"24"},{"size":531,"mtime":1613104796481,"results":"42","hashOfConfig":"24"},{"size":1346,"mtime":1614657019846,"results":"43","hashOfConfig":"24"},{"size":953,"mtime":1614657019848,"results":"44","hashOfConfig":"24"},{"size":2610,"mtime":1614657019848,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"ctemt4",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},"/Users/touch2007/intern/web-touch-news/src/index.js",[],["101","102"],"/Users/touch2007/intern/web-touch-news/src/Root.js",[],"/Users/touch2007/intern/web-touch-news/src/context.js",[],"/Users/touch2007/intern/web-touch-news/src/reportWebVitals.js",[],"/Users/touch2007/intern/web-touch-news/src/App.js",[],"/Users/touch2007/intern/web-touch-news/src/pages/login/index.js",["103"],"import { Button, Checkbox, Form, Input, message } from 'antd';\nimport React, { useContext, useState } from \"react\";\nimport { UnlockOutlined, UserOutlined } from '@ant-design/icons';\n\nimport { Context } from '../../context'\nimport axios from 'axios'\nimport config from 'config'\nimport sha256 from 'js-sha256'\n\nconst Login = (props) => {\n    const context = useContext(Context)\n    const [username] = useState((localStorage.getItem('checkbox') ? localStorage.getItem('email') : ''))\n    const [password] = useState((localStorage.getItem('checkbox') ? localStorage.getItem('password') : ''))\n    const [isCheckbox, setIsCheckbox] = useState((localStorage.getItem('checkbox') === 'true' ? true : false))\n\n    // console.log('isCheckbox', isCheckbox)\n    const onFinish = values => {\n        if (isCheckbox && values.username !== \"\") {\n            localStorage.setItem('email', values.username)\n            localStorage.setItem('password', values.password)\n            localStorage.setItem('checkbox', isCheckbox)\n        } else if (isCheckbox === false) {\n            localStorage.setItem('email', '')\n            localStorage.setItem('password', '')\n            localStorage.setItem('checkbox', isCheckbox)\n        }\n\n        const setData = JSON.stringify({\n            \"email\": `${values.username}`,\n            \"password\": `${values.password}`\n        })\n        // console.log('setData', setData)\n        axios.post(config.REACT_APP_BASEURL + '/login', setData)\n            .then(function (response) {\n                console.log('response', response)\n                if (response.data.code === 200) {\n                    console.log('login_context.user', context.user)\n                    console.log('response.data.data.first_name', response.data.data.first_name)\n                    localStorage.setItem('refresh_token', response.data.data.refresh_token)\n                    localStorage.setItem('access_token', response.data.data.access_token)\n                    localStorage.setItem('role', response.data.data.role)\n                    localStorage.setItem('id', response.data.data.id)\n\n                    message.success(response.data.message)\n                    console.log('response.data.message', response.data.message)\n                    props.history.push(\"/home\")\n                    window.location.reload()\n                } else {\n                    message.error(response.data.message)\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    const onCheckbox = (e) => {\n        setIsCheckbox(e.target.checked)\n    }\n    return (\n        <div className=\"Login\">\n            <div className=\"Login-box\">\n                <div className=\"Login-herde\">\n                    T<p className=\"login-text-o\" >o</p>uch K<p className=\"login-text-o\">o</p>rat News\n                </div>\n\n                <div className=\"Login-form\">\n                    <Form\n                        initialValues={{ username: username, password: password }}\n                        onFinish={onFinish}\n                    >\n                        <Form.Item\n                            name=\"username\"\n                            rules={[{ required: true, message: 'Please input your username!' }]}\n                        >\n                            <Input value=\"s\" size=\"large\" placeholder=\"ชื่อผู้ใช้งาน\" prefix={<UserOutlined />}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[{ required: true, message: 'Please input your password!' }]}\n                        >\n                            <Input.Password size=\"large\" placeholder=\"รหัสผ่าน\" prefix={<UnlockOutlined />}\n                            />\n                        </Form.Item>\n                        <Form.Item name=\"isCheckbox\" >\n                            <Checkbox checked={isCheckbox} onChange={onCheckbox}>บันทึกรหัสผ่าน</Checkbox>\n                        </Form.Item>\n                        <Form.Item >\n                            <div className=\"Login-button\">\n                                <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\n                                    เข้าสู่ระบบ\n                            </Button>\n                            </div>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Login;\n","/Users/touch2007/intern/web-touch-news/src/components/router/index.js",[],"/Users/touch2007/intern/web-touch-news/src/components/layout/sider/index.js",["104"],"import { HomeOutlined, SettingOutlined, UserOutlined } from '@ant-design/icons';\nimport { Layout, Menu } from 'antd';\nimport React, { useEffect, useState } from \"react\"\n\nimport { Link } from \"react-router-dom\";\n\nconst { Sider } = Layout;\n\nconst Siderbar = (props) => {\n    const type = localStorage.getItem('role')\n    const [activeMenu, setActiveMenu] = useState(props.location.pathname)\n\n    useEffect(() => {\n        console.log('object', props)\n        setActiveMenu(props.location.pathname)\n        if (props.location.pathname === '/' ) {\n            setActiveMenu('/home')\n        }else if (props.location.pathname.substring(1, 5) === 'home' ) {\n            setActiveMenu('/home')\n        }\n    }, [props.location.pathname]);\n\n    return (\n        <Sider\n            width={200}\n            className=\"site-layout-background\"\n            breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n            onBreakpoint={broken => {\n                console.log(broken);\n            }}\n            onCollapse={(collapsed, type) => {\n                console.log(collapsed, type);\n            }}\n        >\n            <div className=\"logo\">\n                {type === 'Superadmin' ?\n                    <>SUPER ADMIN</>\n                    :\n                    <>ADMIN</>\n                }\n            </div>\n            <Menu\n                mode=\"inline\"\n                selectedKeys={[activeMenu]}\n                style={{ height: '100%', borderRight: 0 }}\n            >\n                <Menu.Item\n                    key='/home'\n                    onClick={() => setActiveMenu('/home')}\n                    icon={<HomeOutlined />}>\n                    <Link to=\"/home\">หน้าแรก</Link>\n                </Menu.Item>\n                {type === 'superadmin' ?\n                    <Menu.Item\n                        key='/manage'\n                        onClick={() => setActiveMenu('/manage')}\n                        icon={<UserOutlined />}>\n                        <Link to=\"/manage\" >ผู้ดูแลระบบ</Link>\n                    </Menu.Item>\n                    : <></>\n                }\n                <Menu.Item\n                    key='/profile'\n                    onClick={() => setActiveMenu('/profile')}\n                    icon={<SettingOutlined />}>\n                    <Link to=\"/profile\">โปรไฟล์</Link>\n                </Menu.Item>\n            </Menu>\n        </Sider>\n    );\n}\nexport default Siderbar","/Users/touch2007/intern/web-touch-news/src/components/layout/header/index.js",["105","106","107"],"/Users/touch2007/intern/web-touch-news/src/config.js",[],"/Users/touch2007/intern/web-touch-news/src/pages/viewNews/index.js",["108"],"import { Breadcrumb, Button, Col, Dropdown, Image, Input, Layout, Menu, Row, Select, Tag, message } from 'antd'\nimport { DeleteOutlined, EditOutlined, MoreOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from \"react\";\n\nimport { FroalaView } from 'components/layout/froala/index'\nimport { Link } from \"react-router-dom\";\nimport Modals from 'components/layout/modal'\nimport Timeline from 'components/layout/timeline'\nimport config from 'config'\nimport { httpClient } from 'HttpClient'\nimport imgError from 'assets/image/img_error2.png'\n\nconst { Content } = Layout\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst View = (props) => {\n    const params = props.match.params;\n    const role = localStorage.getItem('role')\n    const [dataNews, setDataNews] = useState({})\n    const [statusNews, setStatusNews] = useState();\n    const [cause, setCause] = useState()\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: null, okText: '' });\n\n    useEffect(() => {\n        console.log('useEffect')\n        getData()\n    }, [params])\n\n    const getData = () => {\n        httpClient.get(config.REACT_APP_BASEURL + '/news/info/' + params.id)\n            .then(function (response) {\n                const code = response.data.code\n                const data = response.data.data\n                const hashtag = response.data.data.hashtag\n                const credit = response.data.data.credit\n                if (code === 200) {\n                    const hashtagMap = hashtag.map((hashtag, key) => {\n                        hashtag = <Tag key={key} color=\"#87d068\">{hashtag}</Tag>\n                        return hashtag\n                    })\n                    const creditMap = credit.map((credit, key) => {\n                        credit = <Tag key={key} color=\"#108ee9\">{credit}</Tag>\n                        return credit\n                    })\n                    setDataNews({ ...data, hashtag: hashtagMap, credit: creditMap })\n                    setStatusNews(data.status)\n                    setCause(data.cause)\n                } else {\n                    setDataNews()\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    const handleSelectStatus = (value) => {\n        setStatusNews(value)\n        console.log('value', value)\n    }\n\n    const changeCause = ({ target: { value } }) => {\n        setCause(value)\n        console.log('value', cause)\n    }\n\n    const submitUpdate = (status) => {\n        const setData = JSON.stringify({\n            \"status\": status,\n            \"cause\": cause,\n        })\n        httpClient.put(config.REACT_APP_BASEURL + '/news/update_status/' + params.id, setData)\n            .then(function (response) {\n                const code = response.data.code\n                if (code === 200) {\n                    message.success(response.data.message);\n                    setDataNews({ ...dataNews, status: status })\n                } else {\n                    message.success(response.data.message);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    const onDelete = () => {\n        setModalData({\n            type: 'confirm',\n            icon: <DeleteOutlined className=\"manage-icon-delete\" />,\n            title: 'คุณต้องการลบข่าวนี้ หรือไม่ ! ',\n            okColor: 'red',\n            okText: 'ลบ',\n            onOk() {\n                offModal()\n                httpClient.delete(config.REACT_APP_BASEURL + '/news/' + params.id)\n                    .then(function (response) {\n                        const code = response.data.code\n                        if (code === 200) {\n                            message.success(response.data.message);\n                            props.history.push(\"/home\")\n                        }\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                        message.error(error.data.message);\n                    })\n            },\n            content: dataNews.topic,\n        })\n        onModal()\n    }\n    const onModal = () => {\n        setIsModalVisible(true)\n    };\n\n    const offModal = () => {\n        setIsModalVisible(false)\n    };\n\n    const onErrorImg = (e) => {\n        e.target.src = imgError\n    }\n\n    const menu = () => {\n        if (dataNews.status === 'ร่าง' || dataNews.status === 'แก้ไข') {\n            return (\n                <Menu>\n                    <Menu.Item >\n                        <Link to={`/home/edit/${params.id}`}>\n                            <EditOutlined style={{ color: 'orange' }}></EditOutlined>\n                            แก้ไข\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item\n                        onClick={() => { onDelete() }}\n                    >\n                        <DeleteOutlined style={{ color: 'red' }} ></DeleteOutlined>\n                    ลบ\n                </Menu.Item>\n                </Menu>\n            );\n        }\n        else {\n            return (\n                <Menu>\n                    <Menu.Item disabled>\n                        <EditOutlined style={{ color: '#DADADA' }} ></EditOutlined>\n                            แก้ไข\n                    </Menu.Item>\n                    <Menu.Item disabled>\n                        <DeleteOutlined style={{ color: '#DADADA' }} ></DeleteOutlined>\n                        ลบ\n                    </Menu.Item>\n                </Menu>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Breadcrumb style={{ margin: '4px 0' }}>\n                <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\n                <Breadcrumb.Item>ข่าว</Breadcrumb.Item>\n            </Breadcrumb>\n            <Content className=\"view-Content\">\n                <Row align=\"middle\">\n                    <Col flex='auto'>\n                        <div className=\"view-titel-news\">{dataNews.topic}</div>\n                    </Col>\n                    {role === 'admin' ?\n                        <Row>\n                            <Col>\n                                {/* สถานะ {dataNews.status} */}\n                            </Col>\n                            <Col flex='15px'>\n                                <Dropdown placement=\"bottomRight\" overlay={menu()}><MoreOutlined style={{ fontSize: '20px' }} /></Dropdown>\n                            </Col>\n                        </Row>\n                        :\n                        null\n                    }\n                </Row>\n                <hr />\n                <Row justify=\"center\">\n                    <Col span={10} justify=\"center\">\n                        <Image\n                            style={{ padding: '20px' }}\n                            width={'100%'}\n                            src={dataNews.image}\n                            onError={onErrorImg}\n                        />\n                    </Col>\n                </Row>\n                <Row justify=\"center\">\n                    <Col span={10}>\n                        <FroalaView\n                            model={dataNews.content}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[0, 10]} >\n                    <Col flex=\"60px\">แฮชแท็ก</Col>\n                    <Col>{dataNews.hashtag}</Col>\n                </Row>\n                <Row gutter={[0, 10]} >\n                    <Col flex=\"60px\">เครดิต</Col>\n                    <Col>{dataNews.credit}</Col>\n                </Row>\n\n                <Row gutter={[0, 10]}>\n                    <Col flex=\"60px\">ผู้ดูแล : </Col>\n                    <Col>{dataNews.by}</Col>\n                </Row>\n                <hr />\n                <Row>\n                    <Col span={12}>\n                        <h3>ไทม์ไลน์</h3>\n                        <div style={{ width: \"400px\", marginTop: '20px' }}>\n                            <Timeline idNews={params.id}></Timeline>\n                        </div>\n                    </Col>\n                    {role === 'superadmin' ?\n                        <Col span={12} >\n                            <h3>เปลี่ยนสถานะข่าว</h3>\n                            <Row style={{ marginTop: '20px' }}>\n                                <Col span={4} >\n                                    สถานะ :\n                            </Col>\n                                <Col span={20}>\n                                    <Input.Group>\n                                        <Select placeholder={statusNews} onChange={handleSelectStatus} className=\"view-Input-Group\">\n                                            {/* <Option value=\"ส่ง\">ส่ง</Option> */}\n                                            <Option value=\"ร่าง\">ร่าง</Option>\n                                            <Option value=\"อนุมัติ\">อนุมัติ</Option>\n                                            <Option value=\"สาธารณะ\">สาธารณะ</Option>\n                                        </Select>\n                                    </Input.Group>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={20} offset={4}>\n                                    {statusNews === 'ร่าง' ?\n                                        <div className=\"view-Input-TextArea\">\n                                            <div style={{ color: 'red' }}>*กรุณากรอกสิ่งที่ต้องแก้ไข</div>\n                                            <TextArea value={cause} autoSize={{ minRows: 1, maxRows: 5 }} onChange={changeCause} />\n                                        </div>\n                                        : null\n                                    }\n                                </Col>\n                            </Row>\n                        </Col>\n                        : null\n                    }\n                </Row>\n                <Row justify=\"end\" style={{ marginTop: '20px' }}>\n                    {role === 'superadmin' ?\n\n                        <>\n                            <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate(statusNews) }} >บันทึก</Button>\n                            <Button className=\"view-Button\" onClick={onDelete} danger>ลบ</Button>\n                            <Link to=\"/home\">\n                                <Button className=\"view-Button\">ยกเลิก</Button>\n                            </Link>\n                        </>\n                        :\n                        dataNews.status === 'ร่าง' || dataNews.status === 'แก้ไข' ?\n                            <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate('ส่ง') }} >ส่ง</Button>\n                            : dataNews.status === 'ส่ง' ?\n                                <Button type=\"primary\" ghost className=\"view-Button\" onClick={() => { submitUpdate('ขอแก้ไข')}} >ขอแก้ไข</Button>\n                                :\n                                null\n                    }\n                    < Link to=\"/home\">\n                        <Button className=\"view-Button\">ย้อนกลับ</Button>\n                    </Link>\n                </Row>\n                <Modals\n                    isModalVisible={isModalVisible}\n                    onOk={modalData.onOk}\n                    onCancel={offModal}\n                    modalData={modalData}\n                >\n                    <p className=\"truncate-text\">{modalData.content}</p>\n                </Modals>\n            </Content>\n        </>\n    );\n}\nexport default View","/Users/touch2007/intern/web-touch-news/src/pages/profile/index.js",["109","110","111"],"import { Avatar, Breadcrumb, Button, Col, Form, Input, Layout, Row, Spin, Upload, message } from 'antd'\nimport { ExclamationCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport React, { useContext, useEffect, useState } from \"react\"\n\nimport { Context } from '../../context'\nimport FormData from 'form-data'\nimport { Link } from \"react-router-dom\";\nimport Modals from 'components/layout/modal'\nimport axios from 'axios'\nimport config from 'config'\nimport { httpClient } from 'HttpClient'\n\nconst { Content } = Layout\nconst layout = {\n  labelCol: {\n    xs: { span: 2 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    span: 20,\n  },\n};\n\nconst Profile = (props) => {\n  const context = useContext(Context)\n  const [formValue] = Form.useForm();\n  const params = props.match.params;\n  const [image, setImage] = useState('')\n  const [spinningImage, setSpinningImage] = useState(false)\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [showInputPass, setShowInputPass] = useState(false)\n  const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: '', okText: '' });\n  const setId = (params.state === 'manage' ? params.id : localStorage.getItem('id'))\n\n  useEffect(() => {\n    if (props.location.pathname === '/profile') {\n      getData()\n      console.log('profile')\n    } else {\n      getDataAdmin()\n      console.log('manage/profile')\n    }\n  }, [params, context])\n\n  const getData = () => {\n    const data = context.user\n    setImage(data.image)\n    formValue.setFieldsValue({\n      email: data.email,\n      firstname: data.firstname,\n      lastname: data.lastname,\n      passwordNew: '',\n      passwordConfirm: ''\n    })\n  }\n\n  const getDataAdmin = () => {\n    httpClient.get(config.REACT_APP_BASEURL + '/user/' + setId)\n      .then(function (response) {\n        const code = response.data.code\n        if (code === 200) {\n          setImage(response.data.data.image)\n          formValue.setFieldsValue({\n            email: response.data.data.email,\n            firstname: response.data.data.firstname,\n            lastname: response.data.data.lastname,\n            passwordNew: '',\n            passwordConfirm: '',\n          })\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  const conFirmPassword = () => {\n    setModalData({\n      type: 'confirm',\n      icon: <ExclamationCircleOutlined className=\"manage-icon-edit\" />,\n      title: 'ยืนยันการสร้างรหัสผ่านใหม่',\n      okColor: 'orange',\n      okText: 'ตกลง',\n      content: 'คุณต้องการยืนยันการสร้างรหัสใหม่นี้หรือไม่ !!! ',\n      onOk() {\n        httpClient.put(config.REACT_APP_BASEURL + '/admin/reset_password/' + setId)\n          .then(function (response) {\n            const code = response.data.code\n            if (code === 201) {\n              setModalData({\n                type: 'show',\n                icon: <UserOutlined className=\"manage-icon-insert\" />,\n                title: 'เปลี่ยนรหัสผ่านสำเร็จ',\n                okColor: '#216258',\n                okText: 'ตกลง',\n                onOk() {\n                  offModal()\n                },\n                content: ({\n                  email: response.data.data.email,\n                  password: response.data.data.password\n                }),\n              })\n              onModal()\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n            message.error('เปลี่ยนรหัสผ่านไม่สำเร็จ');\n          })\n      },\n    })\n    onModal()\n  }\n\n  const cancelUpdate = () => {\n    getData()\n  }\n\n  const submitUpdate = (value) => {\n    if (showInputPass === true) {\n      if (value.passwordNew === value.passwordConfirm) {\n        const setData = JSON.stringify({\n          \"password\": value.passwordNew\n        })\n        httpClient.put(config.REACT_APP_BASEURL + '/user/password/' + setId, setData)\n          .then(function (response) {\n            console.log('response', response)\n            message.success('เปลี่ยนรหัสผ่านสำเร็จ');\n          })\n          .catch(function (error) {\n            message.error('เปลี่ยนรหัสผ่านไม่สำเร็จ');\n          })\n      } else {\n        message.error('รหัสผ่านไม่ตรงกัน');\n      }\n      formValue.setFieldsValue({\n        passwordNew: '',\n        passwordConfirm: ''\n      })\n    }\n    else {\n      const setData = JSON.stringify({\n        \"firstname\": value.firstname,\n        \"lastname\": value.lastname,\n        \"image\": image\n      })\n      httpClient.put(config.REACT_APP_BASEURL + '/user/update/' + setId, setData)\n        .then(function (response) {\n          if (response.data.code === 200) {\n            message.success(response.data.message)\n            context.setData({\n              image: image,\n              firstname: value.firstname,\n              lastname: value.lastname,\n            })\n            let setData = new FormData();\n            setData.append('url', image);\n            axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\n              .then(function (response) {\n                console.log(response)\n              })\n              .catch(function (error) {\n                console.log(error)\n              })\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    }\n  }\n\n  const ShowInputPassword = () => {\n    if (showInputPass === false) {\n      setShowInputPass(true);\n    }\n    else {\n      setShowInputPass(false)\n      formValue.setFieldsValue({\n        passwordNew: '',\n        passwordConfirm: ''\n      })\n    }\n  }\n\n  const onModal = () => {\n    setIsModalVisible(true)\n  };\n\n  const offModal = () => {\n    setIsModalVisible(false)\n  };\n\n  const customRequest = (option) => {\n    // console.log('file.originFileObj', file.originFileObj)\n    setSpinningImage(true)\n    let setData = new FormData();\n    setData.append('sampleFile', option.file);\n    setData.append('save', false)\n    axios.post(config.REACT_APP_IMGAE + '/upload', setData)\n      .then(function (response) {\n        console.log('response', response)\n        const status = response.status\n        const data = response.data\n        if (status === 200) {\n          setImage(data.url)\n          setSpinningImage(false)\n        }\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  };\n\n  return (\n    <>\n      <Breadcrumb style={{ margin: '4px 0' }}>\n        {params.state === 'manage' ?\n          <>\n            <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\n            <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\n          </>\n          :\n          <Breadcrumb.Item>โปรไฟล์</Breadcrumb.Item>\n        }\n      </Breadcrumb>\n      <Content className=\"content-layout-background\">\n        <Row justify='center' gutter={[16, 16]} style={{ marginTop: '20px' }}>\n          <Col>\n            <Spin spinning={spinningImage}>\n              <Avatar\n                size={{ xs: 150, sm: 150, md: 150, lg: 150, xl: 150, xxl: 250 }}\n                src={image} />\n            </Spin>\n          </Col>\n        </Row>\n        <Row justify='center' gutter={[16, 16]}>\n          <Col>\n            <Upload\n              listType=\"picture\"\n              customRequest={customRequest}\n              showUploadList={false}\n            >\n              <Button>อัพโหลดรูปภาพโปรไฟล์</Button>\n            </Upload>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: '20px' }}>\n        <Col xs={{ span: 22, offset: 1 }} sm={{ span: 22, offset: 1 }} md={{ span: 18, offset: 3 }} lg={{ span: 18, offset: 3 }} xl={{ span: 18, offset: 3 }}>\n            <Form\n              form={formValue}\n              onFinish={submitUpdate}\n            >\n              <Form.Item name=\"email\" label='อีเมล' {...layout}>\n                <Input disabled={true}></Input>\n              </Form.Item>\n              <Form.Item name=\"firstname\" label='ชื่อ' {...layout}>\n                <Input disabled={showInputPass}></Input>\n              </Form.Item>\n              <Form.Item name=\"lastname\" label='นามสกุล' {...layout}>\n                <Input disabled={showInputPass}></Input>\n              </Form.Item>\n              <Form.Item className=\"profile-right\">\n                {params.state === 'manage' ?\n                  <a onClick={conFirmPassword}><u>เปลี่ยนรหัสผ่าน</u></a>\n                  :\n                  <a onClick={ShowInputPassword}><u>เปลี่ยนรหัสผ่าน</u></a>\n                }\n              </Form.Item>\n              {showInputPass === true ?\n                <>\n                  <Form.Item\n                    name=\"passwordNew\"\n                    label='รหัสผ่านใหม่' {...layout}>\n                    <Input.Password />\n                  </Form.Item>\n                  <Form.Item\n                    name=\"passwordConfirm\"\n                    label='ยืนยันรหัสผ่านใหม่' {...layout}>\n                    <Input.Password />\n                  </Form.Item>\n                </>\n                :\n                null\n              }\n              <Form.Item className=\"profile-right\">\n                <Button className=\"profile-button\" type=\"primary\" ghost htmlType=\"submit\">บันทึก</Button>\n                {params.state === 'manage' ?\n                  <Link to=\"/manage\">\n                    <Button className=\"profile-button\" style={{ marginLeft: '10px' }}>ยกเลิก</Button>\n                  </Link>\n                  :\n                  <Button className=\"profile-button\" onClick={cancelUpdate} style={{ marginLeft: '10px' }}>ยกเลิก</Button>\n                }\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </Content>\n      <Modals\n        isModalVisible={isModalVisible}\n        onOk={modalData.onOk}\n        onCancel={offModal}\n        modalData={modalData}\n      >\n        {modalData.type === 'show' ?\n          <>\n            <div style={{ marginLeft: '80px' }}>อีเมล : {modalData.content.email}</div>\n            <div style={{ marginLeft: '80px' }}>รหัสผ่าน {modalData.content.password}</div>\n            <div style={{ marginLeft: '40px', marginTop: '20px', color: 'red' }}>*ระบบจะแสดงข้อมูลเพียงครั้งเดียว*</div>\n          </>\n          :\n          <p style={{ marginLeft: '80px' }}>{modalData.content}</p>\n        }\n      </Modals>\n    </>\n  );\n}\nexport default Profile","/Users/touch2007/intern/web-touch-news/src/pages/admin/createNews/index.js",["112","113","114"],"import { AutoComplete, Breadcrumb, Button, Col, Form, Image, Input, Layout, Row, Select, Spin, Tooltip, Upload, message } from 'antd'\nimport React, { useContext, useEffect, useState } from \"react\"\n\nimport { Context } from '../../../context'\nimport FormData from 'form-data'\nimport { Froala } from 'components/layout/froala/index'\nimport { Link } from \"react-router-dom\";\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport Tag from 'components/layout/tag/index'\nimport axios from 'axios'\nimport config from 'config'\nimport { httpClient } from 'HttpClient'\nimport imgError from 'assets/image/img_error2.png'\n\nconst { Content } = Layout\nconst { Option } = Select\n\nconst CreateNews = (props) => {\n    const params = props.match.params\n    const context = useContext(Context)\n    const [form] = Form.useForm()\n    const [category, setCategory] = useState(null)\n    const [credit, setCredit] = useState({ inputValue: '', tags: [] })\n    const [hashtag, setHashtag] = useState({ inputValue: '', tags: [] })\n    const [hashtagSource, setHashtagSource] = useState(null)\n    const [image, setImage] = useState('error')\n    const [spinningImage, setSpinningImage] = useState(false)\n    const [newsContent, setNewsContent] = useState('')\n    const [imageContent, setImageContent] = useState()\n    const [cause, setCause] = useState('')\n    useEffect(() => {\n        getCategory()\n        getHashtag()\n        if (params.type === 'edit') {\n            getData()\n        }\n    }, [props.location.pathname])\n\n    const getData = () => {\n        httpClient.get(config.REACT_APP_BASEURL + '/news/info/' + params.id)\n            .then(function (response) {\n                const code = response.data.code\n                const data = response.data.data\n                const hashtag = response.data.data.hashtag\n                const credit = response.data.data.credit\n                if (code === 200) {\n                    form.setFieldsValue({\n                        topic: data.topic,\n                        category: data.category,\n                    })\n                    setNewsContent(data.content)\n                    setImage(data.image)\n                    setCause(data.cause)\n                    setCredit({\n                        tags:credit,\n                        inputValue:''\n                    })\n                    setHashtag({\n                        tags:hashtag,\n                        inputValue:''\n                    })\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    const getCategory = () => {\n        httpClient.get(config.REACT_APP_BASEURL + '/category')\n            .then(function (response) {\n                const data = response.data.data.data_list\n                const code = response.data.code\n                if (code === 200) {\n                    const dataMap = data.map((item) => {\n                        item = <Option key={item.id} value={item.category}>{item.category}</Option>\n                        return item\n                    })\n                    setCategory(dataMap)\n\n                }\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n\n    const getHashtag = () => {\n        httpClient.get(config.REACT_APP_BASEURL + '/hashtag')\n            .then(function (response) {\n                const code = response.data.code\n                if (code === 200) {\n                    const data = response.data?.data\n                    const dataMap = data?.map((item) => {\n                        item = { value: item }\n                        return item\n                    })\n                    setHashtagSource(dataMap)\n                }else{\n                    console.log('map Error')\n                }\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n\n\n    const uploadImage = (option) => {\n        // console.log('file.originFileObj', file.originFileObj)\n        setSpinningImage(true)\n        let setData = new FormData();\n        setData.append('sampleFile', option.file);\n        setData.append('save', false)\n        axios.post(config.REACT_APP_IMGAE + '/upload', setData)\n            .then(function (response) {\n                console.log('response', response)\n                const status = response.status\n                const data = response.data\n                if (status === 200) {\n                    setImage(data.url)\n                    setSpinningImage(false)\n                }\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n\n    const submitCreate = async () => {\n        try {\n            const values = await form.validateFields();\n            const setData = JSON.stringify({\n                \"category\": values.category,\n                \"topic\": values.topic,\n                \"content\": newsContent,\n                \"image\": image,\n                \"credit\": credit.tags,\n                \"hashtag\": hashtag.tags,\n                \"status\": \"ร่าง\",\n            })\n            httpClient.post(config.REACT_APP_BASEURL + '/news', setData)\n                .then(function (response) {\n                    const code = response.data.code\n                    if (code === 201) {\n                        message.success(response.data.message)\n                        let setData = new FormData();\n                        setData.append('url', image);\n                        axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\n                            .then(function (response) {\n                                console.log(response)\n                            })\n                            .catch(function (error) {\n                                console.log(error)\n                            })\n                        if (imageContent !== undefined) {\n                            imageContent.map((item) => {\n                                let setData = new FormData();\n                                setData.append('url', item);\n                                axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\n                                    .then(function (response) {\n                                        console.log(response)\n                                    })\n                                    .catch(function (error) {\n                                        console.log(error)\n                                    })\n                            })\n                        }\n                        props.history.push(`/home/view/${response.data.data}`)\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error)\n                })\n        } catch (errorInfo) {\n            console.log('Failed:', errorInfo);\n        }\n    }\n\n    const submitEdit = async () => {\n        try {\n            const values = await form.validateFields();\n            const setData = JSON.stringify({\n                \"category\": values.category,\n                \"topic\": values.topic,\n                \"content\": newsContent,\n                \"image\": image,\n                \"credit\": credit.tags,\n                \"hashtag\": hashtag.tags,\n                \"status\": \"แก้ไข\",\n                \"by\": context.user.firstname + \" \" + context.user.lastname\n            })\n            httpClient.put(config.REACT_APP_BASEURL + `/news/update/${params.id}`, setData)\n                .then(function (response) {\n                    const code = response.data.code\n                    if (code === 200) {\n                        message.success(response.data.message)\n                        let setData = new FormData();\n                        setData.append('url', image);\n                        axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\n                            .then(function (response) {\n                                console.log(response)\n                            })\n                            .catch(function (error) {\n                                console.log(error)\n                            })\n                        if (imageContent !== undefined) {\n                            imageContent.map((item) => {\n                                let setData = new FormData();\n                                setData.append('url', item);\n                                axios.post(config.REACT_APP_IMGAE + '/savefile', setData)\n                                    .then(function (response) {\n                                        console.log(response)\n                                    })\n                                    .catch(function (error) {\n                                        console.log(error)\n                                    })\n                            })\n                        }\n                        props.history.push(`/home/view/${params.id}`)\n                        console.log('params.id', params.id)\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error)\n                })\n        } catch (errorInfo) {\n            console.log('Failed:', errorInfo);\n        }\n    }\n    \n\n    const changeNewsContent = html => {\n        console.log('html', html)\n        console.log('imageContent', imageContent)\n        setNewsContent(html)\n    }\n    const creditChange = (e) => {\n        setCredit({ ...credit, inputValue: e.target.value });\n    };\n    const creditClose = removedTag => {\n        const tags = credit.tags.filter(tag => tag !== removedTag);\n        setCredit({ tags })\n    }\n    const creditConfirm = (e) => {\n        let tags = [...credit.tags];\n        tags.push(credit.inputValue)\n        setCredit({\n            tags,\n            inputValue: '',\n        });\n    }\n\n    const hashtagChange = (inputValue) => {\n        setHashtag({ ...hashtag, inputValue: inputValue });\n    }\n\n    const hashtagClose = removedTag => {\n        const tags = hashtag.tags.filter(tag => tag !== removedTag);\n        setHashtag({\n            tags,\n            inputValue: ''\n        })\n    }\n\n    const hashtagConfirm = () => {\n        let tags = [...hashtag.tags];\n        tags.push(hashtag.inputValue)\n        setHashtag({\n            tags,\n            inputValue: '',\n        });\n    }\n\n    const onErrorImg = (e) => {\n        e.target.src = imgError\n    }\n\n    return (\n        <>\n            {params.type === \"create\" ?\n                <Breadcrumb style={{ margin: '4px 0' }}>\n                    <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\n                    <Breadcrumb.Item>เพิ่ม</Breadcrumb.Item>\n                </Breadcrumb>\n                :\n                <Breadcrumb style={{ margin: '4px 0' }}>\n                    <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\n                    <Breadcrumb.Item>แก้ไข</Breadcrumb.Item>\n                </Breadcrumb>\n            }\n            <Content className=\"create-content\">\n                <Form\n                    form={form}\n                    layout=\"vertical\"\n                >\n                    <Row>\n                        <Col xs={24} sm={24} md={24} lg={24} xl={12} >\n                            <Row gutter={[0, 0]} justify='center'>\n                                <Col span={16}>\n                                    <Spin spinning={spinningImage}>\n                                        <Image\n                                            width={'100%'}\n                                            // height='50xp\n                                            src={image}\n                                            onError={onErrorImg}\n                                        />\n                                    </Spin>\n                                </Col>\n                            </Row>\n                            <Row gutter={[0, 0]} justify='center'>\n                                <Col>\n                                    <div style={{ color: '#A0A0A0' }}>อัตราส่วนภาพ 1:1 ขนาด 1080x1080 px</div>\n                                </Col>\n                            </Row>\n                            <Row gutter={[0, 16]} justify='center'>\n                                <Col>\n                                    <Upload\n                                        listType=\"picture\"\n                                        customRequest={uploadImage}\n                                        showUploadList={false}\n                                    >\n                                        <Button>อัพโหลดรูปภาพ</Button>\n                                    </Upload>\n                                </Col>\n                            </Row>\n                            <Row gutter={[8, 8]} align='middle' style={{marginTop:'20px'}}>\n                                <Col style={{ textAlign: 'right'}} span={5}>\n                                    <div>เครติด</div>\n                                </Col>\n                                <Col span={16}>\n                                    <Input\n                                        value={credit.inputValue}\n                                        onChange={creditChange}\n                                        // onBlur={handleTagConfirm}\n                                        onPressEnter={creditConfirm}\n                                    />\n                                </Col>\n                                <Col span={2}>\n                                    <Tooltip placement=\"bottom\" title=\"เพิ่มเครติด\">\n                                        <PlusCircleOutlined className=\"create-icon\" onClick={creditConfirm}></PlusCircleOutlined>\n                                    </Tooltip>\n                                </Col>\n                            </Row>\n                            <Row gutter={[8, 16]} align='middle'>\n                                <Col offset={5}>\n                                    <Tag\n                                        data={credit.tags}\n                                        onClose={creditClose}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row gutter={[8, 8]} align='middle'>\n                                <Col style={{ textAlign: 'right' }} span={5}>\n                                    <div>แฮชแท็ก</div>\n                                </Col>\n                                <Col span={16}>\n                                    <Input.Group>\n                                        <AutoComplete\n                                            style={{ width: '100%', }}\n                                            value={hashtag.inputValue}\n                                            onChange={hashtagChange}\n                                            options={hashtagSource}\n                                            filterOption={(inputValue, option) =>\n                                                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                                            }\n                                        />\n                                    </Input.Group>\n                                </Col>\n                                <Col span={2}>\n                                    <Tooltip placement=\"bottom\" title=\"เพิ่มแฮชแท็ก\">\n                                        <PlusCircleOutlined onClick={hashtagConfirm} className=\"create-icon\"></PlusCircleOutlined>\n                                    </Tooltip>\n                                </Col>\n                            </Row>\n                            <Row gutter={[8, 16]} align='middle'>\n                                <Col offset={5}>\n                                    <Tag\n                                        data={hashtag.tags}\n                                        onClose={hashtagClose}\n                                    />\n                                </Col>\n                            </Row>\n                            {params.type === 'edit' ?\n                                <Row gutter={[8, 8]}>\n                                    <Col style={{ textAlign: 'right' }} span={5}>\n                                        <div>สิ่งที่ควรแก้ไข</div>\n                                    </Col>\n                                    <Col span={17}>\n                                        <div style={{ color: 'red' }}>คำแนะนำจาก Super Admin</div>\n                                        <div>{cause}</div>\n                                    </Col>\n                                </Row>\n                            :\n                                null\n                            }\n                        </Col>\n                        <Col xs={{ span: 18, offset: 3 }} sm={{ span: 18, offset: 3 }} md={{ span: 18, offset: 3 }} lg={{ span: 18, offset: 3 }} xl={{ span: 12, offset: 0 }}>\n                            <Form.Item\n                                label=\"ประเภทข่าว\"\n                                name=\"category\"\n                                rules={[{ required: true, message: 'Please input your username!' }]}\n                            >\n                                <Select placeholder=\"เลือกประเภท\">\n                                    {category}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                label=\"หัวเรื่อง\"\n                                name=\"topic\"\n                                rules={[{ required: true, message: 'กรุณาใส่ข้อมูล' }]}\n                            >\n                                <Input></Input>\n                            </Form.Item>\n                            <Form.Item\n                                label=\"เนื้อหาข่าว\"\n                            >\n                                <Froala\n                                    onModelChange={changeNewsContent}\n                                    setImageContent={setImageContent}\n                                    mode={newsContent}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row justify=\"end\">\n                    {params.type === 'create' ?\n                        <Button className=\"create-button\" type=\"primary\" ghost onClick={submitCreate} >บันทึก</Button>\n                        :\n                        <Button className=\"create-button\" type=\"primary\" ghost onClick={submitEdit} >บันทึก</Button>\n                        }\n                        <Link to=\"/home\">\n                            <Button className=\"create-button\">ยกเลิก</Button>\n                        </Link>\n                    </Row>\n                </Form>\n            </Content>\n        </>\n    );\n}\nexport default CreateNews","/Users/touch2007/intern/web-touch-news/src/pages/super/manage/index.js",["115","116"],"import { Breadcrumb, Button, Col, Form, Input, Layout, Row, Space, Switch, Tooltip, message } from 'antd';\nimport { DeleteOutlined, EditOutlined, ExclamationCircleOutlined, PlusOutlined, UserOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from \"react\"\n\nimport { Link } from \"react-router-dom\"\nimport Modals from 'components/layout/modal'\nimport Tables from 'components/layout/table'\nimport config from 'config'\nimport { httpClient } from 'HttpClient'\n\nconst { Search } = Input;\nconst { Content } = Layout;\n\nconst Manage = () => {\n  const [formValue] = Form.useForm();\n  const [dataSource, setDataSource] = useState()\n  const [loading, setLoading] = useState(true)\n  const [dataFilter, setDataFilter] = useState(\"\")\n  const [dataSearch, setDataSearch] = useState(\"\")\n  const [current, setCurrent] = useState(1)\n  const [pagination, setPagination] = useState({ pageCurrent: 1, perPage: 15, totalPage: 1 })\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: '', okText: '', onOk: null });\n\n  useEffect(() => {\n    getData()\n  }, [dataFilter, current, isModalVisible, dataSearch])\n\n  const getData = () => {\n    const params = {\n      // per_page: '10',\n      page: current,\n      filters: `firstname:like:${dataSearch}`\n    }\n    httpClient.get(config.REACT_APP_BASEURL + '/admin', { params })\n      .then(function (response) {\n        console.log('response', response.data.code)\n        const code = response.data.code\n        const data = response.data.data.data_list\n        setPagination({\n          currentPage: response.data.data.pagination.current_page,\n          perPage: response.data.data.pagination.per_page,\n          totalPage: response.data.data.pagination.total\n        })\n        if (code === 200) {\n          const dataMap = data.map((item) => {\n            item.key = item.id\n            item.email = item.email\n            item.name = item.firstname + ' ' + item.lastname\n            // item.status = item.status\n            const status = item.status\n            item.status = status === 'active' ? true : false\n            return item\n          })\n          setDataSource(dataMap)\n          setLoading(false)\n        } else {\n          setLoading(false)\n          setDataSource(data)\n          // message.error(response.data.message)\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  const onInsert = (value) => {\n    const setData = JSON.stringify({\n      \"email\": value.email\n    })\n    httpClient.post(config.REACT_APP_BASEURL + '/admin', setData)\n      .then(function (response) {\n        const code = response.data.code\n        if (code === 201) {\n          setModalData({\n            type: 'show',\n            icon: <UserOutlined className=\"manage-icon-insert\" />,\n            title: 'เพิ่มผู้ดูแลระบบใหม่',\n            okColor: '#216258',\n            okText: 'ตกลง',\n            onOk() {\n              setIsModalVisible(false)\n            },\n            content: ({\n              email: response.data.data.email,\n              password: response.data.data.password\n            }),\n          })\n          onModal()\n          setDataFilter(response.data.data.email)\n          formValue.setFieldsValue({\n            email: \"\"\n          })\n        }\n        else if (code === 200) {\n          message.error(response.data.message);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  const onDelete = (record) => {\n    console.log('Delete id : ', record.key)\n    setModalData({\n      type: 'confirm',\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\n      title: 'คุณต้องการลบผู้ดูแลระบบนี้ หรือไม่ ! ',\n      okColor: 'red',\n      okText: 'ลบ',\n      content: record.email,\n      onOk() {\n        setIsModalVisible(false)\n        httpClient.delete(config.REACT_APP_BASEURL + '/admin/' + record.key)\n          .then(function (response) {\n            const code = response.data.code\n            if (code === 200) {\n              message.success('ลบผู้ดูแลระบบสำเร็จ');\n              setDataFilter(record.key)\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n            message.error('ลบไม่สำเร็จ');\n          })\n      },\n    })\n    onModal()\n  }\n\n  const onSuspend = (checked, record) => {\n    if (checked === false) {\n      setModalData({\n        type: 'confirm',\n        icon: <ExclamationCircleOutlined className=\"manage-icon-suspend\" />,\n        title: 'คุณต้องการระงับผู้ดูแลระบบนี้ หรือไม่ ! ',\n        okColor: 'orange',\n        content: record.email,\n        okText: 'ระงับ',\n        onOk() {\n          const setData = JSON.stringify({\n            \"status\": \"inactive\"\n          })\n          console.log('setData', setData)\n          httpClient.put(config.REACT_APP_BASEURL + '/admin/suspend/' + record.key, setData)\n            .then(function (response) {\n              console.log('response', response)\n              const code = response.data.code\n              if (code === 200) {\n                message.success('ระงับผู้ดูแลระบบสำเร็จ');\n                setDataFilter(record.key)\n              }\n            })\n            .catch(function (error) {\n              console.log(error);\n              message.error('ระงับผู้ดูแลระบบไม่สำเร็จ');\n            })\n          offModal()\n        },\n      })\n      onModal()\n    }\n    else {\n      const setData = JSON.stringify({\n        \"status\": \"active\"\n      })\n      console.log('setData', setData)\n      httpClient.put(config.REACT_APP_BASEURL + '/admin/suspend/' + record.key, setData)\n        .then(function (response) {\n          const code = response.data.code\n          if (code === 200) {\n            message.success('อนุญาติผู้ดูแลระบบสำเร็จ');\n          }\n        })\n        .catch(function (error) {\n          message.error('อนุญาติผู้ดูแลระบบไม่สำเร็จ');\n        })\n    }\n  }\n\n  const onSearch = (value) => {\n    setDataSearch(value)\n    setLoading(true)\n  }\n\n  const currentPage = (value) => {\n    setCurrent(value);\n    console.log('currentPage', current)\n  }\n\n  const onModal = () => {\n    setIsModalVisible(true)\n  };\n\n  const offModal = () => {\n    setIsModalVisible(false)\n  };\n\n  const columns = [\n    {\n      title: 'อีเมล',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'ชื่อ - นามสกุล',\n      dataIndex: 'name',\n      key: 'name',\n      responsive: ['md'],\n    },\n    {\n      title: '',\n      width: '15%',\n      key: 'action',\n      render: (record) => (\n        <Space >\n          <Tooltip placement=\"bottom\" title=\"แก้ไข\">\n            <Link to={`/manage/profile/${record.key}`}>\n            <Button  icon={<EditOutlined className=\"manage-icon-edit\" />} size={'middle'} /> \n              {/* <EditOutlined className=\"manage-icon-edit\" /> */}\n            </Link>\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"ลบ\">\n            <Button  icon={<DeleteOutlined className=\"manage-icon-delete\"/>} size={'middle'} onClick={() => { onDelete(record) }} /> \n            {/* <DeleteOutlined className=\"manage-icon-delete\" onClick={() => { onDelete(record) }} /> */}\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"ระงับ\">\n            <Switch size=\"small\" defaultChecked={record.status} onClick={(e) => { onSuspend(e, record) }} />\n          </Tooltip>\n        </Space>\n      ),\n    },\n  ];\n  return (\n    <>\n      <Breadcrumb style={{ margin: '4px 0' }}>\n        <Breadcrumb.Item>ผู้ดูแลระบบ</Breadcrumb.Item>\n      </Breadcrumb>\n      <Content className=\"manage-content\">\n        <Row >\n          <Col xs={24} sm={24} md={14} lg={14} xl={16} style={{ marginBottom: '5px' }}>\n            <Form form={formValue} name=\"email\" layout=\"inline\" onFinish={onInsert}>\n              <Form.Item>\n                <div className=\"manage-Text\">ผู้ดูแลระบบ</div>\n              </Form.Item>\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    required: false,\n                    pattern: /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i,\n                    message: 'Enter a valid email address!',\n                  },\n                  {\n                    required: true,\n                    message: \"Please enter your E-mail!\"\n                  }\n                ]}\n                className=\"manage-Input\">\n                <Input placeholder=\"กรอกอีเมล\" />\n              </Form.Item>\n              <Form.Item>\n                <Button className=\"manage-button\" type=\"primary\" htmlType=\"submit\" icon={<PlusOutlined />}>เพิ่ม</Button>\n              </Form.Item>\n            </Form>\n          </Col>\n          <Col md={10} lg={10} xl={8} style={{ textAlign: 'right', paddingLeft: '80px' }}>\n            <Search placeholder=\"ค้นหา\" className=\"manage-search\" onSearch={onSearch} />\n          </Col>\n        </Row>\n        <Tables\n          loading={loading}\n          columns={columns}\n          dataSource={dataSource}\n          setCurrentPage={currentPage}\n          pageCurrent={pagination.pageCurrent}\n          perPage={pagination.perPage}\n          totalPage={pagination.totalPage}\n        />\n      </Content>\n      <Modals\n        isModalVisible={isModalVisible}\n        onOk={modalData.onOk}\n        onCancel={offModal}\n        modalData={modalData}\n      >\n        {modalData.type === 'show' ?\n          <>\n            <div style={{ marginLeft: '80px' }}>อีเมล : {modalData.content.email}</div>\n            <div style={{ marginLeft: '80px' }}>รหัสผ่าน {modalData.content.password}</div>\n            <div style={{ marginLeft: '40px', marginTop: '20px', color: 'red' }}>*ระบบจะแสดงข้อมูลเพียงครั้งเดียว*</div>\n          </>\n          :\n          <p style={{ marginLeft: '80px' }}>{modalData.content}</p>\n        }\n      </Modals>\n    </>\n  );\n}\nexport default Manage","/Users/touch2007/intern/web-touch-news/src/HttpClient.js",[],"/Users/touch2007/intern/web-touch-news/src/pages/super/home/index.js",["117","118","119","120"],"import { Breadcrumb, Col, Dropdown, Input, Layout, Menu, Row, Select, message } from 'antd';\nimport { DeleteOutlined, FieldTimeOutlined, MoreOutlined, SendOutlined, TeamOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport Modals from 'components/layout/modal'\nimport Tables from 'components/layout/table'\nimport Timeline from 'components/layout/timeline'\nimport config from 'config'\nimport { httpClient } from 'HttpClient'\n\nconst { Content } = Layout;\nconst { Search } = Input;\nconst { Option } = Select;\n\n\nconst Home = () => {\n  const [dataSource, setDataSource] = useState()\n  const [category, setCategory] = useState(null)\n  const [total, setTotal] = useState({ all: 1, date: 0, admin: 0 })\n  const [loading, setLoading] = useState(true)\n  const [pagination, setPagination] = useState({ current: 1, sorter: 'dsc', pageSize: 1, total: 1 })\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: null, okText: '' });\n  const [dataSearch, setDataSearch] = useState({ category: '', filter: '' })\n  // const [current, setCurrent] = useState(1)\n  const [filters, setFilters] = useState()\n\n  useEffect(() => {\n    getData()\n    getCategory()\n    getTotalAdmin()\n    getTotalNews()\n  }, [pagination.current, pagination.sorter, dataSearch, filters])\n\n  const getData = () => {\n    setLoading(true)\n    var params = new URLSearchParams()\n    params.append(\"page\", pagination.current)\n    params.append(\"sorts\", `created_at:${pagination.sorter}`)\n    params.append(\"filters\", `topic:like:${dataSearch.filter}`)\n    params.append(\"filters\", `category:like:${dataSearch.category}`)\n    httpClient.get(config.REACT_APP_BASEURL + '/news/super', { params })\n      .then(function (response) {\n        // console.log('response', response)\n        const code = response.data.code\n        const data = response.data.data.data_list\n        setLoading(false)\n        if (code === 200) {\n          setPagination({\n            current: response.data.data.pagination.current_page,\n            pageSize: response.data.data.pagination.per_page,\n            total: response.data.data.pagination.total,\n            sorter: response.data.data.pagination.sorts[0].value\n          })\n          const dataMap = data.map((item) => {\n            item.key = item.id\n            return item\n          })\n          setDataSource(dataMap)\n        } else {\n          setDataSource()\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  const getTotalNews = () => {\n    httpClient.get(config.REACT_APP_BASEURL + '/news/countsuper')\n      .then(function (response) {\n        const code = response.data.code\n        if (code === 200) {\n          setTotal({...total,\n            all:response.data.data[0],\n            date:response.data.data[1]\n          })\n        } else {\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  const getTotalAdmin = () => {\n    httpClient.get(config.REACT_APP_BASEURL + '/admin/count')\n      .then(function (response) {\n        console.log('response', response)\n        const code = response.data.code\n        if (code === 200) {\n          console.log('total', response.data.data)\n          setTotal({...total,\n            admin:response.data.data[0]\n          })\n        } else {\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  const getCategory = () => {\n    httpClient.get(config.REACT_APP_BASEURL + '/category')\n      .then(function (response) {\n        const data = response.data.data.data_list\n        const code = response.data.code\n        if (code === 200) {\n          const dataMap = data.map((item) => {\n            item = <Option key={item.id} value={item.category}>{item.category}</Option>\n            return item\n          })\n          setCategory(dataMap)\n\n        }\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n\n  const onCategory = (value) => {\n    setDataSearch({ ...dataSearch, category: value })\n  }\n  const onSearch = (value) => {\n    setDataSearch({ ...dataSearch, filter: value })\n  }\n\n  const onDelete = (record) => {\n    setModalData({\n      type: 'confirm',\n      icon: <DeleteOutlined className=\"manage-icon-delete\" />,\n      title: 'คุณต้องการลบข่าวนี้ หรือไม่ ! ',\n      okColor: 'red',\n      okText: 'ลบ',\n      onOk() {\n        offModal()\n        httpClient.delete(config.REACT_APP_BASEURL + '/news/' + record.key)\n          .then(function (response) {\n            const code = response.data.code\n            if (code === 200) {\n              message.success(response.data.message);\n              setFilters(record.key)\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n            message.error(error.data.message);\n          })\n      },\n      content: record.topic,\n    })\n    onModal()\n  }\n\n  const onTimeline = (record) => {\n    setModalData({\n      type: 'show',\n      icon: <FieldTimeOutlined className=\"manage-icon-insert\" />,\n      title: 'ไทม์ไลน์',\n      okColor: '#216258',\n      okText: 'ตกลง',\n      onOk() {\n        setIsModalVisible(false)\n      },\n      content: <Timeline idNews={record.key} />,\n    })\n    onModal()\n  }\n\n  const onModal = () => {\n    setIsModalVisible(true)\n  }\n\n  const offModal = () => {\n    setIsModalVisible(false)\n  }\n\n  const menu = (record) => {\n    return (\n      <Menu>\n        <Menu.Item onClick={() => { onTimeline(record); }}>\n          <FieldTimeOutlined style={{ color: '@blue-6' }}></FieldTimeOutlined>\n          ไทม์ไลน์\n      </Menu.Item>\n        <Menu.Item onClick={() => { onDelete(record); }}>\n          <DeleteOutlined style={{ color: '@red-6' }}></DeleteOutlined>\n          ลบ\n      </Menu.Item>\n      </Menu>\n    );\n\n  }\n\n  const columns = [\n    {\n      title: 'วันที่',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      width: '120px',\n      sorter: true,\n      // sorter: (a, b) => a.created_at.length - b.created_at.length,\n      // sortOrder: sortedInfo.columnKey === 'created_at' && sortedInfo.order,\n    },\n    {\n      title: 'หัวข้อ',\n      key: 'topic',\n      width: '400px',\n      ellipsis: true,\n      render: (record) => (<Link to={`/home/view/${record.key}`} style={{ color: '#000' }}>{record.topic}</Link>),\n    },\n    {\n      title: 'ผู้ดูแลระบบ',\n      dataIndex: 'by',\n      key: 'by',\n      width: '200px',\n    },\n    {\n      title: 'ประเภท',\n      dataIndex: 'category',\n      key: 'category',\n      width: '200px',\n    },\n    {\n      title: 'สถานะ',\n      dataIndex: 'status',\n      key: 'status',\n      width: '100px',\n    },\n    {\n      title: '',\n      width: '50px',\n      key: 'action',\n      fixed: 'right',\n      render: (record) => (<Dropdown placement=\"bottomRight\" overlay={menu(record)}><MoreOutlined /></Dropdown>),\n    }\n  ];\n  return (\n    <>\n      <Breadcrumb style={{ margin: '4px 0' }}>\n        <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\n      </Breadcrumb>\n      <Content className=\"home-Content\">\n        <Row gutter={[16, 16]} >\n          <Col xs={24} sm={12} md={12} lg={8} xl={8} >\n            <div className=\"home-Box-Left\">\n              <Row align=\"middle\" style={{ height: '100%' }}>\n                <Col span={8} offset={4}>\n                  <UnorderedListOutlined className=\"home-Icon\" />\n                </Col>\n                <Col span={8}>\n                  <p className=\"home-Number\">{total.all}</p>\n                  <p className=\"home-Text\">ข่าวทั้งหมด</p>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col xs={24} sm={12} md={12} lg={8} xl={8} >\n            <div className=\"home-Box-Center\" >\n              <Row align=\"middle\" style={{ height: '100%' }}>\n                <Col span={8} offset={4}>\n                  <TeamOutlined className=\"home-Icon\" />\n                </Col>\n                <Col span={8}>\n                  <p className=\"home-Number\">{total.admin}</p>\n                  <p className=\"home-Text\">ผู้ดูแลระบบ</p>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col xs={24} sm={12} md={12} lg={8} xl={8} >\n            <div className=\"home-Box-Right\" >\n              <Row align=\"middle\" style={{ height: '100%' }}>\n                <Col span={8} offset={4}>\n                  <SendOutlined className=\"home-Icon\" />\n                </Col>\n                <Col span={8}>\n                  <p className=\"home-Number\">{total.date}</p>\n                  <p className=\"home-Text\">ข่าววันนี้</p>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: '20px' }}>\n          <Col xs={24} sm={24} md={12} lg={12} xl={16}>\n            <div className=\"home-Text-List\">รายการ</div>\n          </Col>\n          <Col xs={12} sm={10} md={6} lg={6} xl={4}>\n            <Input.Group className=\"home-Input-Group\">\n              <Select placeholder=\"เลือกประเภท\" className=\"home-Select\" onChange={onCategory}>\n                <Option value=\"\">ทั้งหมด</Option>\n                {category}\n              </Select>\n            </Input.Group>\n          </Col>\n          <Col xs={12} sm={10} md={6} lg={6} xl={4}>\n            <Search placeholder=\"ค้นหา\" onSearch={onSearch}></Search>\n          </Col>\n        </Row>\n        <Tables\n          loading={loading}\n          columns={columns}\n          dataSource={dataSource}\n          setPagination={setPagination}\n          pagination={pagination}\n        />\n\n        <Modals\n          isModalVisible={isModalVisible}\n          onOk={modalData.onOk}\n          onCancel={offModal}\n          modalData={modalData}\n        >\n          {modalData.type === 'show' ?\n            <div style={{ marginTop: '5px' }}>{modalData.content}</div>\n            :\n            <p className=\"truncate-text\">{modalData.content}</p>\n          }\n        </Modals>\n      </Content>\n    </>\n  );\n}\nexport default Home","/Users/touch2007/intern/web-touch-news/src/pages/admin/home/index.js",["121","122","123","124"],"import { Breadcrumb, Button, Col, Input, Layout, Row, Select, Space, Tooltip, message } from 'antd';\nimport { DeleteOutlined, EditOutlined, FieldTimeOutlined, PlusOutlined, SendOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport Modals from 'components/layout/modal';\nimport Tables from 'components/layout/table';\nimport Timeline from 'components/layout/timeline';\nimport config from 'config';\nimport { httpClient } from 'HttpClient';\n\nconst { Content } = Layout;\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst Home = () => {\n  const [dataSource, setDataSource] = useState();\n  const [total, setTotal] = useState({ all: 0, sdnt: 0, draft: 0 });\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({ current: 1, sorter: 'dsc', pageSize: 1, total: 1 });\n  const [category, setCategory] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalData, setModalData] = useState({ type: '', icon: null, title: '', okColor: '', content: null, okText: '' });\n  const [dataSearch, setDataSearch] = useState({ category: '', filter: '' });\n  const [filters, setFilters] = useState();\n\n  useEffect(() => {\n    // getData()\n    // getTotalNews()\n    // getCategory()\n  }, [pagination.current, pagination.sorter, dataSearch, filters]);\n\n  const getData = () => {\n    var params = new URLSearchParams();\n    params.append('page', pagination.current);\n    params.append('sorts', `created_at:${pagination.sorter}`);\n    params.append('filters', `topic:like:${dataSearch.filter}`);\n    params.append('filters', `category:like:${dataSearch.category}`);\n    httpClient\n      .get(config.REACT_APP_BASEURL + '/news/admin', { params })\n      .then(function (response) {\n        console.log('response', response);\n        const code = response.data.code;\n        const data = response.data.data.data_list;\n        setLoading(false);\n        if (code === 200) {\n          setPagination({\n            current: response.data.data.pagination.current_page,\n            pageSize: response.data.data.pagination.per_page,\n            total: response.data.data.pagination.total,\n            sorter: response.data.data.pagination.sorts[0].value,\n          });\n          const dataMap = data.map((item) => {\n            item.key = item.id;\n            item.date = item.created_at;\n            return item;\n          });\n          setDataSource(dataMap);\n        } else {\n          setDataSource();\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const getTotalNews = () => {\n    httpClient\n      .get(config.REACT_APP_BASEURL + '/news/countadmin')\n      .then(function (response) {\n        console.log('response', response);\n        const code = response.data.code;\n        if (code === 200) {\n          console.log('total', response.data.data);\n          setTotal({ ...total, all: pagination.total, sdnt: response.data.data[1], draft: response.data.data[0] });\n        } else {\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const getCategory = () => {\n    httpClient\n      .get(config.REACT_APP_BASEURL + '/category')\n      .then(function (response) {\n        const data = response.data.data.data_list;\n        const code = response.data.code;\n        if (code === 200) {\n          const dataMap = data.map((item) => {\n            item = (\n              <Option key={item.id} value={item.category}>\n                {item.category}\n              </Option>\n            );\n            return item;\n          });\n          setCategory(dataMap);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const onSearch = (value) => {\n    setDataSearch({ ...dataSearch, filter: value });\n    setLoading(true);\n  };\n\n  const onCategory = (value) => {\n    setDataSearch({ ...dataSearch, category: value });\n    setLoading(true);\n  };\n\n  const onTimeline = (record) => {\n    setModalData({\n      type: 'show',\n      icon: <FieldTimeOutlined className=\"admin-icon-time\" />,\n      title: 'ไทม์ไลน์',\n      okColor: '#216258',\n      okText: 'ตกลง',\n      onOk() {\n        offModal();\n      },\n      content: <Timeline idNews={record.key} />,\n    });\n    onModal();\n  };\n\n  const onDelete = (record) => {\n    setModalData({\n      type: 'confirm',\n      icon: <DeleteOutlined className=\"admin-icon-delete\" />,\n      title: 'คุณต้องการลบข่าวนี้ หรือไม่ ! ',\n      okColor: 'red',\n      okText: 'ลบ',\n      onOk() {\n        offModal();\n        httpClient\n          .delete(config.REACT_APP_BASEURL + '/news/' + record.key)\n          .then(function (response) {\n            const code = response.data.code;\n            if (code === 200) {\n              message.success(response.data.message);\n              setFilters(record.key);\n            } else {\n              message.success(response.data.message);\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n            message.error('เชื่อมต่อ Server ล้มเหลว');\n          });\n      },\n      content: record.topic,\n    });\n    onModal();\n  };\n\n  const onModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const offModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const columns = [\n    {\n      title: 'วันที่',\n      dataIndex: 'date',\n      key: 'date',\n      width: '120px',\n      sorter: true,\n    },\n    {\n      title: 'หัวข้อ',\n      dataIndex: 'topic',\n      key: 'topic',\n      width: '500px',\n      ellipsis: true,\n      render: (text, record) => (\n        <Link to={`/home/view/${record.key}`} style={{ color: '#000' }}>\n          {record.topic}\n        </Link>\n      ),\n    },\n    {\n      title: 'ประเภท',\n      dataIndex: 'category',\n      key: 'category',\n      width: '150px',\n    },\n    {\n      title: 'สถานะ',\n      dataIndex: 'status',\n      key: 'status',\n      width: '100px',\n    },\n    {\n      title: '',\n      fixed: 'right',\n      width: '140px',\n      key: 'action',\n      render: (text, record) => (\n        <Space>\n          <Tooltip placement=\"bottom\" title=\"ไทม์ไลน์\">\n            {/* <FieldTimeOutlined className=\"admin-icon-time\" onClick={() => { onTimeline(record) }}></FieldTimeOutlined> */}\n            <Button\n              icon={<FieldTimeOutlined className=\"admin-icon-time\" />}\n              size={'middle'}\n              onClick={() => {\n                onTimeline(record);\n              }}\n            />\n          </Tooltip>\n          {record.status === 'ร่าง' || record.status === 'แก้ไข' ? (\n            <>\n              <Tooltip placement=\"bottom\" title=\"แก้ไข\">\n                <Link to={`/home/edit/${record.key}`}>\n                  {/* <EditOutlined className=\"admin-icon-edit\" /> */}\n                  <Button icon={<EditOutlined className=\"admin-icon-edit\" />} size={'middle'} />\n                </Link>\n              </Tooltip>\n              <Tooltip placement=\"bottom\" title=\"ลบ\">\n                {/* <DeleteOutlined className=\"admin-icon-delete\" onClick={() => { onDelete(record) }} /> */}\n                <Button\n                  icon={<DeleteOutlined className=\"admin-icon-delete\" />}\n                  size={'middle'}\n                  onClick={() => {\n                    onDelete(record);\n                  }}\n                />\n              </Tooltip>\n            </>\n          ) : (\n            <>\n              <Tooltip placement=\"bottom\" title=\"แก้ไข\">\n                {/* <EditOutlined className=\"admin-icon-disabled\" /> */}\n                <Button icon={<EditOutlined className=\"admin-icon-disabled\" />} size={'middle'} disabled />\n              </Tooltip>\n              <Tooltip placement=\"bottom\" title=\"ลบ\">\n                {/* <DeleteOutlined className=\"admin-icon-disabled\" /> */}\n                <Button icon={<DeleteOutlined className=\"admin-icon-disabled\" />} size={'middle'} disabled />\n              </Tooltip>\n            </>\n          )}\n        </Space>\n      ),\n    },\n  ];\n  return (\n    <>\n      <Breadcrumb style={{ margin: '4px 0' }}>\n        <Breadcrumb.Item>หน้าแรก</Breadcrumb.Item>\n      </Breadcrumb>\n      <Content className=\"admin-home-content\">\n        <Row gutter={[16, 16]}>\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\n            <div className=\"admin-home-box-left\">\n              <Row align=\"middle\" style={{ height: '100%' }}>\n                <Col span={8} offset={4}>\n                  <UnorderedListOutlined className=\"admin-home-icon\" />\n                </Col>\n                <Col span={8}>\n                  <p className=\"admin-home-number\"> {total.all} </p>\n                  <p className=\"admin-home-text\">ข่าวทั้งหมด</p>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\n            <div className=\"admin-home-box-center\">\n              <Row align=\"middle\" style={{ height: '100%' }}>\n                <Col span={8} offset={4}>\n                  <SendOutlined className=\"admin-home-icon\" />\n                </Col>\n                <Col span={8}>\n                  <p className=\"admin-home-number\"> {total.sdnt} </p>\n                  <p className=\"admin-home-text\">ข่าวส่งแล้ว</p>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col xs={24} sm={12} md={12} lg={8} xl={8}>\n            <div className=\"admin-home-box-right\">\n              <Row align=\"middle\" style={{ height: '100%' }}>\n                <Col span={8} offset={4}>\n                  <EditOutlined className=\"admin-home-icon\" />\n                </Col>\n                <Col span={8}>\n                  <p className=\"admin-home-number\"> {total.draft} </p>\n                  <p className=\"admin-home-text\">ข่าวร่าง</p>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n        <Row gutter={8} style={{ marginTop: '20px' }}>\n          <Col flex=\"auto\" xs={24} sm={12} md={12} lg={16} xl={16}>\n            <div className=\"admin-home-text-list\">รายการ</div>\n          </Col>\n          <Col flex=\"220px\">\n            <Input.Group>\n              <Select placeholder=\"เลือกประเภท\" style={{ width: '100%' }} onChange={onCategory}>\n                <Option value=\"\">ทั้งหมด</Option>\n                {category}\n              </Select>\n            </Input.Group>\n          </Col>\n          <Col flex=\"220px\">\n            <Search placeholder=\"ค้นหา\" onSearch={onSearch}></Search>\n          </Col>\n          <Col flex=\"100px\">\n            <Link to=\"/home/create\">\n              <Button style={{ width: '100%' }} type=\"primary\" icon={<PlusOutlined />}>\n                เพิ่ม\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        <Tables loading={loading} columns={columns} dataSource={dataSource} setPagination={setPagination} pagination={pagination} />\n        <Modals isModalVisible={isModalVisible} onOk={modalData.onOk} onCancel={offModal} modalData={modalData}>\n          {modalData.type === 'show' ? (\n            <div style={{ marginTop: '5px', marginLeft: '20px' }}>{modalData.content}</div>\n          ) : (\n            <p className=\"truncate-text\">{modalData.content}</p>\n          )}\n        </Modals>\n      </Content>\n    </>\n  );\n};\nexport default Home;\n","/Users/touch2007/intern/web-touch-news/src/components/layout/froala/index.js",[],"/Users/touch2007/intern/web-touch-news/src/components/layout/tag/index.js",[],"/Users/touch2007/intern/web-touch-news/src/components/layout/modal/index.js",[],"/Users/touch2007/intern/web-touch-news/src/components/layout/table/index.js",["125"],"import React, { useEffect, useState } from \"react\";\n\nimport { Table } from 'antd'\n\nconst Tables = (props) => {\n    const [order, setOrder] = useState()\n    const onChange = (pagination, filters, sorter, extra) => {\n        if(sorter.order !== undefined){\n            console.log('sorter', sorter.order.substring(0,sorter.order.length -3))\n            setOrder(sorter.order.substring(0,sorter.order.length -3))\n        }\n        props.setPagination({...props.pagination,\n            current:pagination.current,\n            sorter:order,\n        })\n    } \n    return (\n        <>\n            <Table\n                loading={props.loading}\n                columns={props.columns}\n                dataSource={props.dataSource}\n                onChange={onChange}\n                style={{ marginTop: '10px' }}\n                pagination={props.pagination}\n                scroll={{ x: 'fit-content'}}\n            />\n        </>\n    );\n}\nexport default Tables","/Users/touch2007/intern/web-touch-news/src/components/layout/timeline/index.js",["126"],"import { CheckOutlined, EditOutlined, FileExclamationOutlined, FileTextOutlined, GlobalOutlined, SendOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from \"react\";\n\nimport { Timeline } from 'antd'\nimport config from 'config'\nimport { httpClient } from 'HttpClient'\n\nconst Timelines = (props) => {\n    const [timeLine, setTimeLine] = useState(null)\n    useEffect(() => {\n        getTimeLine()\n    },[props.idNews])\n\n    const getTimeLine = () => {\n        httpClient.get(config.REACT_APP_BASEURL + '/news/timeline/' + props.idNews)\n            .then(function (response) {\n                console.log('timeline', response)\n                const code = response.data.code\n                const data = response.data.data.timeline\n                if(code === 200){\n                    const dataMap = data.map((item,key)=>{\n                        if(item.Status === 'ร่าง'){\n                            item =  <Timeline.Item key={key} dot={<FileTextOutlined style={{ color: 'gray' }} />} label={item.Status}>{item.Date}</Timeline.Item>\n                        }else if(item.Status === 'ส่ง'){\n                            item = <Timeline.Item  key={key} dot={<SendOutlined style={{ color: 'blue' }} />} label={item.Status}>{item.Date}</Timeline.Item>\n                        }else if(item.Status === 'ขอแก้ไข'){\n                            item = <Timeline.Item  key={key} dot={<FileExclamationOutlined style={{ color: 'orange' }} />} label={item.Status}>{item.Date}</Timeline.Item>\n                        }else if(item.Status === 'อนุมัติ'){\n                            item = <Timeline.Item  key={key} dot={<CheckOutlined style={{ color: 'green' }} />} label={item.Status}>{item.Date}</Timeline.Item>\n                        }else if(item.Status === 'สาธารณะ'){\n                            item = <Timeline.Item  key={key} dot={<GlobalOutlined style={{ color: 'red' }} />} label={item.Status}>{item.Date}</Timeline.Item>\n                        }else if(item.Status === 'แก้ไข'){\n                            item = <Timeline.Item  key={key} dot={<EditOutlined style={{ color: 'orange' }} />} label={item.Status}>{item.Date}</Timeline.Item>\n                        }else{}\n                    return item\n                    })\n                    setTimeLine(dataMap)\n\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    return (\n        <Timeline mode=\"left\">\n            {timeLine}\n        </Timeline>\n    );\n}\nexport default Timelines",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":21,"column":8,"nodeType":"137","endLine":21,"endColumn":33,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":1,"column":18,"nodeType":"133","messageId":"134","endLine":1,"endColumn":23},{"ruleId":"131","severity":1,"message":"140","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":22},{"ruleId":"135","severity":1,"message":"141","line":24,"column":8,"nodeType":"137","endLine":24,"endColumn":51,"suggestions":"142"},{"ruleId":"135","severity":1,"message":"141","line":29,"column":8,"nodeType":"137","endLine":29,"endColumn":16,"suggestions":"143"},{"ruleId":"135","severity":1,"message":"144","line":43,"column":6,"nodeType":"137","endLine":43,"endColumn":23,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":266,"column":19,"nodeType":"148","endLine":266,"endColumn":48},{"ruleId":"146","severity":1,"message":"147","line":268,"column":19,"nodeType":"148","endLine":268,"endColumn":50},{"ruleId":"135","severity":1,"message":"149","line":37,"column":8,"nodeType":"137","endLine":37,"endColumn":33,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":157,"column":53,"nodeType":"153","messageId":"154","endLine":157,"endColumn":55},{"ruleId":"151","severity":1,"message":"152","line":208,"column":53,"nodeType":"153","messageId":"154","endLine":208,"endColumn":55},{"ruleId":"135","severity":1,"message":"141","line":27,"column":6,"nodeType":"137","endLine":27,"endColumn":55,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":48,"column":26,"nodeType":"158","messageId":"159","endLine":48,"endColumn":36},{"ruleId":"135","severity":1,"message":"160","line":34,"column":6,"nodeType":"137","endLine":34,"endColumn":66,"suggestions":"161"},{"ruleId":"131","severity":1,"message":"162","line":36,"column":9,"nodeType":"133","messageId":"134","endLine":36,"endColumn":16},{"ruleId":"131","severity":1,"message":"163","line":71,"column":9,"nodeType":"133","messageId":"134","endLine":71,"endColumn":21},{"ruleId":"131","severity":1,"message":"164","line":119,"column":9,"nodeType":"133","messageId":"134","endLine":119,"endColumn":20},{"ruleId":"135","severity":1,"message":"160","line":31,"column":6,"nodeType":"137","endLine":31,"endColumn":66,"suggestions":"165"},{"ruleId":"131","severity":1,"message":"162","line":33,"column":9,"nodeType":"133","messageId":"134","endLine":33,"endColumn":16},{"ruleId":"131","severity":1,"message":"163","line":68,"column":9,"nodeType":"133","messageId":"134","endLine":68,"endColumn":21},{"ruleId":"131","severity":1,"message":"164","line":85,"column":9,"nodeType":"133","messageId":"134","endLine":85,"endColumn":20},{"ruleId":"131","severity":1,"message":"166","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"167","line":12,"column":7,"nodeType":"137","endLine":12,"endColumn":21,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'sha256' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'Badge' is defined but never used.","'BellOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["172"],["173"],"React Hook useEffect has missing dependencies: 'getData', 'getDataAdmin', and 'props.location.pathname'. Either include them or remove the dependency array.",["174"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getData' and 'params.type'. Either include them or remove the dependency array.",["175"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["176"],"no-self-assign","'item.email' is assigned to itself.","MemberExpression","selfAssignment","React Hook useEffect has an unnecessary dependency: 'pagination.current'. Either exclude it or remove the dependency array. Mutable values like 'pagination.current' aren't valid dependencies because mutating them doesn't re-render the component.",["177"],"'getData' is assigned a value but never used.","'getTotalNews' is assigned a value but never used.","'getCategory' is assigned a value but never used.",["178"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getTimeLine'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"192","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [props, props.location.pathname]",{"range":"197","text":"198"},"Update the dependencies array to be: [user.firstname, user.lastname, user.image, getData]",{"range":"199","text":"200"},"Update the dependencies array to be: [getData, params]",{"range":"201","text":"202"},"Update the dependencies array to be: [params, context, props.location.pathname, getData, getDataAdmin]",{"range":"203","text":"204"},"Update the dependencies array to be: [getData, params.type, props.location.pathname]",{"range":"205","text":"206"},"Update the dependencies array to be: [dataFilter, current, isModalVisible, dataSearch, getData]",{"range":"207","text":"208"},"Update the dependencies array to be: [pagination.sorter, dataSearch, filters]",{"range":"209","text":"210"},{"range":"211","text":"210"},"Update the dependencies array to be: [getTimeLine, props.idNews]",{"range":"212","text":"213"},[704,729],"[props, props.location.pathname]",[717,760],"[user.firstname, user.lastname, user.image, getData]",[1168,1176],"[getData, params]",[1412,1429],"[params, context, props.location.pathname, getData, getDataAdmin]",[1477,1502],"[getData, params.type, props.location.pathname]",[1167,1216],"[dataFilter, current, isModalVisible, dataSearch, getData]",[1449,1509],"[pagination.sorter, dataSearch, filters]",[1361,1421],[424,438],"[getTimeLine, props.idNews]"]